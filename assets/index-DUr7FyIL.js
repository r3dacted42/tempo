(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))n(r);new MutationObserver(r=>{for(const s of r)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function t(r){const s={};return r.integrity&&(s.integrity=r.integrity),r.referrerPolicy&&(s.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?s.credentials="include":r.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(r){if(r.ep)return;r.ep=!0;const s=t(r);fetch(r.href,s)}})();/**
* @vue/shared v3.5.17
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**//*! #__NO_SIDE_EFFECTS__ */function _d(i){const e=Object.create(null);for(const t of i.split(","))e[t]=1;return t=>t in e}const Tt={},eo=[],bi=()=>{},Ux=()=>!1,uu=i=>i.charCodeAt(0)===111&&i.charCodeAt(1)===110&&(i.charCodeAt(2)>122||i.charCodeAt(2)<97),yd=i=>i.startsWith("onUpdate:"),pn=Object.assign,xd=(i,e)=>{const t=i.indexOf(e);t>-1&&i.splice(t,1)},Nx=Object.prototype.hasOwnProperty,gt=(i,e)=>Nx.call(i,e),je=Array.isArray,to=i=>hu(i)==="[object Map]",Uv=i=>hu(i)==="[object Set]",Qe=i=>typeof i=="function",Wt=i=>typeof i=="string",Ji=i=>typeof i=="symbol",Dt=i=>i!==null&&typeof i=="object",bd=i=>(Dt(i)||Qe(i))&&Qe(i.then)&&Qe(i.catch),Nv=Object.prototype.toString,hu=i=>Nv.call(i),Ox=i=>hu(i).slice(8,-1),Ov=i=>hu(i)==="[object Object]",Md=i=>Wt(i)&&i!=="NaN"&&i[0]!=="-"&&""+parseInt(i,10)===i,Jo=_d(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),fu=i=>{const e=Object.create(null);return t=>e[t]||(e[t]=i(t))},Fx=/-(\w)/g,yr=fu(i=>i.replace(Fx,(e,t)=>t?t.toUpperCase():"")),Bx=/\B([A-Z])/g,_s=fu(i=>i.replace(Bx,"-$1").toLowerCase()),Fv=fu(i=>i.charAt(0).toUpperCase()+i.slice(1)),ah=fu(i=>i?`on${Fv(i)}`:""),vr=(i,e)=>!Object.is(i,e),lh=(i,...e)=>{for(let t=0;t<i.length;t++)i[t](...e)},Tf=(i,e,t,n=!1)=>{Object.defineProperty(i,e,{configurable:!0,enumerable:!1,writable:n,value:t})},zx=i=>{const e=parseFloat(i);return isNaN(e)?i:e},kx=i=>{const e=Wt(i)?Number(i):NaN;return isNaN(e)?i:e};let Vp;const du=()=>Vp||(Vp=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function pu(i){if(je(i)){const e={};for(let t=0;t<i.length;t++){const n=i[t],r=Wt(n)?Wx(n):pu(n);if(r)for(const s in r)e[s]=r[s]}return e}else if(Wt(i)||Dt(i))return i}const Vx=/;(?![^(]*\))/g,Hx=/:([^]+)/,Gx=/\/\*[^]*?\*\//g;function Wx(i){const e={};return i.replace(Gx,"").split(Vx).forEach(t=>{if(t){const n=t.split(Hx);n.length>1&&(e[n[0].trim()]=n[1].trim())}}),e}function mu(i){let e="";if(Wt(i))e=i;else if(je(i))for(let t=0;t<i.length;t++){const n=mu(i[t]);n&&(e+=n+" ")}else if(Dt(i))for(const t in i)i[t]&&(e+=t+" ");return e.trim()}const Xx="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",Yx=_d(Xx);function Bv(i){return!!i||i===""}const zv=i=>!!(i&&i.__v_isRef===!0),Ef=i=>Wt(i)?i:i==null?"":je(i)||Dt(i)&&(i.toString===Nv||!Qe(i.toString))?zv(i)?Ef(i.value):JSON.stringify(i,kv,2):String(i),kv=(i,e)=>zv(e)?kv(i,e.value):to(e)?{[`Map(${e.size})`]:[...e.entries()].reduce((t,[n,r],s)=>(t[ch(n,s)+" =>"]=r,t),{})}:Uv(e)?{[`Set(${e.size})`]:[...e.values()].map(t=>ch(t))}:Ji(e)?ch(e):Dt(e)&&!je(e)&&!Ov(e)?String(e):e,ch=(i,e="")=>{var t;return Ji(i)?`Symbol(${(t=i.description)!=null?t:e})`:i};/**
* @vue/reactivity v3.5.17
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let ln;class Vv{constructor(e=!1){this.detached=e,this._active=!0,this._on=0,this.effects=[],this.cleanups=[],this._isPaused=!1,this.parent=ln,!e&&ln&&(this.index=(ln.scopes||(ln.scopes=[])).push(this)-1)}get active(){return this._active}pause(){if(this._active){this._isPaused=!0;let e,t;if(this.scopes)for(e=0,t=this.scopes.length;e<t;e++)this.scopes[e].pause();for(e=0,t=this.effects.length;e<t;e++)this.effects[e].pause()}}resume(){if(this._active&&this._isPaused){this._isPaused=!1;let e,t;if(this.scopes)for(e=0,t=this.scopes.length;e<t;e++)this.scopes[e].resume();for(e=0,t=this.effects.length;e<t;e++)this.effects[e].resume()}}run(e){if(this._active){const t=ln;try{return ln=this,e()}finally{ln=t}}}on(){++this._on===1&&(this.prevScope=ln,ln=this)}off(){this._on>0&&--this._on===0&&(ln=this.prevScope,this.prevScope=void 0)}stop(e){if(this._active){this._active=!1;let t,n;for(t=0,n=this.effects.length;t<n;t++)this.effects[t].stop();for(this.effects.length=0,t=0,n=this.cleanups.length;t<n;t++)this.cleanups[t]();if(this.cleanups.length=0,this.scopes){for(t=0,n=this.scopes.length;t<n;t++)this.scopes[t].stop(!0);this.scopes.length=0}if(!this.detached&&this.parent&&!e){const r=this.parent.scopes.pop();r&&r!==this&&(this.parent.scopes[this.index]=r,r.index=this.index)}this.parent=void 0}}}function Hv(i){return new Vv(i)}function za(){return ln}function gu(i,e=!1){ln&&ln.cleanups.push(i)}let wt;const uh=new WeakSet;class Gv{constructor(e){this.fn=e,this.deps=void 0,this.depsTail=void 0,this.flags=5,this.next=void 0,this.cleanup=void 0,this.scheduler=void 0,ln&&ln.active&&ln.effects.push(this)}pause(){this.flags|=64}resume(){this.flags&64&&(this.flags&=-65,uh.has(this)&&(uh.delete(this),this.trigger()))}notify(){this.flags&2&&!(this.flags&32)||this.flags&8||Xv(this)}run(){if(!(this.flags&1))return this.fn();this.flags|=2,Hp(this),Yv(this);const e=wt,t=oi;wt=this,oi=!0;try{return this.fn()}finally{qv(this),wt=e,oi=t,this.flags&=-3}}stop(){if(this.flags&1){for(let e=this.deps;e;e=e.nextDep)Td(e);this.deps=this.depsTail=void 0,Hp(this),this.onStop&&this.onStop(),this.flags&=-2}}trigger(){this.flags&64?uh.add(this):this.scheduler?this.scheduler():this.runIfDirty()}runIfDirty(){Af(this)&&this.run()}get dirty(){return Af(this)}}let Wv=0,Qo,ea;function Xv(i,e=!1){if(i.flags|=8,e){i.next=ea,ea=i;return}i.next=Qo,Qo=i}function Sd(){Wv++}function wd(){if(--Wv>0)return;if(ea){let e=ea;for(ea=void 0;e;){const t=e.next;e.next=void 0,e.flags&=-9,e=t}}let i;for(;Qo;){let e=Qo;for(Qo=void 0;e;){const t=e.next;if(e.next=void 0,e.flags&=-9,e.flags&1)try{e.trigger()}catch(n){i||(i=n)}e=t}}if(i)throw i}function Yv(i){for(let e=i.deps;e;e=e.nextDep)e.version=-1,e.prevActiveLink=e.dep.activeLink,e.dep.activeLink=e}function qv(i){let e,t=i.depsTail,n=t;for(;n;){const r=n.prevDep;n.version===-1?(n===t&&(t=r),Td(n),qx(n)):e=n,n.dep.activeLink=n.prevActiveLink,n.prevActiveLink=void 0,n=r}i.deps=e,i.depsTail=t}function Af(i){for(let e=i.deps;e;e=e.nextDep)if(e.dep.version!==e.version||e.dep.computed&&(jv(e.dep.computed)||e.dep.version!==e.version))return!0;return!!i._dirty}function jv(i){if(i.flags&4&&!(i.flags&16)||(i.flags&=-17,i.globalVersion===ya)||(i.globalVersion=ya,!i.isSSR&&i.flags&128&&(!i.deps&&!i._dirty||!Af(i))))return;i.flags|=2;const e=i.dep,t=wt,n=oi;wt=i,oi=!0;try{Yv(i);const r=i.fn(i._value);(e.version===0||vr(r,i._value))&&(i.flags|=128,i._value=r,e.version++)}catch(r){throw e.version++,r}finally{wt=t,oi=n,qv(i),i.flags&=-3}}function Td(i,e=!1){const{dep:t,prevSub:n,nextSub:r}=i;if(n&&(n.nextSub=r,i.prevSub=void 0),r&&(r.prevSub=n,i.nextSub=void 0),t.subs===i&&(t.subs=n,!n&&t.computed)){t.computed.flags&=-5;for(let s=t.computed.deps;s;s=s.nextDep)Td(s,!0)}!e&&!--t.sc&&t.map&&t.map.delete(t.key)}function qx(i){const{prevDep:e,nextDep:t}=i;e&&(e.nextDep=t,i.prevDep=void 0),t&&(t.prevDep=e,i.nextDep=void 0)}let oi=!0;const $v=[];function Wi(){$v.push(oi),oi=!1}function Xi(){const i=$v.pop();oi=i===void 0?!0:i}function Hp(i){const{cleanup:e}=i;if(i.cleanup=void 0,e){const t=wt;wt=void 0;try{e()}finally{wt=t}}}let ya=0;class jx{constructor(e,t){this.sub=e,this.dep=t,this.version=t.version,this.nextDep=this.prevDep=this.nextSub=this.prevSub=this.prevActiveLink=void 0}}class vu{constructor(e){this.computed=e,this.version=0,this.activeLink=void 0,this.subs=void 0,this.map=void 0,this.key=void 0,this.sc=0,this.__v_skip=!0}track(e){if(!wt||!oi||wt===this.computed)return;let t=this.activeLink;if(t===void 0||t.sub!==wt)t=this.activeLink=new jx(wt,this),wt.deps?(t.prevDep=wt.depsTail,wt.depsTail.nextDep=t,wt.depsTail=t):wt.deps=wt.depsTail=t,Zv(t);else if(t.version===-1&&(t.version=this.version,t.nextDep)){const n=t.nextDep;n.prevDep=t.prevDep,t.prevDep&&(t.prevDep.nextDep=n),t.prevDep=wt.depsTail,t.nextDep=void 0,wt.depsTail.nextDep=t,wt.depsTail=t,wt.deps===t&&(wt.deps=n)}return t}trigger(e){this.version++,ya++,this.notify(e)}notify(e){Sd();try{for(let t=this.subs;t;t=t.prevSub)t.sub.notify()&&t.sub.dep.notify()}finally{wd()}}}function Zv(i){if(i.dep.sc++,i.sub.flags&4){const e=i.dep.computed;if(e&&!i.dep.subs){e.flags|=20;for(let n=e.deps;n;n=n.nextDep)Zv(n)}const t=i.dep.subs;t!==i&&(i.prevSub=t,t&&(t.nextSub=i)),i.dep.subs=i}}const mc=new WeakMap,ns=Symbol(""),Cf=Symbol(""),xa=Symbol("");function cn(i,e,t){if(oi&&wt){let n=mc.get(i);n||mc.set(i,n=new Map);let r=n.get(t);r||(n.set(t,r=new vu),r.map=n,r.key=t),r.track()}}function Bi(i,e,t,n,r,s){const o=mc.get(i);if(!o){ya++;return}const a=l=>{l&&l.trigger()};if(Sd(),e==="clear")o.forEach(a);else{const l=je(i),c=l&&Md(t);if(l&&t==="length"){const u=Number(n);o.forEach((h,f)=>{(f==="length"||f===xa||!Ji(f)&&f>=u)&&a(h)})}else switch((t!==void 0||o.has(void 0))&&a(o.get(t)),c&&a(o.get(xa)),e){case"add":l?c&&a(o.get("length")):(a(o.get(ns)),to(i)&&a(o.get(Cf)));break;case"delete":l||(a(o.get(ns)),to(i)&&a(o.get(Cf)));break;case"set":to(i)&&a(o.get(ns));break}}wd()}function $x(i,e){const t=mc.get(i);return t&&t.get(e)}function Ts(i){const e=pt(i);return e===i?e:(cn(e,"iterate",xa),$n(i)?e:e.map(en))}function _u(i){return cn(i=pt(i),"iterate",xa),i}const Zx={__proto__:null,[Symbol.iterator](){return hh(this,Symbol.iterator,en)},concat(...i){return Ts(this).concat(...i.map(e=>je(e)?Ts(e):e))},entries(){return hh(this,"entries",i=>(i[1]=en(i[1]),i))},every(i,e){return Ri(this,"every",i,e,void 0,arguments)},filter(i,e){return Ri(this,"filter",i,e,t=>t.map(en),arguments)},find(i,e){return Ri(this,"find",i,e,en,arguments)},findIndex(i,e){return Ri(this,"findIndex",i,e,void 0,arguments)},findLast(i,e){return Ri(this,"findLast",i,e,en,arguments)},findLastIndex(i,e){return Ri(this,"findLastIndex",i,e,void 0,arguments)},forEach(i,e){return Ri(this,"forEach",i,e,void 0,arguments)},includes(...i){return fh(this,"includes",i)},indexOf(...i){return fh(this,"indexOf",i)},join(i){return Ts(this).join(i)},lastIndexOf(...i){return fh(this,"lastIndexOf",i)},map(i,e){return Ri(this,"map",i,e,void 0,arguments)},pop(){return Po(this,"pop")},push(...i){return Po(this,"push",i)},reduce(i,...e){return Gp(this,"reduce",i,e)},reduceRight(i,...e){return Gp(this,"reduceRight",i,e)},shift(){return Po(this,"shift")},some(i,e){return Ri(this,"some",i,e,void 0,arguments)},splice(...i){return Po(this,"splice",i)},toReversed(){return Ts(this).toReversed()},toSorted(i){return Ts(this).toSorted(i)},toSpliced(...i){return Ts(this).toSpliced(...i)},unshift(...i){return Po(this,"unshift",i)},values(){return hh(this,"values",en)}};function hh(i,e,t){const n=_u(i),r=n[e]();return n!==i&&!$n(i)&&(r._next=r.next,r.next=()=>{const s=r._next();return s.value&&(s.value=t(s.value)),s}),r}const Kx=Array.prototype;function Ri(i,e,t,n,r,s){const o=_u(i),a=o!==i&&!$n(i),l=o[e];if(l!==Kx[e]){const h=l.apply(i,s);return a?en(h):h}let c=t;o!==i&&(a?c=function(h,f){return t.call(this,en(h),f,i)}:t.length>2&&(c=function(h,f){return t.call(this,h,f,i)}));const u=l.call(o,c,n);return a&&r?r(u):u}function Gp(i,e,t,n){const r=_u(i);let s=t;return r!==i&&($n(i)?t.length>3&&(s=function(o,a,l){return t.call(this,o,a,l,i)}):s=function(o,a,l){return t.call(this,o,en(a),l,i)}),r[e](s,...n)}function fh(i,e,t){const n=pt(i);cn(n,"iterate",xa);const r=n[e](...t);return(r===-1||r===!1)&&Cd(t[0])?(t[0]=pt(t[0]),n[e](...t)):r}function Po(i,e,t=[]){Wi(),Sd();const n=pt(i)[e].apply(i,t);return wd(),Xi(),n}const Jx=_d("__proto__,__v_isRef,__isVue"),Kv=new Set(Object.getOwnPropertyNames(Symbol).filter(i=>i!=="arguments"&&i!=="caller").map(i=>Symbol[i]).filter(Ji));function Qx(i){Ji(i)||(i=String(i));const e=pt(this);return cn(e,"has",i),e.hasOwnProperty(i)}class Jv{constructor(e=!1,t=!1){this._isReadonly=e,this._isShallow=t}get(e,t,n){if(t==="__v_skip")return e.__v_skip;const r=this._isReadonly,s=this._isShallow;if(t==="__v_isReactive")return!r;if(t==="__v_isReadonly")return r;if(t==="__v_isShallow")return s;if(t==="__v_raw")return n===(r?s?cb:n0:s?t0:e0).get(e)||Object.getPrototypeOf(e)===Object.getPrototypeOf(n)?e:void 0;const o=je(e);if(!r){let l;if(o&&(l=Zx[t]))return l;if(t==="hasOwnProperty")return Qx}const a=Reflect.get(e,t,Rt(e)?e:n);return(Ji(t)?Kv.has(t):Jx(t))||(r||cn(e,"get",t),s)?a:Rt(a)?o&&Md(t)?a:a.value:Dt(a)?r?cs(a):ka(a):a}}class Qv extends Jv{constructor(e=!1){super(!1,e)}set(e,t,n,r){let s=e[t];if(!this._isShallow){const l=xr(s);if(!$n(n)&&!xr(n)&&(s=pt(s),n=pt(n)),!je(e)&&Rt(s)&&!Rt(n))return l?!1:(s.value=n,!0)}const o=je(e)&&Md(t)?Number(t)<e.length:gt(e,t),a=Reflect.set(e,t,n,Rt(e)?e:r);return e===pt(r)&&(o?vr(n,s)&&Bi(e,"set",t,n):Bi(e,"add",t,n)),a}deleteProperty(e,t){const n=gt(e,t);e[t];const r=Reflect.deleteProperty(e,t);return r&&n&&Bi(e,"delete",t,void 0),r}has(e,t){const n=Reflect.has(e,t);return(!Ji(t)||!Kv.has(t))&&cn(e,"has",t),n}ownKeys(e){return cn(e,"iterate",je(e)?"length":ns),Reflect.ownKeys(e)}}class eb extends Jv{constructor(e=!1){super(!0,e)}set(e,t){return!0}deleteProperty(e,t){return!0}}const tb=new Qv,nb=new eb,ib=new Qv(!0);const Rf=i=>i,al=i=>Reflect.getPrototypeOf(i);function rb(i,e,t){return function(...n){const r=this.__v_raw,s=pt(r),o=to(s),a=i==="entries"||i===Symbol.iterator&&o,l=i==="keys"&&o,c=r[i](...n),u=t?Rf:e?gc:en;return!e&&cn(s,"iterate",l?Cf:ns),{next(){const{value:h,done:f}=c.next();return f?{value:h,done:f}:{value:a?[u(h[0]),u(h[1])]:u(h),done:f}},[Symbol.iterator](){return this}}}}function ll(i){return function(...e){return i==="delete"?!1:i==="clear"?void 0:this}}function sb(i,e){const t={get(r){const s=this.__v_raw,o=pt(s),a=pt(r);i||(vr(r,a)&&cn(o,"get",r),cn(o,"get",a));const{has:l}=al(o),c=e?Rf:i?gc:en;if(l.call(o,r))return c(s.get(r));if(l.call(o,a))return c(s.get(a));s!==o&&s.get(r)},get size(){const r=this.__v_raw;return!i&&cn(pt(r),"iterate",ns),Reflect.get(r,"size",r)},has(r){const s=this.__v_raw,o=pt(s),a=pt(r);return i||(vr(r,a)&&cn(o,"has",r),cn(o,"has",a)),r===a?s.has(r):s.has(r)||s.has(a)},forEach(r,s){const o=this,a=o.__v_raw,l=pt(a),c=e?Rf:i?gc:en;return!i&&cn(l,"iterate",ns),a.forEach((u,h)=>r.call(s,c(u),c(h),o))}};return pn(t,i?{add:ll("add"),set:ll("set"),delete:ll("delete"),clear:ll("clear")}:{add(r){!e&&!$n(r)&&!xr(r)&&(r=pt(r));const s=pt(this);return al(s).has.call(s,r)||(s.add(r),Bi(s,"add",r,r)),this},set(r,s){!e&&!$n(s)&&!xr(s)&&(s=pt(s));const o=pt(this),{has:a,get:l}=al(o);let c=a.call(o,r);c||(r=pt(r),c=a.call(o,r));const u=l.call(o,r);return o.set(r,s),c?vr(s,u)&&Bi(o,"set",r,s):Bi(o,"add",r,s),this},delete(r){const s=pt(this),{has:o,get:a}=al(s);let l=o.call(s,r);l||(r=pt(r),l=o.call(s,r)),a&&a.call(s,r);const c=s.delete(r);return l&&Bi(s,"delete",r,void 0),c},clear(){const r=pt(this),s=r.size!==0,o=r.clear();return s&&Bi(r,"clear",void 0,void 0),o}}),["keys","values","entries",Symbol.iterator].forEach(r=>{t[r]=rb(r,i,e)}),t}function Ed(i,e){const t=sb(i,e);return(n,r,s)=>r==="__v_isReactive"?!i:r==="__v_isReadonly"?i:r==="__v_raw"?n:Reflect.get(gt(t,r)&&r in n?t:n,r,s)}const ob={get:Ed(!1,!1)},ab={get:Ed(!1,!0)},lb={get:Ed(!0,!1)};const e0=new WeakMap,t0=new WeakMap,n0=new WeakMap,cb=new WeakMap;function ub(i){switch(i){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function hb(i){return i.__v_skip||!Object.isExtensible(i)?0:ub(Ox(i))}function ka(i){return xr(i)?i:Ad(i,!1,tb,ob,e0)}function fb(i){return Ad(i,!1,ib,ab,t0)}function cs(i){return Ad(i,!0,nb,lb,n0)}function Ad(i,e,t,n,r){if(!Dt(i)||i.__v_raw&&!(e&&i.__v_isReactive))return i;const s=hb(i);if(s===0)return i;const o=r.get(i);if(o)return o;const a=new Proxy(i,s===2?n:t);return r.set(i,a),a}function _r(i){return xr(i)?_r(i.__v_raw):!!(i&&i.__v_isReactive)}function xr(i){return!!(i&&i.__v_isReadonly)}function $n(i){return!!(i&&i.__v_isShallow)}function Cd(i){return i?!!i.__v_raw:!1}function pt(i){const e=i&&i.__v_raw;return e?pt(e):i}function Rd(i){return!gt(i,"__v_skip")&&Object.isExtensible(i)&&Tf(i,"__v_skip",!0),i}const en=i=>Dt(i)?ka(i):i,gc=i=>Dt(i)?cs(i):i;function Rt(i){return i?i.__v_isRef===!0:!1}function bt(i){return i0(i,!1)}function ut(i){return i0(i,!0)}function i0(i,e){return Rt(i)?i:new db(i,e)}class db{constructor(e,t){this.dep=new vu,this.__v_isRef=!0,this.__v_isShallow=!1,this._rawValue=t?e:pt(e),this._value=t?e:en(e),this.__v_isShallow=t}get value(){return this.dep.track(),this._value}set value(e){const t=this._rawValue,n=this.__v_isShallow||$n(e)||xr(e);e=n?e:pt(e),vr(e,t)&&(this._rawValue=e,this._value=n?e:en(e),this.dep.trigger())}}function He(i){return Rt(i)?i.value:i}function Et(i){return Qe(i)?i():He(i)}const pb={get:(i,e,t)=>e==="__v_raw"?i:He(Reflect.get(i,e,t)),set:(i,e,t,n)=>{const r=i[e];return Rt(r)&&!Rt(t)?(r.value=t,!0):Reflect.set(i,e,t,n)}};function r0(i){return _r(i)?i:new Proxy(i,pb)}class mb{constructor(e){this.__v_isRef=!0,this._value=void 0;const t=this.dep=new vu,{get:n,set:r}=e(t.track.bind(t),t.trigger.bind(t));this._get=n,this._set=r}get value(){return this._value=this._get()}set value(e){this._set(e)}}function gb(i){return new mb(i)}function wo(i){const e=je(i)?new Array(i.length):{};for(const t in i)e[t]=_b(i,t);return e}class vb{constructor(e,t,n){this._object=e,this._key=t,this._defaultValue=n,this.__v_isRef=!0,this._value=void 0}get value(){const e=this._object[this._key];return this._value=e===void 0?this._defaultValue:e}set value(e){this._object[this._key]=e}get dep(){return $x(pt(this._object),this._key)}}function _b(i,e,t){const n=i[e];return Rt(n)?n:new vb(i,e,t)}class yb{constructor(e,t,n){this.fn=e,this.setter=t,this._value=void 0,this.dep=new vu(this),this.__v_isRef=!0,this.deps=void 0,this.depsTail=void 0,this.flags=16,this.globalVersion=ya-1,this.next=void 0,this.effect=this,this.__v_isReadonly=!t,this.isSSR=n}notify(){if(this.flags|=16,!(this.flags&8)&&wt!==this)return Xv(this,!0),!0}get value(){const e=this.dep.track();return jv(this),e&&(e.version=this.dep.version),this._value}set value(e){this.setter&&this.setter(e)}}function xb(i,e,t=!1){let n,r;return Qe(i)?n=i:(n=i.get,r=i.set),new yb(n,r,t)}const cl={},vc=new WeakMap;let qr;function bb(i,e=!1,t=qr){if(t){let n=vc.get(t);n||vc.set(t,n=[]),n.push(i)}}function Mb(i,e,t=Tt){const{immediate:n,deep:r,once:s,scheduler:o,augmentJob:a,call:l}=t,c=b=>r?b:$n(b)||r===!1||r===0?fr(b,1):fr(b);let u,h,f,d,p=!1,y=!1;if(Rt(i)?(h=()=>i.value,p=$n(i)):_r(i)?(h=()=>c(i),p=!0):je(i)?(y=!0,p=i.some(b=>_r(b)||$n(b)),h=()=>i.map(b=>{if(Rt(b))return b.value;if(_r(b))return c(b);if(Qe(b))return l?l(b,2):b()})):Qe(i)?e?h=l?()=>l(i,2):i:h=()=>{if(f){Wi();try{f()}finally{Xi()}}const b=qr;qr=u;try{return l?l(i,3,[d]):i(d)}finally{qr=b}}:h=bi,e&&r){const b=h,C=r===!0?1/0:r;h=()=>fr(b(),C)}const m=za(),g=()=>{u.stop(),m&&m.active&&xd(m.effects,u)};if(s&&e){const b=e;e=(...C)=>{b(...C),g()}}let M=y?new Array(i.length).fill(cl):cl;const x=b=>{if(!(!(u.flags&1)||!u.dirty&&!b))if(e){const C=u.run();if(r||p||(y?C.some((w,T)=>vr(w,M[T])):vr(C,M))){f&&f();const w=qr;qr=u;try{const T=[C,M===cl?void 0:y&&M[0]===cl?[]:M,d];M=C,l?l(e,3,T):e(...T)}finally{qr=w}}}else u.run()};return a&&a(x),u=new Gv(h),u.scheduler=o?()=>o(x,!1):x,d=b=>bb(b,!1,u),f=u.onStop=()=>{const b=vc.get(u);if(b){if(l)l(b,4);else for(const C of b)C();vc.delete(u)}},e?n?x(!0):M=u.run():o?o(x.bind(null,!0),!0):u.run(),g.pause=u.pause.bind(u),g.resume=u.resume.bind(u),g.stop=g,g}function fr(i,e=1/0,t){if(e<=0||!Dt(i)||i.__v_skip||(t=t||new Set,t.has(i)))return i;if(t.add(i),e--,Rt(i))fr(i.value,e,t);else if(je(i))for(let n=0;n<i.length;n++)fr(i[n],e,t);else if(Uv(i)||to(i))i.forEach(n=>{fr(n,e,t)});else if(Ov(i)){for(const n in i)fr(i[n],e,t);for(const n of Object.getOwnPropertySymbols(i))Object.prototype.propertyIsEnumerable.call(i,n)&&fr(i[n],e,t)}return i}/**
* @vue/runtime-core v3.5.17
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function Va(i,e,t,n){try{return n?i(...n):i()}catch(r){Ha(r,e,t)}}function Mi(i,e,t,n){if(Qe(i)){const r=Va(i,e,t,n);return r&&bd(r)&&r.catch(s=>{Ha(s,e,t)}),r}if(je(i)){const r=[];for(let s=0;s<i.length;s++)r.push(Mi(i[s],e,t,n));return r}}function Ha(i,e,t,n=!0){const r=e?e.vnode:null,{errorHandler:s,throwUnhandledErrorInProduction:o}=e&&e.appContext.config||Tt;if(e){let a=e.parent;const l=e.proxy,c=`https://vuejs.org/error-reference/#runtime-${t}`;for(;a;){const u=a.ec;if(u){for(let h=0;h<u.length;h++)if(u[h](i,l,c)===!1)return}a=a.parent}if(s){Wi(),Va(s,null,10,[i,l,c]),Xi();return}}Sb(i,t,r,n,o)}function Sb(i,e,t,n=!0,r=!1){if(r)throw i;console.error(i)}const Mn=[];let gi=-1;const no=[];let ur=null,js=0;const s0=Promise.resolve();let _c=null;function Id(i){const e=_c||s0;return i?e.then(this?i.bind(this):i):e}function wb(i){let e=gi+1,t=Mn.length;for(;e<t;){const n=e+t>>>1,r=Mn[n],s=ba(r);s<i||s===i&&r.flags&2?e=n+1:t=n}return e}function Pd(i){if(!(i.flags&1)){const e=ba(i),t=Mn[Mn.length-1];!t||!(i.flags&2)&&e>=ba(t)?Mn.push(i):Mn.splice(wb(e),0,i),i.flags|=1,o0()}}function o0(){_c||(_c=s0.then(l0))}function If(i){je(i)?no.push(...i):ur&&i.id===-1?ur.splice(js+1,0,i):i.flags&1||(no.push(i),i.flags|=1),o0()}function Wp(i,e,t=gi+1){for(;t<Mn.length;t++){const n=Mn[t];if(n&&n.flags&2){if(i&&n.id!==i.uid)continue;Mn.splice(t,1),t--,n.flags&4&&(n.flags&=-2),n(),n.flags&4||(n.flags&=-2)}}}function a0(i){if(no.length){const e=[...new Set(no)].sort((t,n)=>ba(t)-ba(n));if(no.length=0,ur){ur.push(...e);return}for(ur=e,js=0;js<ur.length;js++){const t=ur[js];t.flags&4&&(t.flags&=-2),t.flags&8||t(),t.flags&=-2}ur=null,js=0}}const ba=i=>i.id==null?i.flags&2?-1:1/0:i.id;function l0(i){try{for(gi=0;gi<Mn.length;gi++){const e=Mn[gi];e&&!(e.flags&8)&&(e.flags&4&&(e.flags&=-2),Va(e,e.i,e.i?15:14),e.flags&4||(e.flags&=-2))}}finally{for(;gi<Mn.length;gi++){const e=Mn[gi];e&&(e.flags&=-2)}gi=-1,Mn.length=0,a0(),_c=null,(Mn.length||no.length)&&l0()}}let hn=null,c0=null;function yc(i){const e=hn;return hn=i,c0=i&&i.type.__scopeId||null,e}function $s(i,e=hn,t){if(!e||i._n)return i;const n=(...r)=>{n._d&&nm(-1);const s=yc(e);let o;try{o=i(...r)}finally{yc(s),n._d&&nm(1)}return o};return n._n=!0,n._c=!0,n._d=!0,n}function Pr(i,e,t,n){const r=i.dirs,s=e&&e.dirs;for(let o=0;o<r.length;o++){const a=r[o];s&&(a.oldValue=s[o].value);let l=a.dir[n];l&&(Wi(),Mi(l,t,8,[i.el,a,i,e]),Xi())}}const Tb=Symbol("_vte"),Eb=i=>i.__isTeleport;function Ld(i,e){i.shapeFlag&6&&i.component?(i.transition=e,Ld(i.component.subTree,e)):i.shapeFlag&128?(i.ssContent.transition=e.clone(i.ssContent),i.ssFallback.transition=e.clone(i.ssFallback)):i.transition=e}/*! #__NO_SIDE_EFFECTS__ */function Yi(i,e){return Qe(i)?pn({name:i.name},e,{setup:i}):i}function u0(i){i.ids=[i.ids[0]+i.ids[2]+++"-",0,0]}function ta(i,e,t,n,r=!1){if(je(i)){i.forEach((p,y)=>ta(p,e&&(je(e)?e[y]:e),t,n,r));return}if(io(n)&&!r){n.shapeFlag&512&&n.type.__asyncResolved&&n.component.subTree.component&&ta(i,e,t,n.component.subTree);return}const s=n.shapeFlag&4?kd(n.component):n.el,o=r?null:s,{i:a,r:l}=i,c=e&&e.r,u=a.refs===Tt?a.refs={}:a.refs,h=a.setupState,f=pt(h),d=h===Tt?()=>!1:p=>gt(f,p);if(c!=null&&c!==l&&(Wt(c)?(u[c]=null,d(c)&&(h[c]=null)):Rt(c)&&(c.value=null)),Qe(l))Va(l,a,12,[o,u]);else{const p=Wt(l),y=Rt(l);if(p||y){const m=()=>{if(i.f){const g=p?d(l)?h[l]:u[l]:l.value;r?je(g)&&xd(g,s):je(g)?g.includes(s)||g.push(s):p?(u[l]=[s],d(l)&&(h[l]=u[l])):(l.value=[s],i.k&&(u[i.k]=l.value))}else p?(u[l]=o,d(l)&&(h[l]=o)):y&&(l.value=o,i.k&&(u[i.k]=o))};o?(m.id=-1,Vn(m,t)):m()}}}du().requestIdleCallback;du().cancelIdleCallback;const io=i=>!!i.type.__asyncLoader,h0=i=>i.type.__isKeepAlive;function Ab(i,e){f0(i,"a",e)}function Cb(i,e){f0(i,"da",e)}function f0(i,e,t=tn){const n=i.__wdc||(i.__wdc=()=>{let r=t;for(;r;){if(r.isDeactivated)return;r=r.parent}return i()});if(yu(e,n,t),t){let r=t.parent;for(;r&&r.parent;)h0(r.parent.vnode)&&Rb(n,e,t,r),r=r.parent}}function Rb(i,e,t,n){const r=yu(e,i,n,!0);Si(()=>{xd(n[e],r)},t)}function yu(i,e,t=tn,n=!1){if(t){const r=t[i]||(t[i]=[]),s=e.__weh||(e.__weh=(...o)=>{Wi();const a=fs(t),l=Mi(e,t,i,o);return a(),Xi(),l});return n?r.unshift(s):r.push(s),s}}const Qi=i=>(e,t=tn)=>{(!Sa||i==="sp")&&yu(i,(...n)=>e(...n),t)},Ib=Qi("bm"),xu=Qi("m"),Pb=Qi("bu"),Lb=Qi("u"),Db=Qi("bum"),Si=Qi("um"),Ub=Qi("sp"),Nb=Qi("rtg"),Ob=Qi("rtc");function Fb(i,e=tn){yu("ec",i,e)}const Bb=Symbol.for("v-ndc");function Xp(i,e,t,n){let r;const s=t,o=je(i);if(o||Wt(i)){const a=o&&_r(i);let l=!1,c=!1;a&&(l=!$n(i),c=xr(i),i=_u(i)),r=new Array(i.length);for(let u=0,h=i.length;u<h;u++)r[u]=e(l?c?gc(en(i[u])):en(i[u]):i[u],u,void 0,s)}else if(typeof i=="number"){r=new Array(i);for(let a=0;a<i;a++)r[a]=e(a+1,a,void 0,s)}else if(Dt(i))if(i[Symbol.iterator])r=Array.from(i,(a,l)=>e(a,l,void 0,s));else{const a=Object.keys(i);r=new Array(a.length);for(let l=0,c=a.length;l<c;l++){const u=a[l];r[l]=e(i[u],u,l,s)}}else r=[];return r}function d0(i,e,t={},n,r){if(hn.ce||hn.parent&&io(hn.parent)&&hn.parent.ce)return kt(),us(un,null,[Ot("slot",t,n&&n())],64);let s=i[e];s&&s._c&&(s._d=!1),kt();const o=s&&p0(s(t)),a=t.key||o&&o.key,l=us(un,{key:(a&&!Ji(a)?a:`_${e}`)+(!o&&n?"_fb":"")},o||(n?n():[]),o&&i._===1?64:-2);return l.scopeId&&(l.slotScopeIds=[l.scopeId+"-s"]),s&&s._c&&(s._d=!0),l}function p0(i){return i.some(e=>co(e)?!(e.type===li||e.type===un&&!p0(e.children)):!0)?i:null}const Pf=i=>i?F0(i)?kd(i):Pf(i.parent):null,na=pn(Object.create(null),{$:i=>i,$el:i=>i.vnode.el,$data:i=>i.data,$props:i=>i.props,$attrs:i=>i.attrs,$slots:i=>i.slots,$refs:i=>i.refs,$parent:i=>Pf(i.parent),$root:i=>Pf(i.root),$host:i=>i.ce,$emit:i=>i.emit,$options:i=>v0(i),$forceUpdate:i=>i.f||(i.f=()=>{Pd(i.update)}),$nextTick:i=>i.n||(i.n=Id.bind(i.proxy)),$watch:i=>oM.bind(i)}),dh=(i,e)=>i!==Tt&&!i.__isScriptSetup&&gt(i,e),zb={get({_:i},e){if(e==="__v_skip")return!0;const{ctx:t,setupState:n,data:r,props:s,accessCache:o,type:a,appContext:l}=i;let c;if(e[0]!=="$"){const d=o[e];if(d!==void 0)switch(d){case 1:return n[e];case 2:return r[e];case 4:return t[e];case 3:return s[e]}else{if(dh(n,e))return o[e]=1,n[e];if(r!==Tt&&gt(r,e))return o[e]=2,r[e];if((c=i.propsOptions[0])&&gt(c,e))return o[e]=3,s[e];if(t!==Tt&&gt(t,e))return o[e]=4,t[e];Lf&&(o[e]=0)}}const u=na[e];let h,f;if(u)return e==="$attrs"&&cn(i.attrs,"get",""),u(i);if((h=a.__cssModules)&&(h=h[e]))return h;if(t!==Tt&&gt(t,e))return o[e]=4,t[e];if(f=l.config.globalProperties,gt(f,e))return f[e]},set({_:i},e,t){const{data:n,setupState:r,ctx:s}=i;return dh(r,e)?(r[e]=t,!0):n!==Tt&&gt(n,e)?(n[e]=t,!0):gt(i.props,e)||e[0]==="$"&&e.slice(1)in i?!1:(s[e]=t,!0)},has({_:{data:i,setupState:e,accessCache:t,ctx:n,appContext:r,propsOptions:s}},o){let a;return!!t[o]||i!==Tt&&gt(i,o)||dh(e,o)||(a=s[0])&&gt(a,o)||gt(n,o)||gt(na,o)||gt(r.config.globalProperties,o)},defineProperty(i,e,t){return t.get!=null?i._.accessCache[e]=0:gt(t,"value")&&this.set(i,e,t.value,null),Reflect.defineProperty(i,e,t)}};function Dd(){return m0().slots}function kb(){return m0().attrs}function m0(){const i=hs();return i.setupContext||(i.setupContext=z0(i))}function Yp(i){return je(i)?i.reduce((e,t)=>(e[t]=null,e),{}):i}function Vb(i){const e=hs();let t=i();return Bf(),bd(t)&&(t=t.catch(n=>{throw fs(e),n})),[t,()=>fs(e)]}let Lf=!0;function Hb(i){const e=v0(i),t=i.proxy,n=i.ctx;Lf=!1,e.beforeCreate&&qp(e.beforeCreate,i,"bc");const{data:r,computed:s,methods:o,watch:a,provide:l,inject:c,created:u,beforeMount:h,mounted:f,beforeUpdate:d,updated:p,activated:y,deactivated:m,beforeDestroy:g,beforeUnmount:M,destroyed:x,unmounted:b,render:C,renderTracked:w,renderTriggered:T,errorCaptured:S,serverPrefetch:_,expose:v,inheritAttrs:A,components:D,directives:B,filters:X}=e;if(c&&Gb(c,n,null),o)for(const Q in o){const K=o[Q];Qe(K)&&(n[Q]=K.bind(t))}if(r){const Q=r.call(t,t);Dt(Q)&&(i.data=ka(Q))}if(Lf=!0,s)for(const Q in s){const K=s[Q],fe=Qe(K)?K.bind(t,t):Qe(K.get)?K.get.bind(t,t):bi,ge=!Qe(K)&&Qe(K.set)?K.set.bind(t):bi,oe=Pt({get:fe,set:ge});Object.defineProperty(n,Q,{enumerable:!0,configurable:!0,get:()=>oe.value,set:Te=>oe.value=Te})}if(a)for(const Q in a)g0(a[Q],n,t,Q);if(l){const Q=Qe(l)?l.call(t):l;Reflect.ownKeys(Q).forEach(K=>{ia(K,Q[K])})}u&&qp(u,i,"c");function z(Q,K){je(K)?K.forEach(fe=>Q(fe.bind(t))):K&&Q(K.bind(t))}if(z(Ib,h),z(xu,f),z(Pb,d),z(Lb,p),z(Ab,y),z(Cb,m),z(Fb,S),z(Ob,w),z(Nb,T),z(Db,M),z(Si,b),z(Ub,_),je(v))if(v.length){const Q=i.exposed||(i.exposed={});v.forEach(K=>{Object.defineProperty(Q,K,{get:()=>t[K],set:fe=>t[K]=fe})})}else i.exposed||(i.exposed={});C&&i.render===bi&&(i.render=C),A!=null&&(i.inheritAttrs=A),D&&(i.components=D),B&&(i.directives=B),_&&u0(i)}function Gb(i,e,t=bi){je(i)&&(i=Df(i));for(const n in i){const r=i[n];let s;Dt(r)?"default"in r?s=rs(r.from||n,r.default,!0):s=rs(r.from||n):s=rs(r),Rt(s)?Object.defineProperty(e,n,{enumerable:!0,configurable:!0,get:()=>s.value,set:o=>s.value=o}):e[n]=s}}function qp(i,e,t){Mi(je(i)?i.map(n=>n.bind(e.proxy)):i.bind(e.proxy),e,t)}function g0(i,e,t,n){let r=n.includes(".")?I0(t,n):()=>t[n];if(Wt(i)){const s=e[i];Qe(s)&&Ft(r,s)}else if(Qe(i))Ft(r,i.bind(t));else if(Dt(i))if(je(i))i.forEach(s=>g0(s,e,t,n));else{const s=Qe(i.handler)?i.handler.bind(t):e[i.handler];Qe(s)&&Ft(r,s,i)}}function v0(i){const e=i.type,{mixins:t,extends:n}=e,{mixins:r,optionsCache:s,config:{optionMergeStrategies:o}}=i.appContext,a=s.get(e);let l;return a?l=a:!r.length&&!t&&!n?l=e:(l={},r.length&&r.forEach(c=>xc(l,c,o,!0)),xc(l,e,o)),Dt(e)&&s.set(e,l),l}function xc(i,e,t,n=!1){const{mixins:r,extends:s}=e;s&&xc(i,s,t,!0),r&&r.forEach(o=>xc(i,o,t,!0));for(const o in e)if(!(n&&o==="expose")){const a=Wb[o]||t&&t[o];i[o]=a?a(i[o],e[o]):e[o]}return i}const Wb={data:jp,props:$p,emits:$p,methods:qo,computed:qo,beforeCreate:yn,created:yn,beforeMount:yn,mounted:yn,beforeUpdate:yn,updated:yn,beforeDestroy:yn,beforeUnmount:yn,destroyed:yn,unmounted:yn,activated:yn,deactivated:yn,errorCaptured:yn,serverPrefetch:yn,components:qo,directives:qo,watch:Yb,provide:jp,inject:Xb};function jp(i,e){return e?i?function(){return pn(Qe(i)?i.call(this,this):i,Qe(e)?e.call(this,this):e)}:e:i}function Xb(i,e){return qo(Df(i),Df(e))}function Df(i){if(je(i)){const e={};for(let t=0;t<i.length;t++)e[i[t]]=i[t];return e}return i}function yn(i,e){return i?[...new Set([].concat(i,e))]:e}function qo(i,e){return i?pn(Object.create(null),i,e):e}function $p(i,e){return i?je(i)&&je(e)?[...new Set([...i,...e])]:pn(Object.create(null),Yp(i),Yp(e??{})):e}function Yb(i,e){if(!i)return e;if(!e)return i;const t=pn(Object.create(null),i);for(const n in e)t[n]=yn(i[n],e[n]);return t}function _0(){return{app:null,config:{isNativeTag:Ux,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let qb=0;function jb(i,e){return function(n,r=null){Qe(n)||(n=pn({},n)),r!=null&&!Dt(r)&&(r=null);const s=_0(),o=new WeakSet,a=[];let l=!1;const c=s.app={_uid:qb++,_component:n,_props:r,_container:null,_context:s,_instance:null,version:IM,get config(){return s.config},set config(u){},use(u,...h){return o.has(u)||(u&&Qe(u.install)?(o.add(u),u.install(c,...h)):Qe(u)&&(o.add(u),u(c,...h))),c},mixin(u){return s.mixins.includes(u)||s.mixins.push(u),c},component(u,h){return h?(s.components[u]=h,c):s.components[u]},directive(u,h){return h?(s.directives[u]=h,c):s.directives[u]},mount(u,h,f){if(!l){const d=c._ceVNode||Ot(n,r);return d.appContext=s,f===!0?f="svg":f===!1&&(f=void 0),i(d,u,f),l=!0,c._container=u,u.__vue_app__=c,kd(d.component)}},onUnmount(u){a.push(u)},unmount(){l&&(Mi(a,c._instance,16),i(null,c._container),delete c._container.__vue_app__)},provide(u,h){return s.provides[u]=h,c},runWithContext(u){const h=is;is=c;try{return u()}finally{is=h}}};return c}}let is=null;function ia(i,e){if(tn){let t=tn.provides;const n=tn.parent&&tn.parent.provides;n===t&&(t=tn.provides=Object.create(n)),t[i]=e}}function rs(i,e,t=!1){const n=tn||hn;if(n||is){let r=is?is._context.provides:n?n.parent==null||n.ce?n.vnode.appContext&&n.vnode.appContext.provides:n.parent.provides:void 0;if(r&&i in r)return r[i];if(arguments.length>1)return t&&Qe(e)?e.call(n&&n.proxy):e}}function Ud(){return!!(tn||hn||is)}const y0={},x0=()=>Object.create(y0),b0=i=>Object.getPrototypeOf(i)===y0;function $b(i,e,t,n=!1){const r={},s=x0();i.propsDefaults=Object.create(null),M0(i,e,r,s);for(const o in i.propsOptions[0])o in r||(r[o]=void 0);t?i.props=n?r:fb(r):i.type.props?i.props=r:i.props=s,i.attrs=s}function Zb(i,e,t,n){const{props:r,attrs:s,vnode:{patchFlag:o}}=i,a=pt(r),[l]=i.propsOptions;let c=!1;if((n||o>0)&&!(o&16)){if(o&8){const u=i.vnode.dynamicProps;for(let h=0;h<u.length;h++){let f=u[h];if(bu(i.emitsOptions,f))continue;const d=e[f];if(l)if(gt(s,f))d!==s[f]&&(s[f]=d,c=!0);else{const p=yr(f);r[p]=Uf(l,a,p,d,i,!1)}else d!==s[f]&&(s[f]=d,c=!0)}}}else{M0(i,e,r,s)&&(c=!0);let u;for(const h in a)(!e||!gt(e,h)&&((u=_s(h))===h||!gt(e,u)))&&(l?t&&(t[h]!==void 0||t[u]!==void 0)&&(r[h]=Uf(l,a,h,void 0,i,!0)):delete r[h]);if(s!==a)for(const h in s)(!e||!gt(e,h))&&(delete s[h],c=!0)}c&&Bi(i.attrs,"set","")}function M0(i,e,t,n){const[r,s]=i.propsOptions;let o=!1,a;if(e)for(let l in e){if(Jo(l))continue;const c=e[l];let u;r&&gt(r,u=yr(l))?!s||!s.includes(u)?t[u]=c:(a||(a={}))[u]=c:bu(i.emitsOptions,l)||(!(l in n)||c!==n[l])&&(n[l]=c,o=!0)}if(s){const l=pt(t),c=a||Tt;for(let u=0;u<s.length;u++){const h=s[u];t[h]=Uf(r,l,h,c[h],i,!gt(c,h))}}return o}function Uf(i,e,t,n,r,s){const o=i[t];if(o!=null){const a=gt(o,"default");if(a&&n===void 0){const l=o.default;if(o.type!==Function&&!o.skipFactory&&Qe(l)){const{propsDefaults:c}=r;if(t in c)n=c[t];else{const u=fs(r);n=c[t]=l.call(null,e),u()}}else n=l;r.ce&&r.ce._setProp(t,n)}o[0]&&(s&&!a?n=!1:o[1]&&(n===""||n===_s(t))&&(n=!0))}return n}const Kb=new WeakMap;function S0(i,e,t=!1){const n=t?Kb:e.propsCache,r=n.get(i);if(r)return r;const s=i.props,o={},a=[];let l=!1;if(!Qe(i)){const u=h=>{l=!0;const[f,d]=S0(h,e,!0);pn(o,f),d&&a.push(...d)};!t&&e.mixins.length&&e.mixins.forEach(u),i.extends&&u(i.extends),i.mixins&&i.mixins.forEach(u)}if(!s&&!l)return Dt(i)&&n.set(i,eo),eo;if(je(s))for(let u=0;u<s.length;u++){const h=yr(s[u]);Zp(h)&&(o[h]=Tt)}else if(s)for(const u in s){const h=yr(u);if(Zp(h)){const f=s[u],d=o[h]=je(f)||Qe(f)?{type:f}:pn({},f),p=d.type;let y=!1,m=!0;if(je(p))for(let g=0;g<p.length;++g){const M=p[g],x=Qe(M)&&M.name;if(x==="Boolean"){y=!0;break}else x==="String"&&(m=!1)}else y=Qe(p)&&p.name==="Boolean";d[0]=y,d[1]=m,(y||gt(d,"default"))&&a.push(h)}}const c=[o,a];return Dt(i)&&n.set(i,c),c}function Zp(i){return i[0]!=="$"&&!Jo(i)}const Nd=i=>i[0]==="_"||i==="$stable",Od=i=>je(i)?i.map(ti):[ti(i)],Jb=(i,e,t)=>{if(e._n)return e;const n=$s((...r)=>Od(e(...r)),t);return n._c=!1,n},w0=(i,e,t)=>{const n=i._ctx;for(const r in i){if(Nd(r))continue;const s=i[r];if(Qe(s))e[r]=Jb(r,s,n);else if(s!=null){const o=Od(s);e[r]=()=>o}}},T0=(i,e)=>{const t=Od(e);i.slots.default=()=>t},E0=(i,e,t)=>{for(const n in e)(t||!Nd(n))&&(i[n]=e[n])},Qb=(i,e,t)=>{const n=i.slots=x0();if(i.vnode.shapeFlag&32){const r=e.__;r&&Tf(n,"__",r,!0);const s=e._;s?(E0(n,e,t),t&&Tf(n,"_",s,!0)):w0(e,n)}else e&&T0(i,e)},eM=(i,e,t)=>{const{vnode:n,slots:r}=i;let s=!0,o=Tt;if(n.shapeFlag&32){const a=e._;a?t&&a===1?s=!1:E0(r,e,t):(s=!e.$stable,w0(e,r)),o=e}else e&&(T0(i,e),o={default:1});if(s)for(const a in r)!Nd(a)&&o[a]==null&&delete r[a]},Vn=_M;function A0(i){return tM(i)}function tM(i,e){const t=du();t.__VUE__=!0;const{insert:n,remove:r,patchProp:s,createElement:o,createText:a,createComment:l,setText:c,setElementText:u,parentNode:h,nextSibling:f,setScopeId:d=bi,insertStaticContent:p}=i,y=(P,L,E,G=null,V=null,$=null,H=void 0,ee=null,Z=!!L.dynamicChildren)=>{if(P===L)return;P&&!dr(P,L)&&(G=Se(P),Te(P,V,$,!0),P=null),L.patchFlag===-2&&(Z=!1,L.dynamicChildren=null);const{type:J,ref:pe,shapeFlag:U}=L;switch(J){case Mu:m(P,L,E,G);break;case li:g(P,L,E,G);break;case mh:P==null&&M(L,E,G,H);break;case un:D(P,L,E,G,V,$,H,ee,Z);break;default:U&1?C(P,L,E,G,V,$,H,ee,Z):U&6?B(P,L,E,G,V,$,H,ee,Z):(U&64||U&128)&&J.process(P,L,E,G,V,$,H,ee,Z,F)}pe!=null&&V?ta(pe,P&&P.ref,$,L||P,!L):pe==null&&P&&P.ref!=null&&ta(P.ref,null,$,P,!0)},m=(P,L,E,G)=>{if(P==null)n(L.el=a(L.children),E,G);else{const V=L.el=P.el;L.children!==P.children&&c(V,L.children)}},g=(P,L,E,G)=>{P==null?n(L.el=l(L.children||""),E,G):L.el=P.el},M=(P,L,E,G)=>{[P.el,P.anchor]=p(P.children,L,E,G,P.el,P.anchor)},x=({el:P,anchor:L},E,G)=>{let V;for(;P&&P!==L;)V=f(P),n(P,E,G),P=V;n(L,E,G)},b=({el:P,anchor:L})=>{let E;for(;P&&P!==L;)E=f(P),r(P),P=E;r(L)},C=(P,L,E,G,V,$,H,ee,Z)=>{L.type==="svg"?H="svg":L.type==="math"&&(H="mathml"),P==null?w(L,E,G,V,$,H,ee,Z):_(P,L,V,$,H,ee,Z)},w=(P,L,E,G,V,$,H,ee)=>{let Z,J;const{props:pe,shapeFlag:U,transition:R,dirs:j}=P;if(Z=P.el=o(P.type,$,pe&&pe.is,pe),U&8?u(Z,P.children):U&16&&S(P.children,Z,null,G,V,ph(P,$),H,ee),j&&Pr(P,null,G,"created"),T(Z,P,P.scopeId,H,G),pe){for(const he in pe)he!=="value"&&!Jo(he)&&s(Z,he,null,pe[he],$,G);"value"in pe&&s(Z,"value",null,pe.value,$),(J=pe.onVnodeBeforeMount)&&di(J,G,P)}j&&Pr(P,null,G,"beforeMount");const ie=nM(V,R);ie&&R.beforeEnter(Z),n(Z,L,E),((J=pe&&pe.onVnodeMounted)||ie||j)&&Vn(()=>{J&&di(J,G,P),ie&&R.enter(Z),j&&Pr(P,null,G,"mounted")},V)},T=(P,L,E,G,V)=>{if(E&&d(P,E),G)for(let $=0;$<G.length;$++)d(P,G[$]);if(V){let $=V.subTree;if(L===$||L0($.type)&&($.ssContent===L||$.ssFallback===L)){const H=V.vnode;T(P,H,H.scopeId,H.slotScopeIds,V.parent)}}},S=(P,L,E,G,V,$,H,ee,Z=0)=>{for(let J=Z;J<P.length;J++){const pe=P[J]=ee?hr(P[J]):ti(P[J]);y(null,pe,L,E,G,V,$,H,ee)}},_=(P,L,E,G,V,$,H)=>{const ee=L.el=P.el;let{patchFlag:Z,dynamicChildren:J,dirs:pe}=L;Z|=P.patchFlag&16;const U=P.props||Tt,R=L.props||Tt;let j;if(E&&Lr(E,!1),(j=R.onVnodeBeforeUpdate)&&di(j,E,L,P),pe&&Pr(L,P,E,"beforeUpdate"),E&&Lr(E,!0),(U.innerHTML&&R.innerHTML==null||U.textContent&&R.textContent==null)&&u(ee,""),J?v(P.dynamicChildren,J,ee,E,G,ph(L,V),$):H||K(P,L,ee,null,E,G,ph(L,V),$,!1),Z>0){if(Z&16)A(ee,U,R,E,V);else if(Z&2&&U.class!==R.class&&s(ee,"class",null,R.class,V),Z&4&&s(ee,"style",U.style,R.style,V),Z&8){const ie=L.dynamicProps;for(let he=0;he<ie.length;he++){const se=ie[he],Ce=U[se],xe=R[se];(xe!==Ce||se==="value")&&s(ee,se,Ce,xe,V,E)}}Z&1&&P.children!==L.children&&u(ee,L.children)}else!H&&J==null&&A(ee,U,R,E,V);((j=R.onVnodeUpdated)||pe)&&Vn(()=>{j&&di(j,E,L,P),pe&&Pr(L,P,E,"updated")},G)},v=(P,L,E,G,V,$,H)=>{for(let ee=0;ee<L.length;ee++){const Z=P[ee],J=L[ee],pe=Z.el&&(Z.type===un||!dr(Z,J)||Z.shapeFlag&198)?h(Z.el):E;y(Z,J,pe,null,G,V,$,H,!0)}},A=(P,L,E,G,V)=>{if(L!==E){if(L!==Tt)for(const $ in L)!Jo($)&&!($ in E)&&s(P,$,L[$],null,V,G);for(const $ in E){if(Jo($))continue;const H=E[$],ee=L[$];H!==ee&&$!=="value"&&s(P,$,ee,H,V,G)}"value"in E&&s(P,"value",L.value,E.value,V)}},D=(P,L,E,G,V,$,H,ee,Z)=>{const J=L.el=P?P.el:a(""),pe=L.anchor=P?P.anchor:a("");let{patchFlag:U,dynamicChildren:R,slotScopeIds:j}=L;j&&(ee=ee?ee.concat(j):j),P==null?(n(J,E,G),n(pe,E,G),S(L.children||[],E,pe,V,$,H,ee,Z)):U>0&&U&64&&R&&P.dynamicChildren?(v(P.dynamicChildren,R,E,V,$,H,ee),(L.key!=null||V&&L===V.subTree)&&C0(P,L,!0)):K(P,L,E,pe,V,$,H,ee,Z)},B=(P,L,E,G,V,$,H,ee,Z)=>{L.slotScopeIds=ee,P==null?L.shapeFlag&512?V.ctx.activate(L,E,G,H,Z):X(L,E,G,V,$,H,Z):Y(P,L,Z)},X=(P,L,E,G,V,$,H)=>{const ee=P.component=TM(P,G,V);if(h0(P)&&(ee.ctx.renderer=F),EM(ee,!1,H),ee.asyncDep){if(V&&V.registerDep(ee,z,H),!P.el){const Z=ee.subTree=Ot(li);g(null,Z,L,E)}}else z(ee,P,L,E,V,$,H)},Y=(P,L,E)=>{const G=L.component=P.component;if(fM(P,L,E))if(G.asyncDep&&!G.asyncResolved){Q(G,L,E);return}else G.next=L,G.update();else L.el=P.el,G.vnode=L},z=(P,L,E,G,V,$,H)=>{const ee=()=>{if(P.isMounted){let{next:U,bu:R,u:j,parent:ie,vnode:he}=P;{const Le=R0(P);if(Le){U&&(U.el=he.el,Q(P,U,H)),Le.asyncDep.then(()=>{P.isUnmounted||ee()});return}}let se=U,Ce;Lr(P,!1),U?(U.el=he.el,Q(P,U,H)):U=he,R&&lh(R),(Ce=U.props&&U.props.onVnodeBeforeUpdate)&&di(Ce,ie,U,he),Lr(P,!0);const xe=Jp(P),Pe=P.subTree;P.subTree=xe,y(Pe,xe,h(Pe.el),Se(Pe),P,V,$),U.el=xe.el,se===null&&Bd(P,xe.el),j&&Vn(j,V),(Ce=U.props&&U.props.onVnodeUpdated)&&Vn(()=>di(Ce,ie,U,he),V)}else{let U;const{el:R,props:j}=L,{bm:ie,m:he,parent:se,root:Ce,type:xe}=P,Pe=io(L);Lr(P,!1),ie&&lh(ie),!Pe&&(U=j&&j.onVnodeBeforeMount)&&di(U,se,L),Lr(P,!0);{Ce.ce&&Ce.ce._def.shadowRoot!==!1&&Ce.ce._injectChildStyle(xe);const Le=P.subTree=Jp(P);y(null,Le,E,G,P,V,$),L.el=Le.el}if(he&&Vn(he,V),!Pe&&(U=j&&j.onVnodeMounted)){const Le=L;Vn(()=>di(U,se,Le),V)}(L.shapeFlag&256||se&&io(se.vnode)&&se.vnode.shapeFlag&256)&&P.a&&Vn(P.a,V),P.isMounted=!0,L=E=G=null}};P.scope.on();const Z=P.effect=new Gv(ee);P.scope.off();const J=P.update=Z.run.bind(Z),pe=P.job=Z.runIfDirty.bind(Z);pe.i=P,pe.id=P.uid,Z.scheduler=()=>Pd(pe),Lr(P,!0),J()},Q=(P,L,E)=>{L.component=P;const G=P.vnode.props;P.vnode=L,P.next=null,Zb(P,L.props,G,E),eM(P,L.children,E),Wi(),Wp(P),Xi()},K=(P,L,E,G,V,$,H,ee,Z=!1)=>{const J=P&&P.children,pe=P?P.shapeFlag:0,U=L.children,{patchFlag:R,shapeFlag:j}=L;if(R>0){if(R&128){ge(J,U,E,G,V,$,H,ee,Z);return}else if(R&256){fe(J,U,E,G,V,$,H,ee,Z);return}}j&8?(pe&16&&Re(J,V,$),U!==J&&u(E,U)):pe&16?j&16?ge(J,U,E,G,V,$,H,ee,Z):Re(J,V,$,!0):(pe&8&&u(E,""),j&16&&S(U,E,G,V,$,H,ee,Z))},fe=(P,L,E,G,V,$,H,ee,Z)=>{P=P||eo,L=L||eo;const J=P.length,pe=L.length,U=Math.min(J,pe);let R;for(R=0;R<U;R++){const j=L[R]=Z?hr(L[R]):ti(L[R]);y(P[R],j,E,null,V,$,H,ee,Z)}J>pe?Re(P,V,$,!0,!1,U):S(L,E,G,V,$,H,ee,Z,U)},ge=(P,L,E,G,V,$,H,ee,Z)=>{let J=0;const pe=L.length;let U=P.length-1,R=pe-1;for(;J<=U&&J<=R;){const j=P[J],ie=L[J]=Z?hr(L[J]):ti(L[J]);if(dr(j,ie))y(j,ie,E,null,V,$,H,ee,Z);else break;J++}for(;J<=U&&J<=R;){const j=P[U],ie=L[R]=Z?hr(L[R]):ti(L[R]);if(dr(j,ie))y(j,ie,E,null,V,$,H,ee,Z);else break;U--,R--}if(J>U){if(J<=R){const j=R+1,ie=j<pe?L[j].el:G;for(;J<=R;)y(null,L[J]=Z?hr(L[J]):ti(L[J]),E,ie,V,$,H,ee,Z),J++}}else if(J>R)for(;J<=U;)Te(P[J],V,$,!0),J++;else{const j=J,ie=J,he=new Map;for(J=ie;J<=R;J++){const Fe=L[J]=Z?hr(L[J]):ti(L[J]);Fe.key!=null&&he.set(Fe.key,J)}let se,Ce=0;const xe=R-ie+1;let Pe=!1,Le=0;const _e=new Array(xe);for(J=0;J<xe;J++)_e[J]=0;for(J=j;J<=U;J++){const Fe=P[J];if(Ce>=xe){Te(Fe,V,$,!0);continue}let k;if(Fe.key!=null)k=he.get(Fe.key);else for(se=ie;se<=R;se++)if(_e[se-ie]===0&&dr(Fe,L[se])){k=se;break}k===void 0?Te(Fe,V,$,!0):(_e[k-ie]=J+1,k>=Le?Le=k:Pe=!0,y(Fe,L[k],E,null,V,$,H,ee,Z),Ce++)}const Ue=Pe?iM(_e):eo;for(se=Ue.length-1,J=xe-1;J>=0;J--){const Fe=ie+J,k=L[Fe],re=Fe+1<pe?L[Fe+1].el:G;_e[J]===0?y(null,k,E,re,V,$,H,ee,Z):Pe&&(se<0||J!==Ue[se]?oe(k,E,re,2):se--)}}},oe=(P,L,E,G,V=null)=>{const{el:$,type:H,transition:ee,children:Z,shapeFlag:J}=P;if(J&6){oe(P.component.subTree,L,E,G);return}if(J&128){P.suspense.move(L,E,G);return}if(J&64){H.move(P,L,E,F);return}if(H===un){n($,L,E);for(let U=0;U<Z.length;U++)oe(Z[U],L,E,G);n(P.anchor,L,E);return}if(H===mh){x(P,L,E);return}if(G!==2&&J&1&&ee)if(G===0)ee.beforeEnter($),n($,L,E),Vn(()=>ee.enter($),V);else{const{leave:U,delayLeave:R,afterLeave:j}=ee,ie=()=>{P.ctx.isUnmounted?r($):n($,L,E)},he=()=>{U($,()=>{ie(),j&&j()})};R?R($,ie,he):he()}else n($,L,E)},Te=(P,L,E,G=!1,V=!1)=>{const{type:$,props:H,ref:ee,children:Z,dynamicChildren:J,shapeFlag:pe,patchFlag:U,dirs:R,cacheIndex:j}=P;if(U===-2&&(V=!1),ee!=null&&(Wi(),ta(ee,null,E,P,!0),Xi()),j!=null&&(L.renderCache[j]=void 0),pe&256){L.ctx.deactivate(P);return}const ie=pe&1&&R,he=!io(P);let se;if(he&&(se=H&&H.onVnodeBeforeUnmount)&&di(se,L,P),pe&6)ve(P.component,E,G);else{if(pe&128){P.suspense.unmount(E,G);return}ie&&Pr(P,null,L,"beforeUnmount"),pe&64?P.type.remove(P,L,E,F,G):J&&!J.hasOnce&&($!==un||U>0&&U&64)?Re(J,L,E,!1,!0):($===un&&U&384||!V&&pe&16)&&Re(Z,L,E),G&&ke(P)}(he&&(se=H&&H.onVnodeUnmounted)||ie)&&Vn(()=>{se&&di(se,L,P),ie&&Pr(P,null,L,"unmounted")},E)},ke=P=>{const{type:L,el:E,anchor:G,transition:V}=P;if(L===un){ae(E,G);return}if(L===mh){b(P);return}const $=()=>{r(E),V&&!V.persisted&&V.afterLeave&&V.afterLeave()};if(P.shapeFlag&1&&V&&!V.persisted){const{leave:H,delayLeave:ee}=V,Z=()=>H(E,$);ee?ee(P.el,$,Z):Z()}else $()},ae=(P,L)=>{let E;for(;P!==L;)E=f(P),r(P),P=E;r(L)},ve=(P,L,E)=>{const{bum:G,scope:V,job:$,subTree:H,um:ee,m:Z,a:J,parent:pe,slots:{__:U}}=P;Kp(Z),Kp(J),G&&lh(G),pe&&je(U)&&U.forEach(R=>{pe.renderCache[R]=void 0}),V.stop(),$&&($.flags|=8,Te(H,P,L,E)),ee&&Vn(ee,L),Vn(()=>{P.isUnmounted=!0},L),L&&L.pendingBranch&&!L.isUnmounted&&P.asyncDep&&!P.asyncResolved&&P.suspenseId===L.pendingId&&(L.deps--,L.deps===0&&L.resolve())},Re=(P,L,E,G=!1,V=!1,$=0)=>{for(let H=$;H<P.length;H++)Te(P[H],L,E,G,V)},Se=P=>{if(P.shapeFlag&6)return Se(P.component.subTree);if(P.shapeFlag&128)return P.suspense.next();const L=f(P.anchor||P.el),E=L&&L[Tb];return E?f(E):L};let le=!1;const I=(P,L,E)=>{P==null?L._vnode&&Te(L._vnode,null,null,!0):y(L._vnode||null,P,L,null,null,null,E),L._vnode=P,le||(le=!0,Wp(),a0(),le=!1)},F={p:y,um:Te,m:oe,r:ke,mt:X,mc:S,pc:K,pbc:v,n:Se,o:i};return{render:I,hydrate:void 0,createApp:jb(I)}}function ph({type:i,props:e},t){return t==="svg"&&i==="foreignObject"||t==="mathml"&&i==="annotation-xml"&&e&&e.encoding&&e.encoding.includes("html")?void 0:t}function Lr({effect:i,job:e},t){t?(i.flags|=32,e.flags|=4):(i.flags&=-33,e.flags&=-5)}function nM(i,e){return(!i||i&&!i.pendingBranch)&&e&&!e.persisted}function C0(i,e,t=!1){const n=i.children,r=e.children;if(je(n)&&je(r))for(let s=0;s<n.length;s++){const o=n[s];let a=r[s];a.shapeFlag&1&&!a.dynamicChildren&&((a.patchFlag<=0||a.patchFlag===32)&&(a=r[s]=hr(r[s]),a.el=o.el),!t&&a.patchFlag!==-2&&C0(o,a)),a.type===Mu&&(a.el=o.el),a.type===li&&!a.el&&(a.el=o.el)}}function iM(i){const e=i.slice(),t=[0];let n,r,s,o,a;const l=i.length;for(n=0;n<l;n++){const c=i[n];if(c!==0){if(r=t[t.length-1],i[r]<c){e[n]=r,t.push(n);continue}for(s=0,o=t.length-1;s<o;)a=s+o>>1,i[t[a]]<c?s=a+1:o=a;c<i[t[s]]&&(s>0&&(e[n]=t[s-1]),t[s]=n)}}for(s=t.length,o=t[s-1];s-- >0;)t[s]=o,o=e[o];return t}function R0(i){const e=i.subTree.component;if(e)return e.asyncDep&&!e.asyncResolved?e:R0(e)}function Kp(i){if(i)for(let e=0;e<i.length;e++)i[e].flags|=8}const rM=Symbol.for("v-scx"),sM=()=>rs(rM);function ys(i,e){return Fd(i,null,e)}function Ft(i,e,t){return Fd(i,e,t)}function Fd(i,e,t=Tt){const{immediate:n,deep:r,flush:s,once:o}=t,a=pn({},t),l=e&&n||!e&&s!=="post";let c;if(Sa){if(s==="sync"){const d=sM();c=d.__watcherHandles||(d.__watcherHandles=[])}else if(!l){const d=()=>{};return d.stop=bi,d.resume=bi,d.pause=bi,d}}const u=tn;a.call=(d,p,y)=>Mi(d,u,p,y);let h=!1;s==="post"?a.scheduler=d=>{Vn(d,u&&u.suspense)}:s!=="sync"&&(h=!0,a.scheduler=(d,p)=>{p?d():Pd(d)}),a.augmentJob=d=>{e&&(d.flags|=4),h&&(d.flags|=2,u&&(d.id=u.uid,d.i=u))};const f=Mb(i,e,a);return Sa&&(c?c.push(f):l&&f()),f}function oM(i,e,t){const n=this.proxy,r=Wt(i)?i.includes(".")?I0(n,i):()=>n[i]:i.bind(n,n);let s;Qe(e)?s=e:(s=e.handler,t=e);const o=fs(this),a=Fd(r,s.bind(n),t);return o(),a}function I0(i,e){const t=e.split(".");return()=>{let n=i;for(let r=0;r<t.length&&n;r++)n=n[t[r]];return n}}const aM=(i,e)=>e==="modelValue"||e==="model-value"?i.modelModifiers:i[`${e}Modifiers`]||i[`${yr(e)}Modifiers`]||i[`${_s(e)}Modifiers`];function lM(i,e,...t){if(i.isUnmounted)return;const n=i.vnode.props||Tt;let r=t;const s=e.startsWith("update:"),o=s&&aM(n,e.slice(7));o&&(o.trim&&(r=t.map(u=>Wt(u)?u.trim():u)),o.number&&(r=t.map(zx)));let a,l=n[a=ah(e)]||n[a=ah(yr(e))];!l&&s&&(l=n[a=ah(_s(e))]),l&&Mi(l,i,6,r);const c=n[a+"Once"];if(c){if(!i.emitted)i.emitted={};else if(i.emitted[a])return;i.emitted[a]=!0,Mi(c,i,6,r)}}function P0(i,e,t=!1){const n=e.emitsCache,r=n.get(i);if(r!==void 0)return r;const s=i.emits;let o={},a=!1;if(!Qe(i)){const l=c=>{const u=P0(c,e,!0);u&&(a=!0,pn(o,u))};!t&&e.mixins.length&&e.mixins.forEach(l),i.extends&&l(i.extends),i.mixins&&i.mixins.forEach(l)}return!s&&!a?(Dt(i)&&n.set(i,null),null):(je(s)?s.forEach(l=>o[l]=null):pn(o,s),Dt(i)&&n.set(i,o),o)}function bu(i,e){return!i||!uu(e)?!1:(e=e.slice(2).replace(/Once$/,""),gt(i,e[0].toLowerCase()+e.slice(1))||gt(i,_s(e))||gt(i,e))}function Jp(i){const{type:e,vnode:t,proxy:n,withProxy:r,propsOptions:[s],slots:o,attrs:a,emit:l,render:c,renderCache:u,props:h,data:f,setupState:d,ctx:p,inheritAttrs:y}=i,m=yc(i);let g,M;try{if(t.shapeFlag&4){const b=r||n,C=b;g=ti(c.call(C,b,u,h,d,f,p)),M=a}else{const b=e;g=ti(b.length>1?b(h,{attrs:a,slots:o,emit:l}):b(h,null)),M=e.props?a:uM(a)}}catch(b){ra.length=0,Ha(b,i,1),g=Ot(li)}let x=g;if(M&&y!==!1){const b=Object.keys(M),{shapeFlag:C}=x;b.length&&C&7&&(s&&b.some(yd)&&(M=hM(M,s)),x=uo(x,M,!1,!0))}return t.dirs&&(x=uo(x,null,!1,!0),x.dirs=x.dirs?x.dirs.concat(t.dirs):t.dirs),t.transition&&Ld(x,t.transition),g=x,yc(m),g}function cM(i,e=!0){let t;for(let n=0;n<i.length;n++){const r=i[n];if(co(r)){if(r.type!==li||r.children==="v-if"){if(t)return;t=r}}else return}return t}const uM=i=>{let e;for(const t in i)(t==="class"||t==="style"||uu(t))&&((e||(e={}))[t]=i[t]);return e},hM=(i,e)=>{const t={};for(const n in i)(!yd(n)||!(n.slice(9)in e))&&(t[n]=i[n]);return t};function fM(i,e,t){const{props:n,children:r,component:s}=i,{props:o,children:a,patchFlag:l}=e,c=s.emitsOptions;if(e.dirs||e.transition)return!0;if(t&&l>=0){if(l&1024)return!0;if(l&16)return n?Qp(n,o,c):!!o;if(l&8){const u=e.dynamicProps;for(let h=0;h<u.length;h++){const f=u[h];if(o[f]!==n[f]&&!bu(c,f))return!0}}}else return(r||a)&&(!a||!a.$stable)?!0:n===o?!1:n?o?Qp(n,o,c):!0:!!o;return!1}function Qp(i,e,t){const n=Object.keys(e);if(n.length!==Object.keys(i).length)return!0;for(let r=0;r<n.length;r++){const s=n[r];if(e[s]!==i[s]&&!bu(t,s))return!0}return!1}function Bd({vnode:i,parent:e},t){for(;e;){const n=e.subTree;if(n.suspense&&n.suspense.activeBranch===i&&(n.el=i.el),n===i)(i=e.vnode).el=t,e=e.parent;else break}}const L0=i=>i.__isSuspense;let Nf=0;const dM={name:"Suspense",__isSuspense:!0,process(i,e,t,n,r,s,o,a,l,c){if(i==null)pM(e,t,n,r,s,o,a,l,c);else{if(s&&s.deps>0&&!i.suspense.isInFallback){e.suspense=i.suspense,e.suspense.vnode=e,e.el=i.el;return}mM(i,e,t,n,r,o,a,l,c)}},hydrate:gM,normalize:vM},em=dM;function Ma(i,e){const t=i.props&&i.props[e];Qe(t)&&t()}function pM(i,e,t,n,r,s,o,a,l){const{p:c,o:{createElement:u}}=l,h=u("div"),f=i.suspense=D0(i,r,n,e,h,t,s,o,a,l);c(null,f.pendingBranch=i.ssContent,h,null,n,f,s,o),f.deps>0?(Ma(i,"onPending"),Ma(i,"onFallback"),c(null,i.ssFallback,e,t,n,null,s,o),ro(f,i.ssFallback)):f.resolve(!1,!0)}function mM(i,e,t,n,r,s,o,a,{p:l,um:c,o:{createElement:u}}){const h=e.suspense=i.suspense;h.vnode=e,e.el=i.el;const f=e.ssContent,d=e.ssFallback,{activeBranch:p,pendingBranch:y,isInFallback:m,isHydrating:g}=h;if(y)h.pendingBranch=f,dr(f,y)?(l(y,f,h.hiddenContainer,null,r,h,s,o,a),h.deps<=0?h.resolve():m&&(g||(l(p,d,t,n,r,null,s,o,a),ro(h,d)))):(h.pendingId=Nf++,g?(h.isHydrating=!1,h.activeBranch=y):c(y,r,h),h.deps=0,h.effects.length=0,h.hiddenContainer=u("div"),m?(l(null,f,h.hiddenContainer,null,r,h,s,o,a),h.deps<=0?h.resolve():(l(p,d,t,n,r,null,s,o,a),ro(h,d))):p&&dr(f,p)?(l(p,f,t,n,r,h,s,o,a),h.resolve(!0)):(l(null,f,h.hiddenContainer,null,r,h,s,o,a),h.deps<=0&&h.resolve()));else if(p&&dr(f,p))l(p,f,t,n,r,h,s,o,a),ro(h,f);else if(Ma(e,"onPending"),h.pendingBranch=f,f.shapeFlag&512?h.pendingId=f.component.suspenseId:h.pendingId=Nf++,l(null,f,h.hiddenContainer,null,r,h,s,o,a),h.deps<=0)h.resolve();else{const{timeout:M,pendingId:x}=h;M>0?setTimeout(()=>{h.pendingId===x&&h.fallback(d)},M):M===0&&h.fallback(d)}}function D0(i,e,t,n,r,s,o,a,l,c,u=!1){const{p:h,m:f,um:d,n:p,o:{parentNode:y,remove:m}}=c;let g;const M=yM(i);M&&e&&e.pendingBranch&&(g=e.pendingId,e.deps++);const x=i.props?kx(i.props.timeout):void 0,b=s,C={vnode:i,parent:e,parentComponent:t,namespace:o,container:n,hiddenContainer:r,deps:0,pendingId:Nf++,timeout:typeof x=="number"?x:-1,activeBranch:null,pendingBranch:null,isInFallback:!u,isHydrating:u,isUnmounted:!1,effects:[],resolve(w=!1,T=!1){const{vnode:S,activeBranch:_,pendingBranch:v,pendingId:A,effects:D,parentComponent:B,container:X}=C;let Y=!1;C.isHydrating?C.isHydrating=!1:w||(Y=_&&v.transition&&v.transition.mode==="out-in",Y&&(_.transition.afterLeave=()=>{A===C.pendingId&&(f(v,X,s===b?p(_):s,0),If(D))}),_&&(y(_.el)===X&&(s=p(_)),d(_,B,C,!0)),Y||f(v,X,s,0)),ro(C,v),C.pendingBranch=null,C.isInFallback=!1;let z=C.parent,Q=!1;for(;z;){if(z.pendingBranch){z.effects.push(...D),Q=!0;break}z=z.parent}!Q&&!Y&&If(D),C.effects=[],M&&e&&e.pendingBranch&&g===e.pendingId&&(e.deps--,e.deps===0&&!T&&e.resolve()),Ma(S,"onResolve")},fallback(w){if(!C.pendingBranch)return;const{vnode:T,activeBranch:S,parentComponent:_,container:v,namespace:A}=C;Ma(T,"onFallback");const D=p(S),B=()=>{C.isInFallback&&(h(null,w,v,D,_,null,A,a,l),ro(C,w))},X=w.transition&&w.transition.mode==="out-in";X&&(S.transition.afterLeave=B),C.isInFallback=!0,d(S,_,null,!0),X||B()},move(w,T,S){C.activeBranch&&f(C.activeBranch,w,T,S),C.container=w},next(){return C.activeBranch&&p(C.activeBranch)},registerDep(w,T,S){const _=!!C.pendingBranch;_&&C.deps++;const v=w.vnode.el;w.asyncDep.catch(A=>{Ha(A,w,0)}).then(A=>{if(w.isUnmounted||C.isUnmounted||C.pendingId!==w.suspenseId)return;w.asyncResolved=!0;const{vnode:D}=w;zf(w,A),v&&(D.el=v);const B=!v&&w.subTree.el;T(w,D,y(v||w.subTree.el),v?null:p(w.subTree),C,o,S),B&&m(B),Bd(w,D.el),_&&--C.deps===0&&C.resolve()})},unmount(w,T){C.isUnmounted=!0,C.activeBranch&&d(C.activeBranch,t,w,T),C.pendingBranch&&d(C.pendingBranch,t,w,T)}};return C}function gM(i,e,t,n,r,s,o,a,l){const c=e.suspense=D0(e,n,t,i.parentNode,document.createElement("div"),null,r,s,o,a,!0),u=l(i,c.pendingBranch=e.ssContent,t,c,s,o);return c.deps===0&&c.resolve(!1,!0),u}function vM(i){const{shapeFlag:e,children:t}=i,n=e&32;i.ssContent=tm(n?t.default:t),i.ssFallback=n?tm(t.fallback):Ot(li)}function tm(i){let e;if(Qe(i)){const t=lo&&i._c;t&&(i._d=!1,kt()),i=i(),t&&(i._d=!0,e=Un,U0())}return je(i)&&(i=cM(i)),i=ti(i),e&&!i.dynamicChildren&&(i.dynamicChildren=e.filter(t=>t!==i)),i}function _M(i,e){e&&e.pendingBranch?je(i)?e.effects.push(...i):e.effects.push(i):If(i)}function ro(i,e){i.activeBranch=e;const{vnode:t,parentComponent:n}=i;let r=e.el;for(;!r&&e.component;)e=e.component.subTree,r=e.el;t.el=r,n&&n.subTree===t&&(n.vnode.el=r,Bd(n,r))}function yM(i){const e=i.props&&i.props.suspensible;return e!=null&&e!==!1}const un=Symbol.for("v-fgt"),Mu=Symbol.for("v-txt"),li=Symbol.for("v-cmt"),mh=Symbol.for("v-stc"),ra=[];let Un=null;function kt(i=!1){ra.push(Un=i?null:[])}function U0(){ra.pop(),Un=ra[ra.length-1]||null}let lo=1;function nm(i,e=!1){lo+=i,i<0&&Un&&e&&(Un.hasOnce=!0)}function N0(i){return i.dynamicChildren=lo>0?Un||eo:null,U0(),lo>0&&Un&&Un.push(i),i}function Nn(i,e,t,n,r,s){return N0(Gt(i,e,t,n,r,s,!0))}function us(i,e,t,n,r){return N0(Ot(i,e,t,n,r,!0))}function co(i){return i?i.__v_isVNode===!0:!1}function dr(i,e){return i.type===e.type&&i.key===e.key}const O0=({key:i})=>i??null,ac=({ref:i,ref_key:e,ref_for:t})=>(typeof i=="number"&&(i=""+i),i!=null?Wt(i)||Rt(i)||Qe(i)?{i:hn,r:i,k:e,f:!!t}:i:null);function Gt(i,e=null,t=null,n=0,r=null,s=i===un?0:1,o=!1,a=!1){const l={__v_isVNode:!0,__v_skip:!0,type:i,props:e,key:e&&O0(e),ref:e&&ac(e),scopeId:c0,slotScopeIds:null,children:t,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetStart:null,targetAnchor:null,staticCount:0,shapeFlag:s,patchFlag:n,dynamicProps:r,dynamicChildren:null,appContext:null,ctx:hn};return a?(zd(l,t),s&128&&i.normalize(l)):t&&(l.shapeFlag|=Wt(t)?8:16),lo>0&&!o&&Un&&(l.patchFlag>0||s&6)&&l.patchFlag!==32&&Un.push(l),l}const Ot=xM;function xM(i,e=null,t=null,n=0,r=null,s=!1){if((!i||i===Bb)&&(i=li),co(i)){const a=uo(i,e,!0);return t&&zd(a,t),lo>0&&!s&&Un&&(a.shapeFlag&6?Un[Un.indexOf(i)]=a:Un.push(a)),a.patchFlag=-2,a}if(RM(i)&&(i=i.__vccOpts),e){e=bM(e);let{class:a,style:l}=e;a&&!Wt(a)&&(e.class=mu(a)),Dt(l)&&(Cd(l)&&!je(l)&&(l=pn({},l)),e.style=pu(l))}const o=Wt(i)?1:L0(i)?128:Eb(i)?64:Dt(i)?4:Qe(i)?2:0;return Gt(i,e,t,n,r,o,s,!0)}function bM(i){return i?Cd(i)||b0(i)?pn({},i):i:null}function uo(i,e,t=!1,n=!1){const{props:r,ref:s,patchFlag:o,children:a,transition:l}=i,c=e?MM(r||{},e):r,u={__v_isVNode:!0,__v_skip:!0,type:i.type,props:c,key:c&&O0(c),ref:e&&e.ref?t&&s?je(s)?s.concat(ac(e)):[s,ac(e)]:ac(e):s,scopeId:i.scopeId,slotScopeIds:i.slotScopeIds,children:a,target:i.target,targetStart:i.targetStart,targetAnchor:i.targetAnchor,staticCount:i.staticCount,shapeFlag:i.shapeFlag,patchFlag:e&&i.type!==un?o===-1?16:o|16:o,dynamicProps:i.dynamicProps,dynamicChildren:i.dynamicChildren,appContext:i.appContext,dirs:i.dirs,transition:l,component:i.component,suspense:i.suspense,ssContent:i.ssContent&&uo(i.ssContent),ssFallback:i.ssFallback&&uo(i.ssFallback),el:i.el,anchor:i.anchor,ctx:i.ctx,ce:i.ce};return l&&n&&Ld(u,l.clone(u)),u}function Of(i=" ",e=0){return Ot(Mu,null,i,e)}function bc(i="",e=!1){return e?(kt(),us(li,null,i)):Ot(li,null,i)}function ti(i){return i==null||typeof i=="boolean"?Ot(li):je(i)?Ot(un,null,i.slice()):co(i)?hr(i):Ot(Mu,null,String(i))}function hr(i){return i.el===null&&i.patchFlag!==-1||i.memo?i:uo(i)}function zd(i,e){let t=0;const{shapeFlag:n}=i;if(e==null)e=null;else if(je(e))t=16;else if(typeof e=="object")if(n&65){const r=e.default;r&&(r._c&&(r._d=!1),zd(i,r()),r._c&&(r._d=!0));return}else{t=32;const r=e._;!r&&!b0(e)?e._ctx=hn:r===3&&hn&&(hn.slots._===1?e._=1:(e._=2,i.patchFlag|=1024))}else Qe(e)?(e={default:e,_ctx:hn},t=32):(e=String(e),n&64?(t=16,e=[Of(e)]):t=8);i.children=e,i.shapeFlag|=t}function MM(...i){const e={};for(let t=0;t<i.length;t++){const n=i[t];for(const r in n)if(r==="class")e.class!==n.class&&(e.class=mu([e.class,n.class]));else if(r==="style")e.style=pu([e.style,n.style]);else if(uu(r)){const s=e[r],o=n[r];o&&s!==o&&!(je(s)&&s.includes(o))&&(e[r]=s?[].concat(s,o):o)}else r!==""&&(e[r]=n[r])}return e}function di(i,e,t,n=null){Mi(i,e,7,[t,n])}const SM=_0();let wM=0;function TM(i,e,t){const n=i.type,r=(e?e.appContext:i.appContext)||SM,s={uid:wM++,vnode:i,type:n,parent:e,appContext:r,root:null,next:null,subTree:null,effect:null,update:null,job:null,scope:new Vv(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:e?e.provides:Object.create(r.provides),ids:e?e.ids:["",0,0],accessCache:null,renderCache:[],components:null,directives:null,propsOptions:S0(n,r),emitsOptions:P0(n,r),emit:null,emitted:null,propsDefaults:Tt,inheritAttrs:n.inheritAttrs,ctx:Tt,data:Tt,props:Tt,attrs:Tt,slots:Tt,refs:Tt,setupState:Tt,setupContext:null,suspense:t,suspenseId:t?t.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return s.ctx={_:s},s.root=e?e.root:s,s.emit=lM.bind(null,s),i.ce&&i.ce(s),s}let tn=null;const hs=()=>tn||hn;let Mc,Ff;{const i=du(),e=(t,n)=>{let r;return(r=i[t])||(r=i[t]=[]),r.push(n),s=>{r.length>1?r.forEach(o=>o(s)):r[0](s)}};Mc=e("__VUE_INSTANCE_SETTERS__",t=>tn=t),Ff=e("__VUE_SSR_SETTERS__",t=>Sa=t)}const fs=i=>{const e=tn;return Mc(i),i.scope.on(),()=>{i.scope.off(),Mc(e)}},Bf=()=>{tn&&tn.scope.off(),Mc(null)};function F0(i){return i.vnode.shapeFlag&4}let Sa=!1;function EM(i,e=!1,t=!1){e&&Ff(e);const{props:n,children:r}=i.vnode,s=F0(i);$b(i,n,s,e),Qb(i,r,t||e);const o=s?AM(i,e):void 0;return e&&Ff(!1),o}function AM(i,e){const t=i.type;i.accessCache=Object.create(null),i.proxy=new Proxy(i.ctx,zb);const{setup:n}=t;if(n){Wi();const r=i.setupContext=n.length>1?z0(i):null,s=fs(i),o=Va(n,i,0,[i.props,r]),a=bd(o);if(Xi(),s(),(a||i.sp)&&!io(i)&&u0(i),a){if(o.then(Bf,Bf),e)return o.then(l=>{zf(i,l)}).catch(l=>{Ha(l,i,0)});i.asyncDep=o}else zf(i,o)}else B0(i)}function zf(i,e,t){Qe(e)?i.type.__ssrInlineRender?i.ssrRender=e:i.render=e:Dt(e)&&(i.setupState=r0(e)),B0(i)}function B0(i,e,t){const n=i.type;i.render||(i.render=n.render||bi);{const r=fs(i);Wi();try{Hb(i)}finally{Xi(),r()}}}const CM={get(i,e){return cn(i,"get",""),i[e]}};function z0(i){const e=t=>{i.exposed=t||{}};return{attrs:new Proxy(i.attrs,CM),slots:i.slots,emit:i.emit,expose:e}}function kd(i){return i.exposed?i.exposeProxy||(i.exposeProxy=new Proxy(r0(Rd(i.exposed)),{get(e,t){if(t in e)return e[t];if(t in na)return na[t](i)},has(e,t){return t in e||t in na}})):i.proxy}function RM(i){return Qe(i)&&"__vccOpts"in i}const Pt=(i,e)=>xb(i,e,Sa);function im(i,e,t){const n=arguments.length;return n===2?Dt(e)&&!je(e)?co(e)?Ot(i,null,[e]):Ot(i,e):Ot(i,null,e):(n>3?t=Array.prototype.slice.call(arguments,2):n===3&&co(t)&&(t=[t]),Ot(i,e,t))}const IM="3.5.17";/**
* @vue/runtime-dom v3.5.17
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let kf;const rm=typeof window<"u"&&window.trustedTypes;if(rm)try{kf=rm.createPolicy("vue",{createHTML:i=>i})}catch{}const k0=kf?i=>kf.createHTML(i):i=>i,PM="http://www.w3.org/2000/svg",LM="http://www.w3.org/1998/Math/MathML",Oi=typeof document<"u"?document:null,sm=Oi&&Oi.createElement("template"),DM={insert:(i,e,t)=>{e.insertBefore(i,t||null)},remove:i=>{const e=i.parentNode;e&&e.removeChild(i)},createElement:(i,e,t,n)=>{const r=e==="svg"?Oi.createElementNS(PM,i):e==="mathml"?Oi.createElementNS(LM,i):t?Oi.createElement(i,{is:t}):Oi.createElement(i);return i==="select"&&n&&n.multiple!=null&&r.setAttribute("multiple",n.multiple),r},createText:i=>Oi.createTextNode(i),createComment:i=>Oi.createComment(i),setText:(i,e)=>{i.nodeValue=e},setElementText:(i,e)=>{i.textContent=e},parentNode:i=>i.parentNode,nextSibling:i=>i.nextSibling,querySelector:i=>Oi.querySelector(i),setScopeId(i,e){i.setAttribute(e,"")},insertStaticContent(i,e,t,n,r,s){const o=t?t.previousSibling:e.lastChild;if(r&&(r===s||r.nextSibling))for(;e.insertBefore(r.cloneNode(!0),t),!(r===s||!(r=r.nextSibling)););else{sm.innerHTML=k0(n==="svg"?`<svg>${i}</svg>`:n==="mathml"?`<math>${i}</math>`:i);const a=sm.content;if(n==="svg"||n==="mathml"){const l=a.firstChild;for(;l.firstChild;)a.appendChild(l.firstChild);a.removeChild(l)}e.insertBefore(a,t)}return[o?o.nextSibling:e.firstChild,t?t.previousSibling:e.lastChild]}},UM=Symbol("_vtc");function NM(i,e,t){const n=i[UM];n&&(e=(e?[e,...n]:[...n]).join(" ")),e==null?i.removeAttribute("class"):t?i.setAttribute("class",e):i.className=e}const om=Symbol("_vod"),OM=Symbol("_vsh"),FM=Symbol(""),BM=/(^|;)\s*display\s*:/;function zM(i,e,t){const n=i.style,r=Wt(t);let s=!1;if(t&&!r){if(e)if(Wt(e))for(const o of e.split(";")){const a=o.slice(0,o.indexOf(":")).trim();t[a]==null&&lc(n,a,"")}else for(const o in e)t[o]==null&&lc(n,o,"");for(const o in t)o==="display"&&(s=!0),lc(n,o,t[o])}else if(r){if(e!==t){const o=n[FM];o&&(t+=";"+o),n.cssText=t,s=BM.test(t)}}else e&&i.removeAttribute("style");om in i&&(i[om]=s?n.display:"",i[OM]&&(n.display="none"))}const am=/\s*!important$/;function lc(i,e,t){if(je(t))t.forEach(n=>lc(i,e,n));else if(t==null&&(t=""),e.startsWith("--"))i.setProperty(e,t);else{const n=kM(i,e);am.test(t)?i.setProperty(_s(n),t.replace(am,""),"important"):i[n]=t}}const lm=["Webkit","Moz","ms"],gh={};function kM(i,e){const t=gh[e];if(t)return t;let n=yr(e);if(n!=="filter"&&n in i)return gh[e]=n;n=Fv(n);for(let r=0;r<lm.length;r++){const s=lm[r]+n;if(s in i)return gh[e]=s}return e}const cm="http://www.w3.org/1999/xlink";function um(i,e,t,n,r,s=Yx(e)){n&&e.startsWith("xlink:")?t==null?i.removeAttributeNS(cm,e.slice(6,e.length)):i.setAttributeNS(cm,e,t):t==null||s&&!Bv(t)?i.removeAttribute(e):i.setAttribute(e,s?"":Ji(t)?String(t):t)}function hm(i,e,t,n,r){if(e==="innerHTML"||e==="textContent"){t!=null&&(i[e]=e==="innerHTML"?k0(t):t);return}const s=i.tagName;if(e==="value"&&s!=="PROGRESS"&&!s.includes("-")){const a=s==="OPTION"?i.getAttribute("value")||"":i.value,l=t==null?i.type==="checkbox"?"on":"":String(t);(a!==l||!("_value"in i))&&(i.value=l),t==null&&i.removeAttribute(e),i._value=t;return}let o=!1;if(t===""||t==null){const a=typeof i[e];a==="boolean"?t=Bv(t):t==null&&a==="string"?(t="",o=!0):a==="number"&&(t=0,o=!0)}try{i[e]=t}catch{}o&&i.removeAttribute(r||e)}function VM(i,e,t,n){i.addEventListener(e,t,n)}function HM(i,e,t,n){i.removeEventListener(e,t,n)}const fm=Symbol("_vei");function GM(i,e,t,n,r=null){const s=i[fm]||(i[fm]={}),o=s[e];if(n&&o)o.value=n;else{const[a,l]=WM(e);if(n){const c=s[e]=qM(n,r);VM(i,a,c,l)}else o&&(HM(i,a,o,l),s[e]=void 0)}}const dm=/(?:Once|Passive|Capture)$/;function WM(i){let e;if(dm.test(i)){e={};let n;for(;n=i.match(dm);)i=i.slice(0,i.length-n[0].length),e[n[0].toLowerCase()]=!0}return[i[2]===":"?i.slice(3):_s(i.slice(2)),e]}let vh=0;const XM=Promise.resolve(),YM=()=>vh||(XM.then(()=>vh=0),vh=Date.now());function qM(i,e){const t=n=>{if(!n._vts)n._vts=Date.now();else if(n._vts<=t.attached)return;Mi(jM(n,t.value),e,5,[n])};return t.value=i,t.attached=YM(),t}function jM(i,e){if(je(e)){const t=i.stopImmediatePropagation;return i.stopImmediatePropagation=()=>{t.call(i),i._stopped=!0},e.map(n=>r=>!r._stopped&&n&&n(r))}else return e}const pm=i=>i.charCodeAt(0)===111&&i.charCodeAt(1)===110&&i.charCodeAt(2)>96&&i.charCodeAt(2)<123,$M=(i,e,t,n,r,s)=>{const o=r==="svg";e==="class"?NM(i,n,o):e==="style"?zM(i,t,n):uu(e)?yd(e)||GM(i,e,t,n,s):(e[0]==="."?(e=e.slice(1),!0):e[0]==="^"?(e=e.slice(1),!1):ZM(i,e,n,o))?(hm(i,e,n),!i.tagName.includes("-")&&(e==="value"||e==="checked"||e==="selected")&&um(i,e,n,o,s,e!=="value")):i._isVueCE&&(/[A-Z]/.test(e)||!Wt(n))?hm(i,yr(e),n,s,e):(e==="true-value"?i._trueValue=n:e==="false-value"&&(i._falseValue=n),um(i,e,n,o))};function ZM(i,e,t,n){if(n)return!!(e==="innerHTML"||e==="textContent"||e in i&&pm(e)&&Qe(t));if(e==="spellcheck"||e==="draggable"||e==="translate"||e==="autocorrect"||e==="form"||e==="list"&&i.tagName==="INPUT"||e==="type"&&i.tagName==="TEXTAREA")return!1;if(e==="width"||e==="height"){const r=i.tagName;if(r==="IMG"||r==="VIDEO"||r==="CANVAS"||r==="SOURCE")return!1}return pm(e)&&Wt(t)?!1:e in i}const KM=pn({patchProp:$M},DM);let mm;function V0(){return mm||(mm=A0(KM))}const JM=(...i)=>{V0().render(...i)},QM=(...i)=>{const e=V0().createApp(...i),{mount:t}=e;return e.mount=n=>{const r=tS(n);if(!r)return;const s=e._component;!Qe(s)&&!s.render&&!s.template&&(s.template=r.innerHTML),r.nodeType===1&&(r.textContent="");const o=t(r,!1,eS(r));return r instanceof Element&&(r.removeAttribute("v-cloak"),r.setAttribute("data-v-app","")),o},e};function eS(i){if(i instanceof SVGElement)return"svg";if(typeof MathMLElement=="function"&&i instanceof MathMLElement)return"mathml"}function tS(i){return Wt(i)?document.querySelector(i):i}/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const To="178",_i={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Fi={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},H0=0,Vf=1,G0=2,nS=3,iS=0,Vd=1,Hd=2,vi=3,qi=0,fn=1,Dn=2,Vi=0,ss=1,Sc=2,Hf=3,Gf=4,W0=5,pr=100,X0=101,Y0=102,q0=103,j0=104,$0=200,Z0=201,K0=202,J0=203,wc=204,Tc=205,Q0=206,e_=207,t_=208,n_=209,i_=210,r_=211,s_=212,o_=213,a_=214,Ec=0,Ac=1,Cc=2,ds=3,Rc=4,Ic=5,Pc=6,Lc=7,Ga=0,l_=1,c_=2,ai=0,u_=1,h_=2,f_=3,Su=4,d_=5,p_=6,m_=7,Wf="attached",g_="detached",wu=300,ji=301,br=302,wa=303,Ta=304,Eo=306,ho=1e3,nn=1001,fo=1002,Vt=1003,Tu=1004,rS=1004,Jr=1005,sS=1005,Yt=1006,so=1007,oS=1007,ii=1008,aS=1008,ci=1009,Gd=1010,Wd=1011,po=1012,Eu=1013,$i=1014,On=1015,xs=1016,Au=1017,Cu=1018,mo=1020,Xd=35902,Yd=1021,qd=1022,Zt=1023,go=1026,vo=1027,Ru=1028,Wa=1029,jd=1030,Iu=1031,lS=1032,Pu=1033,sa=33776,oa=33777,aa=33778,la=33779,Dc=35840,Uc=35841,Nc=35842,Oc=35843,Fc=36196,Bc=37492,zc=37496,kc=37808,Vc=37809,Hc=37810,Gc=37811,Wc=37812,Xc=37813,Yc=37814,qc=37815,jc=37816,$c=37817,Zc=37818,Kc=37819,Jc=37820,Qc=37821,ca=36492,eu=36494,tu=36495,$d=36283,nu=36284,iu=36285,ru=36286,v_=2200,__=2201,y_=2202,_o=2300,Ea=2301,cc=2302,Qr=2400,es=2401,Aa=2402,Lu=2500,Zd=2501,cS=0,uS=1,hS=2,x_=3200,b_=3201,fS=3202,dS=3203,wr=0,M_=1,zi="",bn="srgb",ps="srgb-linear",Ca="linear",vt="srgb",pS=0,jr=7680,mS=7681,gS=7682,vS=7683,_S=34055,yS=34056,xS=5386,bS=512,MS=513,SS=514,wS=515,TS=516,ES=517,AS=518,Xf=519,S_=512,w_=513,T_=514,Kd=515,E_=516,A_=517,C_=518,R_=519,Ra=35044,CS=35048,RS=35040,IS=35045,PS=35049,LS=35041,DS=35046,US=35050,NS=35042,OS="100",Yf="300 es",jn=2e3,Ia=2001,FS={COMPUTE:"compute",RENDER:"render"},BS={PERSPECTIVE:"perspective",LINEAR:"linear",FLAT:"flat"},zS={NORMAL:"normal",CENTROID:"centroid",SAMPLE:"sample",FIRST:"first",EITHER:"either"};class hi{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){const n=this._listeners;return n===void 0?!1:n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){const n=this._listeners;if(n===void 0)return;const r=n[e];if(r!==void 0){const s=r.indexOf(t);s!==-1&&r.splice(s,1)}}dispatchEvent(e){const t=this._listeners;if(t===void 0)return;const n=t[e.type];if(n!==void 0){e.target=this;const r=n.slice(0);for(let s=0,o=r.length;s<o;s++)r[s].call(this,e);e.target=null}}}const sn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let gm=1234567;const os=Math.PI/180,yo=180/Math.PI;function Gn(){const i=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(sn[i&255]+sn[i>>8&255]+sn[i>>16&255]+sn[i>>24&255]+"-"+sn[e&255]+sn[e>>8&255]+"-"+sn[e>>16&15|64]+sn[e>>24&255]+"-"+sn[t&63|128]+sn[t>>8&255]+"-"+sn[t>>16&255]+sn[t>>24&255]+sn[n&255]+sn[n>>8&255]+sn[n>>16&255]+sn[n>>24&255]).toLowerCase()}function Je(i,e,t){return Math.max(e,Math.min(t,i))}function Jd(i,e){return(i%e+e)%e}function kS(i,e,t,n,r){return n+(i-e)*(r-n)/(t-e)}function VS(i,e,t){return i!==e?(t-i)/(e-i):0}function ua(i,e,t){return(1-t)*i+t*e}function HS(i,e,t,n){return ua(i,e,1-Math.exp(-t*n))}function GS(i,e=1){return e-Math.abs(Jd(i,e*2)-e)}function WS(i,e,t){return i<=e?0:i>=t?1:(i=(i-e)/(t-e),i*i*(3-2*i))}function XS(i,e,t){return i<=e?0:i>=t?1:(i=(i-e)/(t-e),i*i*i*(i*(i*6-15)+10))}function YS(i,e){return i+Math.floor(Math.random()*(e-i+1))}function qS(i,e){return i+Math.random()*(e-i)}function jS(i){return i*(.5-Math.random())}function $S(i){i!==void 0&&(gm=i);let e=gm+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function ZS(i){return i*os}function KS(i){return i*yo}function JS(i){return(i&i-1)===0&&i!==0}function QS(i){return Math.pow(2,Math.ceil(Math.log(i)/Math.LN2))}function ew(i){return Math.pow(2,Math.floor(Math.log(i)/Math.LN2))}function tw(i,e,t,n,r){const s=Math.cos,o=Math.sin,a=s(t/2),l=o(t/2),c=s((e+n)/2),u=o((e+n)/2),h=s((e-n)/2),f=o((e-n)/2),d=s((n-e)/2),p=o((n-e)/2);switch(r){case"XYX":i.set(a*u,l*h,l*f,a*c);break;case"YZY":i.set(l*f,a*u,l*h,a*c);break;case"ZXZ":i.set(l*h,l*f,a*u,a*c);break;case"XZX":i.set(a*u,l*p,l*d,a*c);break;case"YXY":i.set(l*d,a*u,l*p,a*c);break;case"ZYZ":i.set(l*p,l*d,a*u,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}function Sn(i,e){switch(e.constructor){case Float32Array:return i;case Uint32Array:return i/4294967295;case Uint16Array:return i/65535;case Uint8Array:return i/255;case Int32Array:return Math.max(i/2147483647,-1);case Int16Array:return Math.max(i/32767,-1);case Int8Array:return Math.max(i/127,-1);default:throw new Error("Invalid component type.")}}function nt(i,e){switch(e.constructor){case Float32Array:return i;case Uint32Array:return Math.round(i*4294967295);case Uint16Array:return Math.round(i*65535);case Uint8Array:return Math.round(i*255);case Int32Array:return Math.round(i*2147483647);case Int16Array:return Math.round(i*32767);case Int8Array:return Math.round(i*127);default:throw new Error("Invalid component type.")}}const Zi={DEG2RAD:os,RAD2DEG:yo,generateUUID:Gn,clamp:Je,euclideanModulo:Jd,mapLinear:kS,inverseLerp:VS,lerp:ua,damp:HS,pingpong:GS,smoothstep:WS,smootherstep:XS,randInt:YS,randFloat:qS,randFloatSpread:jS,seededRandom:$S,degToRad:ZS,radToDeg:KS,isPowerOfTwo:JS,ceilPowerOfTwo:QS,floorPowerOfTwo:ew,setQuaternionFromProperEuler:tw,normalize:nt,denormalize:Sn};class de{constructor(e=0,t=0){de.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6],this.y=r[1]*t+r[4]*n+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Je(this.x,e.x,t.x),this.y=Je(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=Je(this.x,e,t),this.y=Je(this.y,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Je(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Je(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),r=Math.sin(t),s=this.x-e.x,o=this.y-e.y;return this.x=s*n-o*r+e.x,this.y=s*r+o*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class dn{constructor(e=0,t=0,n=0,r=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=r}static slerpFlat(e,t,n,r,s,o,a){let l=n[r+0],c=n[r+1],u=n[r+2],h=n[r+3];const f=s[o+0],d=s[o+1],p=s[o+2],y=s[o+3];if(a===0){e[t+0]=l,e[t+1]=c,e[t+2]=u,e[t+3]=h;return}if(a===1){e[t+0]=f,e[t+1]=d,e[t+2]=p,e[t+3]=y;return}if(h!==y||l!==f||c!==d||u!==p){let m=1-a;const g=l*f+c*d+u*p+h*y,M=g>=0?1:-1,x=1-g*g;if(x>Number.EPSILON){const C=Math.sqrt(x),w=Math.atan2(C,g*M);m=Math.sin(m*w)/C,a=Math.sin(a*w)/C}const b=a*M;if(l=l*m+f*b,c=c*m+d*b,u=u*m+p*b,h=h*m+y*b,m===1-a){const C=1/Math.sqrt(l*l+c*c+u*u+h*h);l*=C,c*=C,u*=C,h*=C}}e[t]=l,e[t+1]=c,e[t+2]=u,e[t+3]=h}static multiplyQuaternionsFlat(e,t,n,r,s,o){const a=n[r],l=n[r+1],c=n[r+2],u=n[r+3],h=s[o],f=s[o+1],d=s[o+2],p=s[o+3];return e[t]=a*p+u*h+l*d-c*f,e[t+1]=l*p+u*f+c*h-a*d,e[t+2]=c*p+u*d+a*f-l*h,e[t+3]=u*p-a*h-l*f-c*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,r=e._y,s=e._z,o=e._order,a=Math.cos,l=Math.sin,c=a(n/2),u=a(r/2),h=a(s/2),f=l(n/2),d=l(r/2),p=l(s/2);switch(o){case"XYZ":this._x=f*u*h+c*d*p,this._y=c*d*h-f*u*p,this._z=c*u*p+f*d*h,this._w=c*u*h-f*d*p;break;case"YXZ":this._x=f*u*h+c*d*p,this._y=c*d*h-f*u*p,this._z=c*u*p-f*d*h,this._w=c*u*h+f*d*p;break;case"ZXY":this._x=f*u*h-c*d*p,this._y=c*d*h+f*u*p,this._z=c*u*p+f*d*h,this._w=c*u*h-f*d*p;break;case"ZYX":this._x=f*u*h-c*d*p,this._y=c*d*h+f*u*p,this._z=c*u*p-f*d*h,this._w=c*u*h+f*d*p;break;case"YZX":this._x=f*u*h+c*d*p,this._y=c*d*h+f*u*p,this._z=c*u*p-f*d*h,this._w=c*u*h-f*d*p;break;case"XZY":this._x=f*u*h-c*d*p,this._y=c*d*h-f*u*p,this._z=c*u*p+f*d*h,this._w=c*u*h+f*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,r=Math.sin(n);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],r=t[4],s=t[8],o=t[1],a=t[5],l=t[9],c=t[2],u=t[6],h=t[10],f=n+a+h;if(f>0){const d=.5/Math.sqrt(f+1);this._w=.25/d,this._x=(u-l)*d,this._y=(s-c)*d,this._z=(o-r)*d}else if(n>a&&n>h){const d=2*Math.sqrt(1+n-a-h);this._w=(u-l)/d,this._x=.25*d,this._y=(r+o)/d,this._z=(s+c)/d}else if(a>h){const d=2*Math.sqrt(1+a-n-h);this._w=(s-c)/d,this._x=(r+o)/d,this._y=.25*d,this._z=(l+u)/d}else{const d=2*Math.sqrt(1+h-n-a);this._w=(o-r)/d,this._x=(s+c)/d,this._y=(l+u)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<1e-8?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Je(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const r=Math.min(1,t/n);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,r=e._y,s=e._z,o=e._w,a=t._x,l=t._y,c=t._z,u=t._w;return this._x=n*u+o*a+r*c-s*l,this._y=r*u+o*l+s*a-n*c,this._z=s*u+o*c+n*l-r*a,this._w=o*u-n*a-r*l-s*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,r=this._y,s=this._z,o=this._w;let a=o*e._w+n*e._x+r*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=n,this._y=r,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const d=1-t;return this._w=d*o+t*this._w,this._x=d*n+t*this._x,this._y=d*r+t*this._y,this._z=d*s+t*this._z,this.normalize(),this}const c=Math.sqrt(l),u=Math.atan2(c,a),h=Math.sin((1-t)*u)/c,f=Math.sin(t*u)/c;return this._w=o*h+this._w*f,this._x=n*h+this._x*f,this._y=r*h+this._y*f,this._z=s*h+this._z*f,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),r=Math.sqrt(1-n),s=Math.sqrt(n);return this.set(r*Math.sin(e),r*Math.cos(e),s*Math.sin(t),s*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class O{constructor(e=0,t=0,n=0){O.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(vm.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(vm.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*r,this.y=s[1]*t+s[4]*n+s[7]*r,this.z=s[2]*t+s[5]*n+s[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,r=this.z,s=e.elements,o=1/(s[3]*t+s[7]*n+s[11]*r+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*r+s[12])*o,this.y=(s[1]*t+s[5]*n+s[9]*r+s[13])*o,this.z=(s[2]*t+s[6]*n+s[10]*r+s[14])*o,this}applyQuaternion(e){const t=this.x,n=this.y,r=this.z,s=e.x,o=e.y,a=e.z,l=e.w,c=2*(o*r-a*n),u=2*(a*t-s*r),h=2*(s*n-o*t);return this.x=t+l*c+o*h-a*u,this.y=n+l*u+a*c-s*h,this.z=r+l*h+s*u-o*c,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*r,this.y=s[1]*t+s[5]*n+s[9]*r,this.z=s[2]*t+s[6]*n+s[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Je(this.x,e.x,t.x),this.y=Je(this.y,e.y,t.y),this.z=Je(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=Je(this.x,e,t),this.y=Je(this.y,e,t),this.z=Je(this.z,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Je(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,r=e.y,s=e.z,o=t.x,a=t.y,l=t.z;return this.x=r*l-s*a,this.y=s*o-n*l,this.z=n*a-r*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return _h.copy(this).projectOnVector(e),this.sub(_h)}reflect(e){return this.sub(_h.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Je(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,r=this.z-e.z;return t*t+n*n+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const r=Math.sin(t)*e;return this.x=r*Math.sin(n),this.y=Math.cos(t)*e,this.z=r*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const _h=new O,vm=new dn;class et{constructor(e,t,n,r,s,o,a,l,c){et.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,r,s,o,a,l,c)}set(e,t,n,r,s,o,a,l,c){const u=this.elements;return u[0]=e,u[1]=r,u[2]=a,u[3]=t,u[4]=s,u[5]=l,u[6]=n,u[7]=o,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,r=t.elements,s=this.elements,o=n[0],a=n[3],l=n[6],c=n[1],u=n[4],h=n[7],f=n[2],d=n[5],p=n[8],y=r[0],m=r[3],g=r[6],M=r[1],x=r[4],b=r[7],C=r[2],w=r[5],T=r[8];return s[0]=o*y+a*M+l*C,s[3]=o*m+a*x+l*w,s[6]=o*g+a*b+l*T,s[1]=c*y+u*M+h*C,s[4]=c*m+u*x+h*w,s[7]=c*g+u*b+h*T,s[2]=f*y+d*M+p*C,s[5]=f*m+d*x+p*w,s[8]=f*g+d*b+p*T,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8];return t*o*u-t*a*c-n*s*u+n*a*l+r*s*c-r*o*l}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],h=u*o-a*c,f=a*l-u*s,d=c*s-o*l,p=t*h+n*f+r*d;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const y=1/p;return e[0]=h*y,e[1]=(r*c-u*n)*y,e[2]=(a*n-r*o)*y,e[3]=f*y,e[4]=(u*t-r*l)*y,e[5]=(r*s-a*t)*y,e[6]=d*y,e[7]=(n*l-c*t)*y,e[8]=(o*t-n*s)*y,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,r,s,o,a){const l=Math.cos(s),c=Math.sin(s);return this.set(n*l,n*c,-n*(l*o+c*a)+o+e,-r*c,r*l,-r*(-c*o+l*a)+a+t,0,0,1),this}scale(e,t){return this.premultiply(yh.makeScale(e,t)),this}rotate(e){return this.premultiply(yh.makeRotation(-e)),this}translate(e,t){return this.premultiply(yh.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let r=0;r<9;r++)if(t[r]!==n[r])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const yh=new et;function I_(i){for(let e=i.length-1;e>=0;--e)if(i[e]>=65535)return!0;return!1}const nw={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Zs(i,e){return new nw[i](e)}function Pa(i){return document.createElementNS("http://www.w3.org/1999/xhtml",i)}function P_(){const i=Pa("canvas");return i.style.display="block",i}const _m={};function oo(i){i in _m||(_m[i]=!0,console.warn(i))}function iw(i,e,t){return new Promise(function(n,r){function s(){switch(i.clientWaitSync(e,i.SYNC_FLUSH_COMMANDS_BIT,0)){case i.WAIT_FAILED:r();break;case i.TIMEOUT_EXPIRED:setTimeout(s,t);break;default:n()}}setTimeout(s,t)})}function rw(i){const e=i.elements;e[2]=.5*e[2]+.5*e[3],e[6]=.5*e[6]+.5*e[7],e[10]=.5*e[10]+.5*e[11],e[14]=.5*e[14]+.5*e[15]}function sw(i){const e=i.elements;e[11]===-1?(e[10]=-e[10]-1,e[14]=-e[14]):(e[10]=-e[10],e[14]=-e[14]+1)}const ym=new et().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),xm=new et().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function ow(){const i={enabled:!0,workingColorSpace:ps,spaces:{},convert:function(r,s,o){return this.enabled===!1||s===o||!s||!o||(this.spaces[s].transfer===vt&&(r.r=Hi(r.r),r.g=Hi(r.g),r.b=Hi(r.b)),this.spaces[s].primaries!==this.spaces[o].primaries&&(r.applyMatrix3(this.spaces[s].toXYZ),r.applyMatrix3(this.spaces[o].fromXYZ)),this.spaces[o].transfer===vt&&(r.r=ao(r.r),r.g=ao(r.g),r.b=ao(r.b))),r},workingToColorSpace:function(r,s){return this.convert(r,this.workingColorSpace,s)},colorSpaceToWorking:function(r,s){return this.convert(r,s,this.workingColorSpace)},getPrimaries:function(r){return this.spaces[r].primaries},getTransfer:function(r){return r===zi?Ca:this.spaces[r].transfer},getLuminanceCoefficients:function(r,s=this.workingColorSpace){return r.fromArray(this.spaces[s].luminanceCoefficients)},define:function(r){Object.assign(this.spaces,r)},_getMatrix:function(r,s,o){return r.copy(this.spaces[s].toXYZ).multiply(this.spaces[o].fromXYZ)},_getDrawingBufferColorSpace:function(r){return this.spaces[r].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(r=this.workingColorSpace){return this.spaces[r].workingColorSpaceConfig.unpackColorSpace},fromWorkingColorSpace:function(r,s){return oo("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace()."),i.workingToColorSpace(r,s)},toWorkingColorSpace:function(r,s){return oo("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking()."),i.colorSpaceToWorking(r,s)}},e=[.64,.33,.3,.6,.15,.06],t=[.2126,.7152,.0722],n=[.3127,.329];return i.define({[ps]:{primaries:e,whitePoint:n,transfer:Ca,toXYZ:ym,fromXYZ:xm,luminanceCoefficients:t,workingColorSpaceConfig:{unpackColorSpace:bn},outputColorSpaceConfig:{drawingBufferColorSpace:bn}},[bn]:{primaries:e,whitePoint:n,transfer:vt,toXYZ:ym,fromXYZ:xm,luminanceCoefficients:t,outputColorSpaceConfig:{drawingBufferColorSpace:bn}}}),i}const ct=ow();function Hi(i){return i<.04045?i*.0773993808:Math.pow(i*.9478672986+.0521327014,2.4)}function ao(i){return i<.0031308?i*12.92:1.055*Math.pow(i,.41666)-.055}let Es;class L_{static getDataURL(e,t="image/png"){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let n;if(e instanceof HTMLCanvasElement)n=e;else{Es===void 0&&(Es=Pa("canvas")),Es.width=e.width,Es.height=e.height;const r=Es.getContext("2d");e instanceof ImageData?r.putImageData(e,0,0):r.drawImage(e,0,0,e.width,e.height),n=Es}return n.toDataURL(t)}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=Pa("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const r=n.getImageData(0,0,e.width,e.height),s=r.data;for(let o=0;o<s.length;o++)s[o]=Hi(s[o]/255)*255;return n.putImageData(r,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(Hi(t[n]/255)*255):t[n]=Hi(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let aw=0;class mr{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:aw++}),this.uuid=Gn(),this.data=e,this.dataReady=!0,this.version=0}getSize(e){const t=this.data;return t instanceof HTMLVideoElement?e.set(t.videoWidth,t.videoHeight):t!==null?e.set(t.width,t.height,t.depth||0):e.set(0,0,0),e}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},r=this.data;if(r!==null){let s;if(Array.isArray(r)){s=[];for(let o=0,a=r.length;o<a;o++)r[o].isDataTexture?s.push(xh(r[o].image)):s.push(xh(r[o]))}else s=xh(r);n.url=s}return t||(e.images[this.uuid]=n),n}}function xh(i){return typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&i instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&i instanceof ImageBitmap?L_.getDataURL(i):i.data?{data:Array.from(i.data),width:i.width,height:i.height,type:i.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let lw=0;const bh=new O;class Lt extends hi{constructor(e=Lt.DEFAULT_IMAGE,t=Lt.DEFAULT_MAPPING,n=nn,r=nn,s=Yt,o=ii,a=Zt,l=ci,c=Lt.DEFAULT_ANISOTROPY,u=zi){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:lw++}),this.uuid=Gn(),this.name="",this.source=new mr(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=r,this.magFilter=s,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new de(0,0),this.repeat=new de(1,1),this.center=new de(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new et,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=u,this.userData={},this.updateRanges=[],this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isArrayTexture=!!(e&&e.depth&&e.depth>1),this.pmremVersion=0}get width(){return this.source.getSize(bh).x}get height(){return this.source.getSize(bh).y}get depth(){return this.source.getSize(bh).z}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.renderTarget=e.renderTarget,this.isRenderTargetTexture=e.isRenderTargetTexture,this.isArrayTexture=e.isArrayTexture,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}setValues(e){for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Texture.setValues(): parameter '${t}' has value of undefined.`);continue}const r=this[t];if(r===void 0){console.warn(`THREE.Texture.setValues(): property '${t}' does not exist.`);continue}r&&n&&r.isVector2&&n.isVector2||r&&n&&r.isVector3&&n.isVector3||r&&n&&r.isMatrix3&&n.isMatrix3?r.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==wu)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case ho:e.x=e.x-Math.floor(e.x);break;case nn:e.x=e.x<0?0:1;break;case fo:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case ho:e.y=e.y-Math.floor(e.y);break;case nn:e.y=e.y<0?0:1;break;case fo:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}Lt.DEFAULT_IMAGE=null;Lt.DEFAULT_MAPPING=wu;Lt.DEFAULT_ANISOTROPY=1;class rt{constructor(e=0,t=0,n=0,r=1){rt.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,r=this.z,s=this.w,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*r+o[12]*s,this.y=o[1]*t+o[5]*n+o[9]*r+o[13]*s,this.z=o[2]*t+o[6]*n+o[10]*r+o[14]*s,this.w=o[3]*t+o[7]*n+o[11]*r+o[15]*s,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,r,s;const l=e.elements,c=l[0],u=l[4],h=l[8],f=l[1],d=l[5],p=l[9],y=l[2],m=l[6],g=l[10];if(Math.abs(u-f)<.01&&Math.abs(h-y)<.01&&Math.abs(p-m)<.01){if(Math.abs(u+f)<.1&&Math.abs(h+y)<.1&&Math.abs(p+m)<.1&&Math.abs(c+d+g-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const x=(c+1)/2,b=(d+1)/2,C=(g+1)/2,w=(u+f)/4,T=(h+y)/4,S=(p+m)/4;return x>b&&x>C?x<.01?(n=0,r=.707106781,s=.707106781):(n=Math.sqrt(x),r=w/n,s=T/n):b>C?b<.01?(n=.707106781,r=0,s=.707106781):(r=Math.sqrt(b),n=w/r,s=S/r):C<.01?(n=.707106781,r=.707106781,s=0):(s=Math.sqrt(C),n=T/s,r=S/s),this.set(n,r,s,t),this}let M=Math.sqrt((m-p)*(m-p)+(h-y)*(h-y)+(f-u)*(f-u));return Math.abs(M)<.001&&(M=1),this.x=(m-p)/M,this.y=(h-y)/M,this.z=(f-u)/M,this.w=Math.acos((c+d+g-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Je(this.x,e.x,t.x),this.y=Je(this.y,e.y,t.y),this.z=Je(this.z,e.z,t.z),this.w=Je(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=Je(this.x,e,t),this.y=Je(this.y,e,t),this.z=Je(this.z,e,t),this.w=Je(this.w,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Je(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Qd extends hi{constructor(e=1,t=1,n={}){super(),n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Yt,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,depth:1,multiview:!1},n),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=n.depth,this.scissor=new rt(0,0,e,t),this.scissorTest=!1,this.viewport=new rt(0,0,e,t);const r={width:e,height:t,depth:n.depth},s=new Lt(r);this.textures=[];const o=n.count;for(let a=0;a<o;a++)this.textures[a]=s.clone(),this.textures[a].isRenderTargetTexture=!0,this.textures[a].renderTarget=this;this._setTextureOptions(n),this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=n.depthTexture,this.samples=n.samples,this.multiview=n.multiview}_setTextureOptions(e={}){const t={minFilter:Yt,generateMipmaps:!1,flipY:!1,internalFormat:null};e.mapping!==void 0&&(t.mapping=e.mapping),e.wrapS!==void 0&&(t.wrapS=e.wrapS),e.wrapT!==void 0&&(t.wrapT=e.wrapT),e.wrapR!==void 0&&(t.wrapR=e.wrapR),e.magFilter!==void 0&&(t.magFilter=e.magFilter),e.minFilter!==void 0&&(t.minFilter=e.minFilter),e.format!==void 0&&(t.format=e.format),e.type!==void 0&&(t.type=e.type),e.anisotropy!==void 0&&(t.anisotropy=e.anisotropy),e.colorSpace!==void 0&&(t.colorSpace=e.colorSpace),e.flipY!==void 0&&(t.flipY=e.flipY),e.generateMipmaps!==void 0&&(t.generateMipmaps=e.generateMipmaps),e.internalFormat!==void 0&&(t.internalFormat=e.internalFormat);for(let n=0;n<this.textures.length;n++)this.textures[n].setValues(t)}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}set depthTexture(e){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),e!==null&&(e.renderTarget=this),this._depthTexture=e}get depthTexture(){return this._depthTexture}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let r=0,s=this.textures.length;r<s;r++)this.textures[r].image.width=e,this.textures[r].image.height=t,this.textures[r].image.depth=n,this.textures[r].isArrayTexture=this.textures[r].image.depth>1;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let t=0,n=e.textures.length;t<n;t++){this.textures[t]=e.textures[t].clone(),this.textures[t].isRenderTargetTexture=!0,this.textures[t].renderTarget=this;const r=Object.assign({},e.textures[t].image);this.textures[t].source=new mr(r)}return this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class ui extends Qd{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class Du extends Lt{constructor(e=null,t=1,n=1,r=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:r},this.magFilter=Vt,this.minFilter=Vt,this.wrapR=nn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class cw extends ui{constructor(e=1,t=1,n=1,r={}){super(e,t,r),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new Du(null,e,t,n),this._setTextureOptions(r),this.texture.isRenderTargetTexture=!0}}class Uu extends Lt{constructor(e=null,t=1,n=1,r=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:r},this.magFilter=Vt,this.minFilter=Vt,this.wrapR=nn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class uw extends ui{constructor(e=1,t=1,n=1,r={}){super(e,t,r),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new Uu(null,e,t,n),this._setTextureOptions(r),this.texture.isRenderTargetTexture=!0}}class Kt{constructor(e=new O(1/0,1/0,1/0),t=new O(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(Jn.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(Jn.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Jn.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const s=n.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let o=0,a=s.count;o<a;o++)e.isMesh===!0?e.getVertexPosition(o,Jn):Jn.fromBufferAttribute(s,o),Jn.applyMatrix4(e.matrixWorld),this.expandByPoint(Jn);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),ul.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),ul.copy(n.boundingBox)),ul.applyMatrix4(e.matrixWorld),this.union(ul)}const r=e.children;for(let s=0,o=r.length;s<o;s++)this.expandByObject(r[s],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,Jn),Jn.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Lo),hl.subVectors(this.max,Lo),As.subVectors(e.a,Lo),Cs.subVectors(e.b,Lo),Rs.subVectors(e.c,Lo),tr.subVectors(Cs,As),nr.subVectors(Rs,Cs),Dr.subVectors(As,Rs);let t=[0,-tr.z,tr.y,0,-nr.z,nr.y,0,-Dr.z,Dr.y,tr.z,0,-tr.x,nr.z,0,-nr.x,Dr.z,0,-Dr.x,-tr.y,tr.x,0,-nr.y,nr.x,0,-Dr.y,Dr.x,0];return!Mh(t,As,Cs,Rs,hl)||(t=[1,0,0,0,1,0,0,0,1],!Mh(t,As,Cs,Rs,hl))?!1:(fl.crossVectors(tr,nr),t=[fl.x,fl.y,fl.z],Mh(t,As,Cs,Rs,hl))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Jn).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Jn).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Ii[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Ii[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Ii[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Ii[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Ii[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Ii[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Ii[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Ii[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Ii),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}toJSON(){return{min:this.min.toArray(),max:this.max.toArray()}}fromJSON(e){return this.min.fromArray(e.min),this.max.fromArray(e.max),this}}const Ii=[new O,new O,new O,new O,new O,new O,new O,new O],Jn=new O,ul=new Kt,As=new O,Cs=new O,Rs=new O,tr=new O,nr=new O,Dr=new O,Lo=new O,hl=new O,fl=new O,Ur=new O;function Mh(i,e,t,n,r){for(let s=0,o=i.length-3;s<=o;s+=3){Ur.fromArray(i,s);const a=r.x*Math.abs(Ur.x)+r.y*Math.abs(Ur.y)+r.z*Math.abs(Ur.z),l=e.dot(Ur),c=t.dot(Ur),u=n.dot(Ur);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>a)return!1}return!0}const hw=new Kt,Do=new O,Sh=new O;class Jt{constructor(e=new O,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):hw.setFromPoints(e).getCenter(n);let r=0;for(let s=0,o=e.length;s<o;s++)r=Math.max(r,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Do.subVectors(e,this.center);const t=Do.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),r=(n-this.radius)*.5;this.center.addScaledVector(Do,r/n),this.radius+=r}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Sh.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Do.copy(e.center).add(Sh)),this.expandByPoint(Do.copy(e.center).sub(Sh))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}toJSON(){return{radius:this.radius,center:this.center.toArray()}}fromJSON(e){return this.radius=e.radius,this.center.fromArray(e.center),this}}const Pi=new O,wh=new O,dl=new O,ir=new O,Th=new O,pl=new O,Eh=new O;class bs{constructor(e=new O,t=new O(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Pi)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Pi.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Pi.copy(this.origin).addScaledVector(this.direction,t),Pi.distanceToSquared(e))}distanceSqToSegment(e,t,n,r){wh.copy(e).add(t).multiplyScalar(.5),dl.copy(t).sub(e).normalize(),ir.copy(this.origin).sub(wh);const s=e.distanceTo(t)*.5,o=-this.direction.dot(dl),a=ir.dot(this.direction),l=-ir.dot(dl),c=ir.lengthSq(),u=Math.abs(1-o*o);let h,f,d,p;if(u>0)if(h=o*l-a,f=o*a-l,p=s*u,h>=0)if(f>=-p)if(f<=p){const y=1/u;h*=y,f*=y,d=h*(h+o*f+2*a)+f*(o*h+f+2*l)+c}else f=s,h=Math.max(0,-(o*f+a)),d=-h*h+f*(f+2*l)+c;else f=-s,h=Math.max(0,-(o*f+a)),d=-h*h+f*(f+2*l)+c;else f<=-p?(h=Math.max(0,-(-o*s+a)),f=h>0?-s:Math.min(Math.max(-s,-l),s),d=-h*h+f*(f+2*l)+c):f<=p?(h=0,f=Math.min(Math.max(-s,-l),s),d=f*(f+2*l)+c):(h=Math.max(0,-(o*s+a)),f=h>0?s:Math.min(Math.max(-s,-l),s),d=-h*h+f*(f+2*l)+c);else f=o>0?-s:s,h=Math.max(0,-(o*f+a)),d=-h*h+f*(f+2*l)+c;return n&&n.copy(this.origin).addScaledVector(this.direction,h),r&&r.copy(wh).addScaledVector(dl,f),d}intersectSphere(e,t){Pi.subVectors(e.center,this.origin);const n=Pi.dot(this.direction),r=Pi.dot(Pi)-n*n,s=e.radius*e.radius;if(r>s)return null;const o=Math.sqrt(s-r),a=n-o,l=n+o;return l<0?null:a<0?this.at(l,t):this.at(a,t)}intersectsSphere(e){return e.radius<0?!1:this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,r,s,o,a,l;const c=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,f=this.origin;return c>=0?(n=(e.min.x-f.x)*c,r=(e.max.x-f.x)*c):(n=(e.max.x-f.x)*c,r=(e.min.x-f.x)*c),u>=0?(s=(e.min.y-f.y)*u,o=(e.max.y-f.y)*u):(s=(e.max.y-f.y)*u,o=(e.min.y-f.y)*u),n>o||s>r||((s>n||isNaN(n))&&(n=s),(o<r||isNaN(r))&&(r=o),h>=0?(a=(e.min.z-f.z)*h,l=(e.max.z-f.z)*h):(a=(e.max.z-f.z)*h,l=(e.min.z-f.z)*h),n>l||a>r)||((a>n||n!==n)&&(n=a),(l<r||r!==r)&&(r=l),r<0)?null:this.at(n>=0?n:r,t)}intersectsBox(e){return this.intersectBox(e,Pi)!==null}intersectTriangle(e,t,n,r,s){Th.subVectors(t,e),pl.subVectors(n,e),Eh.crossVectors(Th,pl);let o=this.direction.dot(Eh),a;if(o>0){if(r)return null;a=1}else if(o<0)a=-1,o=-o;else return null;ir.subVectors(this.origin,e);const l=a*this.direction.dot(pl.crossVectors(ir,pl));if(l<0)return null;const c=a*this.direction.dot(Th.cross(ir));if(c<0||l+c>o)return null;const u=-a*ir.dot(Eh);return u<0?null:this.at(u/o,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Ge{constructor(e,t,n,r,s,o,a,l,c,u,h,f,d,p,y,m){Ge.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,r,s,o,a,l,c,u,h,f,d,p,y,m)}set(e,t,n,r,s,o,a,l,c,u,h,f,d,p,y,m){const g=this.elements;return g[0]=e,g[4]=t,g[8]=n,g[12]=r,g[1]=s,g[5]=o,g[9]=a,g[13]=l,g[2]=c,g[6]=u,g[10]=h,g[14]=f,g[3]=d,g[7]=p,g[11]=y,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Ge().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,r=1/Is.setFromMatrixColumn(e,0).length(),s=1/Is.setFromMatrixColumn(e,1).length(),o=1/Is.setFromMatrixColumn(e,2).length();return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*o,t[9]=n[9]*o,t[10]=n[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,r=e.y,s=e.z,o=Math.cos(n),a=Math.sin(n),l=Math.cos(r),c=Math.sin(r),u=Math.cos(s),h=Math.sin(s);if(e.order==="XYZ"){const f=o*u,d=o*h,p=a*u,y=a*h;t[0]=l*u,t[4]=-l*h,t[8]=c,t[1]=d+p*c,t[5]=f-y*c,t[9]=-a*l,t[2]=y-f*c,t[6]=p+d*c,t[10]=o*l}else if(e.order==="YXZ"){const f=l*u,d=l*h,p=c*u,y=c*h;t[0]=f+y*a,t[4]=p*a-d,t[8]=o*c,t[1]=o*h,t[5]=o*u,t[9]=-a,t[2]=d*a-p,t[6]=y+f*a,t[10]=o*l}else if(e.order==="ZXY"){const f=l*u,d=l*h,p=c*u,y=c*h;t[0]=f-y*a,t[4]=-o*h,t[8]=p+d*a,t[1]=d+p*a,t[5]=o*u,t[9]=y-f*a,t[2]=-o*c,t[6]=a,t[10]=o*l}else if(e.order==="ZYX"){const f=o*u,d=o*h,p=a*u,y=a*h;t[0]=l*u,t[4]=p*c-d,t[8]=f*c+y,t[1]=l*h,t[5]=y*c+f,t[9]=d*c-p,t[2]=-c,t[6]=a*l,t[10]=o*l}else if(e.order==="YZX"){const f=o*l,d=o*c,p=a*l,y=a*c;t[0]=l*u,t[4]=y-f*h,t[8]=p*h+d,t[1]=h,t[5]=o*u,t[9]=-a*u,t[2]=-c*u,t[6]=d*h+p,t[10]=f-y*h}else if(e.order==="XZY"){const f=o*l,d=o*c,p=a*l,y=a*c;t[0]=l*u,t[4]=-h,t[8]=c*u,t[1]=f*h+y,t[5]=o*u,t[9]=d*h-p,t[2]=p*h-d,t[6]=a*u,t[10]=y*h+f}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(fw,e,dw)}lookAt(e,t,n){const r=this.elements;return zn.subVectors(e,t),zn.lengthSq()===0&&(zn.z=1),zn.normalize(),rr.crossVectors(n,zn),rr.lengthSq()===0&&(Math.abs(n.z)===1?zn.x+=1e-4:zn.z+=1e-4,zn.normalize(),rr.crossVectors(n,zn)),rr.normalize(),ml.crossVectors(zn,rr),r[0]=rr.x,r[4]=ml.x,r[8]=zn.x,r[1]=rr.y,r[5]=ml.y,r[9]=zn.y,r[2]=rr.z,r[6]=ml.z,r[10]=zn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,r=t.elements,s=this.elements,o=n[0],a=n[4],l=n[8],c=n[12],u=n[1],h=n[5],f=n[9],d=n[13],p=n[2],y=n[6],m=n[10],g=n[14],M=n[3],x=n[7],b=n[11],C=n[15],w=r[0],T=r[4],S=r[8],_=r[12],v=r[1],A=r[5],D=r[9],B=r[13],X=r[2],Y=r[6],z=r[10],Q=r[14],K=r[3],fe=r[7],ge=r[11],oe=r[15];return s[0]=o*w+a*v+l*X+c*K,s[4]=o*T+a*A+l*Y+c*fe,s[8]=o*S+a*D+l*z+c*ge,s[12]=o*_+a*B+l*Q+c*oe,s[1]=u*w+h*v+f*X+d*K,s[5]=u*T+h*A+f*Y+d*fe,s[9]=u*S+h*D+f*z+d*ge,s[13]=u*_+h*B+f*Q+d*oe,s[2]=p*w+y*v+m*X+g*K,s[6]=p*T+y*A+m*Y+g*fe,s[10]=p*S+y*D+m*z+g*ge,s[14]=p*_+y*B+m*Q+g*oe,s[3]=M*w+x*v+b*X+C*K,s[7]=M*T+x*A+b*Y+C*fe,s[11]=M*S+x*D+b*z+C*ge,s[15]=M*_+x*B+b*Q+C*oe,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],r=e[8],s=e[12],o=e[1],a=e[5],l=e[9],c=e[13],u=e[2],h=e[6],f=e[10],d=e[14],p=e[3],y=e[7],m=e[11],g=e[15];return p*(+s*l*h-r*c*h-s*a*f+n*c*f+r*a*d-n*l*d)+y*(+t*l*d-t*c*f+s*o*f-r*o*d+r*c*u-s*l*u)+m*(+t*c*h-t*a*d-s*o*h+n*o*d+s*a*u-n*c*u)+g*(-r*a*u-t*l*h+t*a*f+r*o*h-n*o*f+n*l*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],h=e[9],f=e[10],d=e[11],p=e[12],y=e[13],m=e[14],g=e[15],M=h*m*c-y*f*c+y*l*d-a*m*d-h*l*g+a*f*g,x=p*f*c-u*m*c-p*l*d+o*m*d+u*l*g-o*f*g,b=u*y*c-p*h*c+p*a*d-o*y*d-u*a*g+o*h*g,C=p*h*l-u*y*l-p*a*f+o*y*f+u*a*m-o*h*m,w=t*M+n*x+r*b+s*C;if(w===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const T=1/w;return e[0]=M*T,e[1]=(y*f*s-h*m*s-y*r*d+n*m*d+h*r*g-n*f*g)*T,e[2]=(a*m*s-y*l*s+y*r*c-n*m*c-a*r*g+n*l*g)*T,e[3]=(h*l*s-a*f*s-h*r*c+n*f*c+a*r*d-n*l*d)*T,e[4]=x*T,e[5]=(u*m*s-p*f*s+p*r*d-t*m*d-u*r*g+t*f*g)*T,e[6]=(p*l*s-o*m*s-p*r*c+t*m*c+o*r*g-t*l*g)*T,e[7]=(o*f*s-u*l*s+u*r*c-t*f*c-o*r*d+t*l*d)*T,e[8]=b*T,e[9]=(p*h*s-u*y*s-p*n*d+t*y*d+u*n*g-t*h*g)*T,e[10]=(o*y*s-p*a*s+p*n*c-t*y*c-o*n*g+t*a*g)*T,e[11]=(u*a*s-o*h*s-u*n*c+t*h*c+o*n*d-t*a*d)*T,e[12]=C*T,e[13]=(u*y*r-p*h*r+p*n*f-t*y*f-u*n*m+t*h*m)*T,e[14]=(p*a*r-o*y*r-p*n*l+t*y*l+o*n*m-t*a*m)*T,e[15]=(o*h*r-u*a*r+u*n*l-t*h*l-o*n*f+t*a*f)*T,this}scale(e){const t=this.elements,n=e.x,r=e.y,s=e.z;return t[0]*=n,t[4]*=r,t[8]*=s,t[1]*=n,t[5]*=r,t[9]*=s,t[2]*=n,t[6]*=r,t[10]*=s,t[3]*=n,t[7]*=r,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,r))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),r=Math.sin(t),s=1-n,o=e.x,a=e.y,l=e.z,c=s*o,u=s*a;return this.set(c*o+n,c*a-r*l,c*l+r*a,0,c*a+r*l,u*a+n,u*l-r*o,0,c*l-r*a,u*l+r*o,s*l*l+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,r,s,o){return this.set(1,n,s,0,e,1,o,0,t,r,1,0,0,0,0,1),this}compose(e,t,n){const r=this.elements,s=t._x,o=t._y,a=t._z,l=t._w,c=s+s,u=o+o,h=a+a,f=s*c,d=s*u,p=s*h,y=o*u,m=o*h,g=a*h,M=l*c,x=l*u,b=l*h,C=n.x,w=n.y,T=n.z;return r[0]=(1-(y+g))*C,r[1]=(d+b)*C,r[2]=(p-x)*C,r[3]=0,r[4]=(d-b)*w,r[5]=(1-(f+g))*w,r[6]=(m+M)*w,r[7]=0,r[8]=(p+x)*T,r[9]=(m-M)*T,r[10]=(1-(f+y))*T,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,n){const r=this.elements;let s=Is.set(r[0],r[1],r[2]).length();const o=Is.set(r[4],r[5],r[6]).length(),a=Is.set(r[8],r[9],r[10]).length();this.determinant()<0&&(s=-s),e.x=r[12],e.y=r[13],e.z=r[14],Qn.copy(this);const c=1/s,u=1/o,h=1/a;return Qn.elements[0]*=c,Qn.elements[1]*=c,Qn.elements[2]*=c,Qn.elements[4]*=u,Qn.elements[5]*=u,Qn.elements[6]*=u,Qn.elements[8]*=h,Qn.elements[9]*=h,Qn.elements[10]*=h,t.setFromRotationMatrix(Qn),n.x=s,n.y=o,n.z=a,this}makePerspective(e,t,n,r,s,o,a=jn){const l=this.elements,c=2*s/(t-e),u=2*s/(n-r),h=(t+e)/(t-e),f=(n+r)/(n-r);let d,p;if(a===jn)d=-(o+s)/(o-s),p=-2*o*s/(o-s);else if(a===Ia)d=-o/(o-s),p=-o*s/(o-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return l[0]=c,l[4]=0,l[8]=h,l[12]=0,l[1]=0,l[5]=u,l[9]=f,l[13]=0,l[2]=0,l[6]=0,l[10]=d,l[14]=p,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,n,r,s,o,a=jn){const l=this.elements,c=1/(t-e),u=1/(n-r),h=1/(o-s),f=(t+e)*c,d=(n+r)*u;let p,y;if(a===jn)p=(o+s)*h,y=-2*h;else if(a===Ia)p=s*h,y=-1*h;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return l[0]=2*c,l[4]=0,l[8]=0,l[12]=-f,l[1]=0,l[5]=2*u,l[9]=0,l[13]=-d,l[2]=0,l[6]=0,l[10]=y,l[14]=-p,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let r=0;r<16;r++)if(t[r]!==n[r])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const Is=new O,Qn=new Ge,fw=new O(0,0,0),dw=new O(1,1,1),rr=new O,ml=new O,zn=new O,bm=new Ge,Mm=new dn;class Tn{constructor(e=0,t=0,n=0,r=Tn.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,r=this._order){return this._x=e,this._y=t,this._z=n,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const r=e.elements,s=r[0],o=r[4],a=r[8],l=r[1],c=r[5],u=r[9],h=r[2],f=r[6],d=r[10];switch(t){case"XYZ":this._y=Math.asin(Je(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,d),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(f,c),this._z=0);break;case"YXZ":this._x=Math.asin(-Je(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,d),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-h,s),this._z=0);break;case"ZXY":this._x=Math.asin(Je(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-h,d),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-Je(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(f,d),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(Je(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-h,s)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-Je(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(f,c),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-u,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return bm.makeRotationFromQuaternion(e),this.setFromRotationMatrix(bm,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Mm.setFromEuler(this),this.setFromQuaternion(Mm,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Tn.DEFAULT_ORDER="XYZ";class Xa{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let pw=0;const Sm=new O,Ps=new dn,Li=new Ge,gl=new O,Uo=new O,mw=new O,gw=new dn,wm=new O(1,0,0),Tm=new O(0,1,0),Em=new O(0,0,1),Am={type:"added"},vw={type:"removed"},Ls={type:"childadded",child:null},Ah={type:"childremoved",child:null};class ht extends hi{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:pw++}),this.uuid=Gn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=ht.DEFAULT_UP.clone();const e=new O,t=new Tn,n=new dn,r=new O(1,1,1);function s(){n.setFromEuler(t,!1)}function o(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new Ge},normalMatrix:{value:new et}}),this.matrix=new Ge,this.matrixWorld=new Ge,this.matrixAutoUpdate=ht.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=ht.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Xa,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Ps.setFromAxisAngle(e,t),this.quaternion.multiply(Ps),this}rotateOnWorldAxis(e,t){return Ps.setFromAxisAngle(e,t),this.quaternion.premultiply(Ps),this}rotateX(e){return this.rotateOnAxis(wm,e)}rotateY(e){return this.rotateOnAxis(Tm,e)}rotateZ(e){return this.rotateOnAxis(Em,e)}translateOnAxis(e,t){return Sm.copy(e).applyQuaternion(this.quaternion),this.position.add(Sm.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(wm,e)}translateY(e){return this.translateOnAxis(Tm,e)}translateZ(e){return this.translateOnAxis(Em,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Li.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?gl.copy(e):gl.set(e,t,n);const r=this.parent;this.updateWorldMatrix(!0,!1),Uo.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Li.lookAt(Uo,gl,this.up):Li.lookAt(gl,Uo,this.up),this.quaternion.setFromRotationMatrix(Li),r&&(Li.extractRotation(r.matrixWorld),Ps.setFromRotationMatrix(Li),this.quaternion.premultiply(Ps.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(Am),Ls.child=e,this.dispatchEvent(Ls),Ls.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(vw),Ah.child=e,this.dispatchEvent(Ah),Ah.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Li.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Li.multiply(e.parent.matrixWorld)),e.applyMatrix4(Li),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(Am),Ls.child=e,this.dispatchEvent(Ls),Ls.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,r=this.children.length;n<r;n++){const o=this.children[n].getObjectByProperty(e,t);if(o!==void 0)return o}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const r=this.children;for(let s=0,o=r.length;s<o;s++)r[s].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Uo,e,mw),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Uo,gw,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const r=this.children;for(let s=0,o=r.length;s<o;s++)r[s].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});const r={};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),this.frustumCulled===!1&&(r.frustumCulled=!1),this.renderOrder!==0&&(r.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),r.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(r.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(r.type="BatchedMesh",r.perObjectFrustumCulled=this.perObjectFrustumCulled,r.sortObjects=this.sortObjects,r.drawRanges=this._drawRanges,r.reservedRanges=this._reservedRanges,r.geometryInfo=this._geometryInfo.map(a=>({...a,boundingBox:a.boundingBox?a.boundingBox.toJSON():void 0,boundingSphere:a.boundingSphere?a.boundingSphere.toJSON():void 0})),r.instanceInfo=this._instanceInfo.map(a=>({...a})),r.availableInstanceIds=this._availableInstanceIds.slice(),r.availableGeometryIds=this._availableGeometryIds.slice(),r.nextIndexStart=this._nextIndexStart,r.nextVertexStart=this._nextVertexStart,r.geometryCount=this._geometryCount,r.maxInstanceCount=this._maxInstanceCount,r.maxVertexCount=this._maxVertexCount,r.maxIndexCount=this._maxIndexCount,r.geometryInitialized=this._geometryInitialized,r.matricesTexture=this._matricesTexture.toJSON(e),r.indirectTexture=this._indirectTexture.toJSON(e),this._colorsTexture!==null&&(r.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(r.boundingSphere=this.boundingSphere.toJSON()),this.boundingBox!==null&&(r.boundingBox=this.boundingBox.toJSON()));function s(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=s(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,u=l.length;c<u;c++){const h=l[c];s(e.shapes,h)}else s(e.shapes,l)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(s(e.materials,this.material[l]));r.material=a}else r.material=s(e.materials,this.material);if(this.children.length>0){r.children=[];for(let a=0;a<this.children.length;a++)r.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];r.animations.push(s(e.animations,l))}}if(t){const a=o(e.geometries),l=o(e.materials),c=o(e.textures),u=o(e.images),h=o(e.shapes),f=o(e.skeletons),d=o(e.animations),p=o(e.nodes);a.length>0&&(n.geometries=a),l.length>0&&(n.materials=l),c.length>0&&(n.textures=c),u.length>0&&(n.images=u),h.length>0&&(n.shapes=h),f.length>0&&(n.skeletons=f),d.length>0&&(n.animations=d),p.length>0&&(n.nodes=p)}return n.object=r,n;function o(a){const l=[];for(const c in a){const u=a[c];delete u.metadata,l.push(u)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const r=e.children[n];this.add(r.clone())}return this}}ht.DEFAULT_UP=new O(0,1,0);ht.DEFAULT_MATRIX_AUTO_UPDATE=!0;ht.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const ei=new O,Di=new O,Ch=new O,Ui=new O,Ds=new O,Us=new O,Cm=new O,Rh=new O,Ih=new O,Ph=new O,Lh=new rt,Dh=new rt,Uh=new rt;class wn{constructor(e=new O,t=new O,n=new O){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,r){r.subVectors(n,t),ei.subVectors(e,t),r.cross(ei);const s=r.lengthSq();return s>0?r.multiplyScalar(1/Math.sqrt(s)):r.set(0,0,0)}static getBarycoord(e,t,n,r,s){ei.subVectors(r,t),Di.subVectors(n,t),Ch.subVectors(e,t);const o=ei.dot(ei),a=ei.dot(Di),l=ei.dot(Ch),c=Di.dot(Di),u=Di.dot(Ch),h=o*c-a*a;if(h===0)return s.set(0,0,0),null;const f=1/h,d=(c*l-a*u)*f,p=(o*u-a*l)*f;return s.set(1-d-p,p,d)}static containsPoint(e,t,n,r){return this.getBarycoord(e,t,n,r,Ui)===null?!1:Ui.x>=0&&Ui.y>=0&&Ui.x+Ui.y<=1}static getInterpolation(e,t,n,r,s,o,a,l){return this.getBarycoord(e,t,n,r,Ui)===null?(l.x=0,l.y=0,"z"in l&&(l.z=0),"w"in l&&(l.w=0),null):(l.setScalar(0),l.addScaledVector(s,Ui.x),l.addScaledVector(o,Ui.y),l.addScaledVector(a,Ui.z),l)}static getInterpolatedAttribute(e,t,n,r,s,o){return Lh.setScalar(0),Dh.setScalar(0),Uh.setScalar(0),Lh.fromBufferAttribute(e,t),Dh.fromBufferAttribute(e,n),Uh.fromBufferAttribute(e,r),o.setScalar(0),o.addScaledVector(Lh,s.x),o.addScaledVector(Dh,s.y),o.addScaledVector(Uh,s.z),o}static isFrontFacing(e,t,n,r){return ei.subVectors(n,t),Di.subVectors(e,t),ei.cross(Di).dot(r)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,r){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,t,n,r){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return ei.subVectors(this.c,this.b),Di.subVectors(this.a,this.b),ei.cross(Di).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return wn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return wn.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,r,s){return wn.getInterpolation(e,this.a,this.b,this.c,t,n,r,s)}containsPoint(e){return wn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return wn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,r=this.b,s=this.c;let o,a;Ds.subVectors(r,n),Us.subVectors(s,n),Rh.subVectors(e,n);const l=Ds.dot(Rh),c=Us.dot(Rh);if(l<=0&&c<=0)return t.copy(n);Ih.subVectors(e,r);const u=Ds.dot(Ih),h=Us.dot(Ih);if(u>=0&&h<=u)return t.copy(r);const f=l*h-u*c;if(f<=0&&l>=0&&u<=0)return o=l/(l-u),t.copy(n).addScaledVector(Ds,o);Ph.subVectors(e,s);const d=Ds.dot(Ph),p=Us.dot(Ph);if(p>=0&&d<=p)return t.copy(s);const y=d*c-l*p;if(y<=0&&c>=0&&p<=0)return a=c/(c-p),t.copy(n).addScaledVector(Us,a);const m=u*p-d*h;if(m<=0&&h-u>=0&&d-p>=0)return Cm.subVectors(s,r),a=(h-u)/(h-u+(d-p)),t.copy(r).addScaledVector(Cm,a);const g=1/(m+y+f);return o=y*g,a=f*g,t.copy(n).addScaledVector(Ds,o).addScaledVector(Us,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const D_={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},sr={h:0,s:0,l:0},vl={h:0,s:0,l:0};function Nh(i,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?i+(e-i)*6*t:t<1/2?e:t<2/3?i+(e-i)*6*(2/3-t):i}class Ee{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const r=e;r&&r.isColor?this.copy(r):typeof r=="number"?this.setHex(r):typeof r=="string"&&this.setStyle(r)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=bn){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,ct.colorSpaceToWorking(this,t),this}setRGB(e,t,n,r=ct.workingColorSpace){return this.r=e,this.g=t,this.b=n,ct.colorSpaceToWorking(this,r),this}setHSL(e,t,n,r=ct.workingColorSpace){if(e=Jd(e,1),t=Je(t,0,1),n=Je(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,o=2*n-s;this.r=Nh(o,s,e+1/3),this.g=Nh(o,s,e),this.b=Nh(o,s,e-1/3)}return ct.colorSpaceToWorking(this,r),this}setStyle(e,t=bn){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const o=r[1],a=r[2];switch(o){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=r[1],o=s.length;if(o===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(o===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=bn){const n=D_[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Hi(e.r),this.g=Hi(e.g),this.b=Hi(e.b),this}copyLinearToSRGB(e){return this.r=ao(e.r),this.g=ao(e.g),this.b=ao(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=bn){return ct.workingToColorSpace(on.copy(this),e),Math.round(Je(on.r*255,0,255))*65536+Math.round(Je(on.g*255,0,255))*256+Math.round(Je(on.b*255,0,255))}getHexString(e=bn){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=ct.workingColorSpace){ct.workingToColorSpace(on.copy(this),t);const n=on.r,r=on.g,s=on.b,o=Math.max(n,r,s),a=Math.min(n,r,s);let l,c;const u=(a+o)/2;if(a===o)l=0,c=0;else{const h=o-a;switch(c=u<=.5?h/(o+a):h/(2-o-a),o){case n:l=(r-s)/h+(r<s?6:0);break;case r:l=(s-n)/h+2;break;case s:l=(n-r)/h+4;break}l/=6}return e.h=l,e.s=c,e.l=u,e}getRGB(e,t=ct.workingColorSpace){return ct.workingToColorSpace(on.copy(this),t),e.r=on.r,e.g=on.g,e.b=on.b,e}getStyle(e=bn){ct.workingToColorSpace(on.copy(this),e);const t=on.r,n=on.g,r=on.b;return e!==bn?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${r.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(r*255)})`}offsetHSL(e,t,n){return this.getHSL(sr),this.setHSL(sr.h+e,sr.s+t,sr.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(sr),e.getHSL(vl);const n=ua(sr.h,vl.h,t),r=ua(sr.s,vl.s,t),s=ua(sr.l,vl.l,t);return this.setHSL(n,r,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,r=this.b,s=e.elements;return this.r=s[0]*t+s[3]*n+s[6]*r,this.g=s[1]*t+s[4]*n+s[7]*r,this.b=s[2]*t+s[5]*n+s[8]*r,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const on=new Ee;Ee.NAMES=D_;let _w=0;class gn extends hi{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:_w++}),this.uuid=Gn(),this.name="",this.type="Material",this.blending=ss,this.side=qi,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=wc,this.blendDst=Tc,this.blendEquation=pr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Ee(0,0,0),this.blendAlpha=0,this.depthFunc=ds,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Xf,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=jr,this.stencilZFail=jr,this.stencilZPass=jr,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const r=this[t];if(r===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.7,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==ss&&(n.blending=this.blending),this.side!==qi&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==wc&&(n.blendSrc=this.blendSrc),this.blendDst!==Tc&&(n.blendDst=this.blendDst),this.blendEquation!==pr&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==ds&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==Xf&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==jr&&(n.stencilFail=this.stencilFail),this.stencilZFail!==jr&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==jr&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function r(s){const o=[];for(const a in s){const l=s[a];delete l.metadata,o.push(l)}return o}if(t){const s=r(e.textures),o=r(e.images);s.length>0&&(n.textures=s),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const r=t.length;n=new Array(r);for(let s=0;s!==r;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class Ti extends gn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Ee(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Tn,this.combine=Ga,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const ki=yw();function yw(){const i=new ArrayBuffer(4),e=new Float32Array(i),t=new Uint32Array(i),n=new Uint32Array(512),r=new Uint32Array(512);for(let l=0;l<256;++l){const c=l-127;c<-27?(n[l]=0,n[l|256]=32768,r[l]=24,r[l|256]=24):c<-14?(n[l]=1024>>-c-14,n[l|256]=1024>>-c-14|32768,r[l]=-c-1,r[l|256]=-c-1):c<=15?(n[l]=c+15<<10,n[l|256]=c+15<<10|32768,r[l]=13,r[l|256]=13):c<128?(n[l]=31744,n[l|256]=64512,r[l]=24,r[l|256]=24):(n[l]=31744,n[l|256]=64512,r[l]=13,r[l|256]=13)}const s=new Uint32Array(2048),o=new Uint32Array(64),a=new Uint32Array(64);for(let l=1;l<1024;++l){let c=l<<13,u=0;for(;(c&8388608)===0;)c<<=1,u-=8388608;c&=-8388609,u+=947912704,s[l]=c|u}for(let l=1024;l<2048;++l)s[l]=939524096+(l-1024<<13);for(let l=1;l<31;++l)o[l]=l<<23;o[31]=1199570944,o[32]=2147483648;for(let l=33;l<63;++l)o[l]=2147483648+(l-32<<23);o[63]=3347054592;for(let l=1;l<64;++l)l!==32&&(a[l]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:r,mantissaTable:s,exponentTable:o,offsetTable:a}}function Ln(i){Math.abs(i)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),i=Je(i,-65504,65504),ki.floatView[0]=i;const e=ki.uint32View[0],t=e>>23&511;return ki.baseTable[t]+((e&8388607)>>ki.shiftTable[t])}function jo(i){const e=i>>10;return ki.uint32View[0]=ki.mantissaTable[ki.offsetTable[e]+(i&1023)]+ki.exponentTable[e],ki.floatView[0]}class xw{static toHalfFloat(e){return Ln(e)}static fromHalfFloat(e){return jo(e)}}const Xt=new O,_l=new de;let bw=0;class ft{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:bw++}),this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=Ra,this.updateRanges=[],this.gpuType=On,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let r=0,s=this.itemSize;r<s;r++)this.array[e+r]=t.array[n+r];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)_l.fromBufferAttribute(this,t),_l.applyMatrix3(e),this.setXY(t,_l.x,_l.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)Xt.fromBufferAttribute(this,t),Xt.applyMatrix3(e),this.setXYZ(t,Xt.x,Xt.y,Xt.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)Xt.fromBufferAttribute(this,t),Xt.applyMatrix4(e),this.setXYZ(t,Xt.x,Xt.y,Xt.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Xt.fromBufferAttribute(this,t),Xt.applyNormalMatrix(e),this.setXYZ(t,Xt.x,Xt.y,Xt.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Xt.fromBufferAttribute(this,t),Xt.transformDirection(e),this.setXYZ(t,Xt.x,Xt.y,Xt.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=Sn(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=nt(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Sn(t,this.array)),t}setX(e,t){return this.normalized&&(t=nt(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Sn(t,this.array)),t}setY(e,t){return this.normalized&&(t=nt(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Sn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=nt(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Sn(t,this.array)),t}setW(e,t){return this.normalized&&(t=nt(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=nt(t,this.array),n=nt(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,r){return e*=this.itemSize,this.normalized&&(t=nt(t,this.array),n=nt(n,this.array),r=nt(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this}setXYZW(e,t,n,r,s){return e*=this.itemSize,this.normalized&&(t=nt(t,this.array),n=nt(n,this.array),r=nt(r,this.array),s=nt(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Ra&&(e.usage=this.usage),e}}class Mw extends ft{constructor(e,t,n){super(new Int8Array(e),t,n)}}class Sw extends ft{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class ww extends ft{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class Tw extends ft{constructor(e,t,n){super(new Int16Array(e),t,n)}}class ep extends ft{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class Ew extends ft{constructor(e,t,n){super(new Int32Array(e),t,n)}}class tp extends ft{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class Aw extends ft{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=jo(this.array[e*this.itemSize]);return this.normalized&&(t=Sn(t,this.array)),t}setX(e,t){return this.normalized&&(t=nt(t,this.array)),this.array[e*this.itemSize]=Ln(t),this}getY(e){let t=jo(this.array[e*this.itemSize+1]);return this.normalized&&(t=Sn(t,this.array)),t}setY(e,t){return this.normalized&&(t=nt(t,this.array)),this.array[e*this.itemSize+1]=Ln(t),this}getZ(e){let t=jo(this.array[e*this.itemSize+2]);return this.normalized&&(t=Sn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=nt(t,this.array)),this.array[e*this.itemSize+2]=Ln(t),this}getW(e){let t=jo(this.array[e*this.itemSize+3]);return this.normalized&&(t=Sn(t,this.array)),t}setW(e,t){return this.normalized&&(t=nt(t,this.array)),this.array[e*this.itemSize+3]=Ln(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=nt(t,this.array),n=nt(n,this.array)),this.array[e+0]=Ln(t),this.array[e+1]=Ln(n),this}setXYZ(e,t,n,r){return e*=this.itemSize,this.normalized&&(t=nt(t,this.array),n=nt(n,this.array),r=nt(r,this.array)),this.array[e+0]=Ln(t),this.array[e+1]=Ln(n),this.array[e+2]=Ln(r),this}setXYZW(e,t,n,r,s){return e*=this.itemSize,this.normalized&&(t=nt(t,this.array),n=nt(n,this.array),r=nt(r,this.array),s=nt(s,this.array)),this.array[e+0]=Ln(t),this.array[e+1]=Ln(n),this.array[e+2]=Ln(r),this.array[e+3]=Ln(s),this}}class ze extends ft{constructor(e,t,n){super(new Float32Array(e),t,n)}}let Cw=0;const Yn=new Ge,Oh=new ht,Ns=new O,kn=new Kt,No=new Kt,$t=new O;class tt extends hi{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Cw++}),this.uuid=Gn(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(I_(e)?tp:ep)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new et().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const r=this.attributes.tangent;return r!==void 0&&(r.transformDirection(e),r.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Yn.makeRotationFromQuaternion(e),this.applyMatrix4(Yn),this}rotateX(e){return Yn.makeRotationX(e),this.applyMatrix4(Yn),this}rotateY(e){return Yn.makeRotationY(e),this.applyMatrix4(Yn),this}rotateZ(e){return Yn.makeRotationZ(e),this.applyMatrix4(Yn),this}translate(e,t,n){return Yn.makeTranslation(e,t,n),this.applyMatrix4(Yn),this}scale(e,t,n){return Yn.makeScale(e,t,n),this.applyMatrix4(Yn),this}lookAt(e){return Oh.lookAt(e),Oh.updateMatrix(),this.applyMatrix4(Oh.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ns).negate(),this.translate(Ns.x,Ns.y,Ns.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const n=[];for(let r=0,s=e.length;r<s;r++){const o=e[r];n.push(o.x,o.y,o.z||0)}this.setAttribute("position",new ze(n,3))}else{const n=Math.min(e.length,t.count);for(let r=0;r<n;r++){const s=e[r];t.setXYZ(r,s.x,s.y,s.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Kt);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new O(-1/0,-1/0,-1/0),new O(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,r=t.length;n<r;n++){const s=t[n];kn.setFromBufferAttribute(s),this.morphTargetsRelative?($t.addVectors(this.boundingBox.min,kn.min),this.boundingBox.expandByPoint($t),$t.addVectors(this.boundingBox.max,kn.max),this.boundingBox.expandByPoint($t)):(this.boundingBox.expandByPoint(kn.min),this.boundingBox.expandByPoint(kn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Jt);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new O,1/0);return}if(e){const n=this.boundingSphere.center;if(kn.setFromBufferAttribute(e),t)for(let s=0,o=t.length;s<o;s++){const a=t[s];No.setFromBufferAttribute(a),this.morphTargetsRelative?($t.addVectors(kn.min,No.min),kn.expandByPoint($t),$t.addVectors(kn.max,No.max),kn.expandByPoint($t)):(kn.expandByPoint(No.min),kn.expandByPoint(No.max))}kn.getCenter(n);let r=0;for(let s=0,o=e.count;s<o;s++)$t.fromBufferAttribute(e,s),r=Math.max(r,n.distanceToSquared($t));if(t)for(let s=0,o=t.length;s<o;s++){const a=t[s],l=this.morphTargetsRelative;for(let c=0,u=a.count;c<u;c++)$t.fromBufferAttribute(a,c),l&&(Ns.fromBufferAttribute(e,c),$t.add(Ns)),r=Math.max(r,n.distanceToSquared($t))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.position,r=t.normal,s=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new ft(new Float32Array(4*n.count),4));const o=this.getAttribute("tangent"),a=[],l=[];for(let S=0;S<n.count;S++)a[S]=new O,l[S]=new O;const c=new O,u=new O,h=new O,f=new de,d=new de,p=new de,y=new O,m=new O;function g(S,_,v){c.fromBufferAttribute(n,S),u.fromBufferAttribute(n,_),h.fromBufferAttribute(n,v),f.fromBufferAttribute(s,S),d.fromBufferAttribute(s,_),p.fromBufferAttribute(s,v),u.sub(c),h.sub(c),d.sub(f),p.sub(f);const A=1/(d.x*p.y-p.x*d.y);isFinite(A)&&(y.copy(u).multiplyScalar(p.y).addScaledVector(h,-d.y).multiplyScalar(A),m.copy(h).multiplyScalar(d.x).addScaledVector(u,-p.x).multiplyScalar(A),a[S].add(y),a[_].add(y),a[v].add(y),l[S].add(m),l[_].add(m),l[v].add(m))}let M=this.groups;M.length===0&&(M=[{start:0,count:e.count}]);for(let S=0,_=M.length;S<_;++S){const v=M[S],A=v.start,D=v.count;for(let B=A,X=A+D;B<X;B+=3)g(e.getX(B+0),e.getX(B+1),e.getX(B+2))}const x=new O,b=new O,C=new O,w=new O;function T(S){C.fromBufferAttribute(r,S),w.copy(C);const _=a[S];x.copy(_),x.sub(C.multiplyScalar(C.dot(_))).normalize(),b.crossVectors(w,_);const A=b.dot(l[S])<0?-1:1;o.setXYZW(S,x.x,x.y,x.z,A)}for(let S=0,_=M.length;S<_;++S){const v=M[S],A=v.start,D=v.count;for(let B=A,X=A+D;B<X;B+=3)T(e.getX(B+0)),T(e.getX(B+1)),T(e.getX(B+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new ft(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let f=0,d=n.count;f<d;f++)n.setXYZ(f,0,0,0);const r=new O,s=new O,o=new O,a=new O,l=new O,c=new O,u=new O,h=new O;if(e)for(let f=0,d=e.count;f<d;f+=3){const p=e.getX(f+0),y=e.getX(f+1),m=e.getX(f+2);r.fromBufferAttribute(t,p),s.fromBufferAttribute(t,y),o.fromBufferAttribute(t,m),u.subVectors(o,s),h.subVectors(r,s),u.cross(h),a.fromBufferAttribute(n,p),l.fromBufferAttribute(n,y),c.fromBufferAttribute(n,m),a.add(u),l.add(u),c.add(u),n.setXYZ(p,a.x,a.y,a.z),n.setXYZ(y,l.x,l.y,l.z),n.setXYZ(m,c.x,c.y,c.z)}else for(let f=0,d=t.count;f<d;f+=3)r.fromBufferAttribute(t,f+0),s.fromBufferAttribute(t,f+1),o.fromBufferAttribute(t,f+2),u.subVectors(o,s),h.subVectors(r,s),u.cross(h),n.setXYZ(f+0,u.x,u.y,u.z),n.setXYZ(f+1,u.x,u.y,u.z),n.setXYZ(f+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)$t.fromBufferAttribute(e,t),$t.normalize(),e.setXYZ(t,$t.x,$t.y,$t.z)}toNonIndexed(){function e(a,l){const c=a.array,u=a.itemSize,h=a.normalized,f=new c.constructor(l.length*u);let d=0,p=0;for(let y=0,m=l.length;y<m;y++){a.isInterleavedBufferAttribute?d=l[y]*a.data.stride+a.offset:d=l[y]*u;for(let g=0;g<u;g++)f[p++]=c[d++]}return new ft(f,u,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new tt,n=this.index.array,r=this.attributes;for(const a in r){const l=r[a],c=e(l,n);t.setAttribute(a,c)}const s=this.morphAttributes;for(const a in s){const l=[],c=s[a];for(let u=0,h=c.length;u<h;u++){const f=c[u],d=e(f,n);l.push(d)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.7,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const l in n){const c=n[l];e.data.attributes[l]=c.toJSON(e.data)}const r={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],u=[];for(let h=0,f=c.length;h<f;h++){const d=c[h];u.push(d.toJSON(e.data))}u.length>0&&(r[l]=u,s=!0)}s&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere=a.toJSON()),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone());const r=e.attributes;for(const c in r){const u=r[c];this.setAttribute(c,u.clone(t))}const s=e.morphAttributes;for(const c in s){const u=[],h=s[c];for(let f=0,d=h.length;f<d;f++)u.push(h[f].clone(t));this.morphAttributes[c]=u}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let c=0,u=o.length;c<u;c++){const h=o[c];this.addGroup(h.start,h.count,h.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Rm=new Ge,Nr=new bs,yl=new Jt,Im=new O,xl=new O,bl=new O,Ml=new O,Fh=new O,Sl=new O,Pm=new O,wl=new O;class St extends ht{constructor(e=new tt,t=new Ti){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.count=1,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const r=t[n[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=r.length;s<o;s++){const a=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}getVertexPosition(e,t){const n=this.geometry,r=n.attributes.position,s=n.morphAttributes.position,o=n.morphTargetsRelative;t.fromBufferAttribute(r,e);const a=this.morphTargetInfluences;if(s&&a){Sl.set(0,0,0);for(let l=0,c=s.length;l<c;l++){const u=a[l],h=s[l];u!==0&&(Fh.fromBufferAttribute(h,e),o?Sl.addScaledVector(Fh,u):Sl.addScaledVector(Fh.sub(t),u))}t.add(Sl)}return t}raycast(e,t){const n=this.geometry,r=this.material,s=this.matrixWorld;r!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),yl.copy(n.boundingSphere),yl.applyMatrix4(s),Nr.copy(e.ray).recast(e.near),!(yl.containsPoint(Nr.origin)===!1&&(Nr.intersectSphere(yl,Im)===null||Nr.origin.distanceToSquared(Im)>(e.far-e.near)**2))&&(Rm.copy(s).invert(),Nr.copy(e.ray).applyMatrix4(Rm),!(n.boundingBox!==null&&Nr.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,Nr)))}_computeIntersections(e,t,n){let r;const s=this.geometry,o=this.material,a=s.index,l=s.attributes.position,c=s.attributes.uv,u=s.attributes.uv1,h=s.attributes.normal,f=s.groups,d=s.drawRange;if(a!==null)if(Array.isArray(o))for(let p=0,y=f.length;p<y;p++){const m=f[p],g=o[m.materialIndex],M=Math.max(m.start,d.start),x=Math.min(a.count,Math.min(m.start+m.count,d.start+d.count));for(let b=M,C=x;b<C;b+=3){const w=a.getX(b),T=a.getX(b+1),S=a.getX(b+2);r=Tl(this,g,e,n,c,u,h,w,T,S),r&&(r.faceIndex=Math.floor(b/3),r.face.materialIndex=m.materialIndex,t.push(r))}}else{const p=Math.max(0,d.start),y=Math.min(a.count,d.start+d.count);for(let m=p,g=y;m<g;m+=3){const M=a.getX(m),x=a.getX(m+1),b=a.getX(m+2);r=Tl(this,o,e,n,c,u,h,M,x,b),r&&(r.faceIndex=Math.floor(m/3),t.push(r))}}else if(l!==void 0)if(Array.isArray(o))for(let p=0,y=f.length;p<y;p++){const m=f[p],g=o[m.materialIndex],M=Math.max(m.start,d.start),x=Math.min(l.count,Math.min(m.start+m.count,d.start+d.count));for(let b=M,C=x;b<C;b+=3){const w=b,T=b+1,S=b+2;r=Tl(this,g,e,n,c,u,h,w,T,S),r&&(r.faceIndex=Math.floor(b/3),r.face.materialIndex=m.materialIndex,t.push(r))}}else{const p=Math.max(0,d.start),y=Math.min(l.count,d.start+d.count);for(let m=p,g=y;m<g;m+=3){const M=m,x=m+1,b=m+2;r=Tl(this,o,e,n,c,u,h,M,x,b),r&&(r.faceIndex=Math.floor(m/3),t.push(r))}}}}function Rw(i,e,t,n,r,s,o,a){let l;if(e.side===fn?l=n.intersectTriangle(o,s,r,!0,a):l=n.intersectTriangle(r,s,o,e.side===qi,a),l===null)return null;wl.copy(a),wl.applyMatrix4(i.matrixWorld);const c=t.ray.origin.distanceTo(wl);return c<t.near||c>t.far?null:{distance:c,point:wl.clone(),object:i}}function Tl(i,e,t,n,r,s,o,a,l,c){i.getVertexPosition(a,xl),i.getVertexPosition(l,bl),i.getVertexPosition(c,Ml);const u=Rw(i,e,t,n,xl,bl,Ml,Pm);if(u){const h=new O;wn.getBarycoord(Pm,xl,bl,Ml,h),r&&(u.uv=wn.getInterpolatedAttribute(r,a,l,c,h,new de)),s&&(u.uv1=wn.getInterpolatedAttribute(s,a,l,c,h,new de)),o&&(u.normal=wn.getInterpolatedAttribute(o,a,l,c,h,new O),u.normal.dot(n.direction)>0&&u.normal.multiplyScalar(-1));const f={a,b:l,c,normal:new O,materialIndex:0};wn.getNormal(xl,bl,Ml,f.normal),u.face=f,u.barycoord=h}return u}class Tr extends tt{constructor(e=1,t=1,n=1,r=1,s=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:r,heightSegments:s,depthSegments:o};const a=this;r=Math.floor(r),s=Math.floor(s),o=Math.floor(o);const l=[],c=[],u=[],h=[];let f=0,d=0;p("z","y","x",-1,-1,n,t,e,o,s,0),p("z","y","x",1,-1,n,t,-e,o,s,1),p("x","z","y",1,1,e,n,t,r,o,2),p("x","z","y",1,-1,e,n,-t,r,o,3),p("x","y","z",1,-1,e,t,n,r,s,4),p("x","y","z",-1,-1,e,t,-n,r,s,5),this.setIndex(l),this.setAttribute("position",new ze(c,3)),this.setAttribute("normal",new ze(u,3)),this.setAttribute("uv",new ze(h,2));function p(y,m,g,M,x,b,C,w,T,S,_){const v=b/T,A=C/S,D=b/2,B=C/2,X=w/2,Y=T+1,z=S+1;let Q=0,K=0;const fe=new O;for(let ge=0;ge<z;ge++){const oe=ge*A-B;for(let Te=0;Te<Y;Te++){const ke=Te*v-D;fe[y]=ke*M,fe[m]=oe*x,fe[g]=X,c.push(fe.x,fe.y,fe.z),fe[y]=0,fe[m]=0,fe[g]=w>0?1:-1,u.push(fe.x,fe.y,fe.z),h.push(Te/T),h.push(1-ge/S),Q+=1}}for(let ge=0;ge<S;ge++)for(let oe=0;oe<T;oe++){const Te=f+oe+Y*ge,ke=f+oe+Y*(ge+1),ae=f+(oe+1)+Y*(ge+1),ve=f+(oe+1)+Y*ge;l.push(Te,ke,ve),l.push(ke,ae,ve),K+=6}a.addGroup(d,K,_),d+=K,f+=Q}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Tr(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function xo(i){const e={};for(const t in i){e[t]={};for(const n in i[t]){const r=i[t][n];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?r.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=r.clone():Array.isArray(r)?e[t][n]=r.slice():e[t][n]=r}}return e}function xn(i){const e={};for(let t=0;t<i.length;t++){const n=xo(i[t]);for(const r in n)e[r]=n[r]}return e}function Iw(i){const e=[];for(let t=0;t<i.length;t++)e.push(i[t].clone());return e}function U_(i){const e=i.getRenderTarget();return e===null?i.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:ct.workingColorSpace}const Ya={clone:xo,merge:xn};var Pw=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,Lw=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class mn extends gn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=Pw,this.fragmentShader=Lw,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=xo(e.uniforms),this.uniformsGroups=Iw(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const r in this.uniforms){const o=this.uniforms[r].value;o&&o.isTexture?t.uniforms[r]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[r]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[r]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[r]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[r]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[r]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[r]={type:"m4",value:o.toArray()}:t.uniforms[r]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const r in this.extensions)this.extensions[r]===!0&&(n[r]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class qa extends ht{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Ge,this.projectionMatrix=new Ge,this.projectionMatrixInverse=new Ge,this.coordinateSystem=jn}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const or=new O,Lm=new de,Dm=new de;class Mt extends qa{constructor(e=50,t=1,n=.1,r=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=yo*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(os*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return yo*2*Math.atan(Math.tan(os*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){or.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(or.x,or.y).multiplyScalar(-e/or.z),or.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(or.x,or.y).multiplyScalar(-e/or.z)}getViewSize(e,t){return this.getViewBounds(e,Lm,Dm),t.subVectors(Dm,Lm)}setViewOffset(e,t,n,r,s,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(os*.5*this.fov)/this.zoom,n=2*t,r=this.aspect*n,s=-.5*r;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;s+=o.offsetX*r/l,t-=o.offsetY*n/c,r*=o.width/l,n*=o.height/c}const a=this.filmOffset;a!==0&&(s+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+r,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Os=-90,Fs=1;class N_ extends ht{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const r=new Mt(Os,Fs,e,t);r.layers=this.layers,this.add(r);const s=new Mt(Os,Fs,e,t);s.layers=this.layers,this.add(s);const o=new Mt(Os,Fs,e,t);o.layers=this.layers,this.add(o);const a=new Mt(Os,Fs,e,t);a.layers=this.layers,this.add(a);const l=new Mt(Os,Fs,e,t);l.layers=this.layers,this.add(l);const c=new Mt(Os,Fs,e,t);c.layers=this.layers,this.add(c)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,r,s,o,a,l]=t;for(const c of t)this.remove(c);if(e===jn)n.up.set(0,1,0),n.lookAt(1,0,0),r.up.set(0,1,0),r.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(e===Ia)n.up.set(0,-1,0),n.lookAt(-1,0,0),r.up.set(0,-1,0),r.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const c of t)this.add(c),c.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:r}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,o,a,l,c,u]=this.children,h=e.getRenderTarget(),f=e.getActiveCubeFace(),d=e.getActiveMipmapLevel(),p=e.xr.enabled;e.xr.enabled=!1;const y=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,r),e.render(t,s),e.setRenderTarget(n,1,r),e.render(t,o),e.setRenderTarget(n,2,r),e.render(t,a),e.setRenderTarget(n,3,r),e.render(t,l),e.setRenderTarget(n,4,r),e.render(t,c),n.texture.generateMipmaps=y,e.setRenderTarget(n,5,r),e.render(t,u),e.setRenderTarget(h,f,d),e.xr.enabled=p,n.texture.needsPMREMUpdate=!0}}class ja extends Lt{constructor(e=[],t=ji,n,r,s,o,a,l,c,u){super(e,t,n,r,s,o,a,l,c,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class O_ extends ui{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},r=[n,n,n,n,n,n];this.texture=new ja(r),this._setTextureOptions(t),this.texture.isRenderTargetTexture=!0}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new Tr(5,5,5),s=new mn({name:"CubemapFromEquirect",uniforms:xo(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:fn,blending:Vi});s.uniforms.tEquirect.value=t;const o=new St(r,s),a=t.minFilter;return t.minFilter===ii&&(t.minFilter=Yt),new N_(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t=!0,n=!0,r=!0){const s=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,n,r);e.setRenderTarget(s)}}class Ks extends ht{constructor(){super(),this.isGroup=!0,this.type="Group"}}const Dw={type:"move"};class uc{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Ks,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Ks,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new O,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new O),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Ks,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new O,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new O),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let r=null,s=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(c&&e.hand){o=!0;for(const y of e.hand.values()){const m=t.getJointPose(y,n),g=this._getHandJoint(c,y);m!==null&&(g.matrix.fromArray(m.transform.matrix),g.matrix.decompose(g.position,g.rotation,g.scale),g.matrixWorldNeedsUpdate=!0,g.jointRadius=m.radius),g.visible=m!==null}const u=c.joints["index-finger-tip"],h=c.joints["thumb-tip"],f=u.position.distanceTo(h.position),d=.02,p=.005;c.inputState.pinching&&f>d+p?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&f<=d-p&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(r=t.getPose(e.targetRaySpace,n),r===null&&s!==null&&(r=s),r!==null&&(a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,r.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(r.linearVelocity)):a.hasLinearVelocity=!1,r.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(r.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(Dw)))}return a!==null&&(a.visible=r!==null),l!==null&&(l.visible=s!==null),c!==null&&(c.visible=o!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new Ks;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class Nu{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new Ee(e),this.density=t}clone(){return new Nu(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class Ou{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new Ee(e),this.near=t,this.far=n}clone(){return new Ou(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class ms extends ht{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Tn,this.environmentIntensity=1,this.environmentRotation=new Tn,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class $a{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=Ra,this.updateRanges=[],this.version=0,this.uuid=Gn()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let r=0,s=this.stride;r<s;r++)this.array[e+r]=t.array[n+r];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Gn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Gn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const _n=new O;class Ki{constructor(e,t,n,r=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=r}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)_n.fromBufferAttribute(this,t),_n.applyMatrix4(e),this.setXYZ(t,_n.x,_n.y,_n.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)_n.fromBufferAttribute(this,t),_n.applyNormalMatrix(e),this.setXYZ(t,_n.x,_n.y,_n.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)_n.fromBufferAttribute(this,t),_n.transformDirection(e),this.setXYZ(t,_n.x,_n.y,_n.z);return this}getComponent(e,t){let n=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(n=Sn(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=nt(n,this.array)),this.data.array[e*this.data.stride+this.offset+t]=n,this}setX(e,t){return this.normalized&&(t=nt(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=nt(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=nt(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=nt(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Sn(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Sn(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Sn(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Sn(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=nt(t,this.array),n=nt(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=nt(t,this.array),n=nt(n,this.array),r=nt(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this}setXYZW(e,t,n,r,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=nt(t,this.array),n=nt(n,this.array),r=nt(r,this.array),s=nt(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const r=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[r+s])}return new ft(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Ki(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const r=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[r+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class np extends gn{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Ee(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let Bs;const Oo=new O,zs=new O,ks=new O,Vs=new de,Fo=new de,F_=new Ge,El=new O,Bo=new O,Al=new O,Um=new de,Bh=new de,Nm=new de;class B_ extends ht{constructor(e=new np){if(super(),this.isSprite=!0,this.type="Sprite",Bs===void 0){Bs=new tt;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new $a(t,5);Bs.setIndex([0,1,2,0,2,3]),Bs.setAttribute("position",new Ki(n,3,0,!1)),Bs.setAttribute("uv",new Ki(n,2,3,!1))}this.geometry=Bs,this.material=e,this.center=new de(.5,.5),this.count=1}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),zs.setFromMatrixScale(this.matrixWorld),F_.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),ks.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&zs.multiplyScalar(-ks.z);const n=this.material.rotation;let r,s;n!==0&&(s=Math.cos(n),r=Math.sin(n));const o=this.center;Cl(El.set(-.5,-.5,0),ks,o,zs,r,s),Cl(Bo.set(.5,-.5,0),ks,o,zs,r,s),Cl(Al.set(.5,.5,0),ks,o,zs,r,s),Um.set(0,0),Bh.set(1,0),Nm.set(1,1);let a=e.ray.intersectTriangle(El,Bo,Al,!1,Oo);if(a===null&&(Cl(Bo.set(-.5,.5,0),ks,o,zs,r,s),Bh.set(0,1),a=e.ray.intersectTriangle(El,Al,Bo,!1,Oo),a===null))return;const l=e.ray.origin.distanceTo(Oo);l<e.near||l>e.far||t.push({distance:l,point:Oo.clone(),uv:wn.getInterpolation(Oo,El,Bo,Al,Um,Bh,Nm,new de),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function Cl(i,e,t,n,r,s){Vs.subVectors(i,t).addScalar(.5).multiply(n),r!==void 0?(Fo.x=s*Vs.x-r*Vs.y,Fo.y=r*Vs.x+s*Vs.y):Fo.copy(Vs),i.copy(e),i.x+=Fo.x,i.y+=Fo.y,i.applyMatrix4(F_)}const Rl=new O,Om=new O;class z_ extends ht{constructor(){super(),this.isLOD=!0,this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,r=t.length;n<r;n++){const s=t[n];this.addLevel(s.object.clone(),s.distance,s.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const r=this.levels;let s;for(s=0;s<r.length&&!(t<r[s].distance);s++);return r.splice(s,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}removeLevel(e){const t=this.levels;for(let n=0;n<t.length;n++)if(t[n].distance===e){const r=t.splice(n,1);return this.remove(r[0].object),!0}return!1}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,r;for(n=1,r=t.length;n<r;n++){let s=t[n].distance;if(t[n].object.visible&&(s-=s*t[n].hysteresis),e<s)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){Rl.setFromMatrixPosition(this.matrixWorld);const r=e.ray.origin.distanceTo(Rl);this.getObjectForDistance(r).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){Rl.setFromMatrixPosition(e.matrixWorld),Om.setFromMatrixPosition(this.matrixWorld);const n=Rl.distanceTo(Om)/e.zoom;t[0].object.visible=!0;let r,s;for(r=1,s=t.length;r<s;r++){let o=t[r].distance;if(t[r].object.visible&&(o-=o*t[r].hysteresis),n>=o)t[r-1].object.visible=!1,t[r].object.visible=!0;else break}for(this._currentLevel=r-1;r<s;r++)t[r].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let r=0,s=n.length;r<s;r++){const o=n[r];t.object.levels.push({object:o.object.uuid,distance:o.distance,hysteresis:o.hysteresis})}return t}}const Fm=new O,Bm=new rt,zm=new rt,Uw=new O,km=new Ge,Il=new O,zh=new Jt,Vm=new Ge,kh=new bs;class k_ extends St{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=Wf,this.bindMatrix=new Ge,this.bindMatrixInverse=new Ge,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new Kt),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,Il),this.boundingBox.expandByPoint(Il)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new Jt),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,Il),this.boundingSphere.expandByPoint(Il)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,r=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),zh.copy(this.boundingSphere),zh.applyMatrix4(r),e.ray.intersectsSphere(zh)!==!1&&(Vm.copy(r).invert(),kh.copy(e.ray).applyMatrix4(Vm),!(this.boundingBox!==null&&kh.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,kh)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new rt,t=this.geometry.attributes.skinWeight;for(let n=0,r=t.count;n<r;n++){e.fromBufferAttribute(t,n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===Wf?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===g_?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,r=this.geometry;Bm.fromBufferAttribute(r.attributes.skinIndex,e),zm.fromBufferAttribute(r.attributes.skinWeight,e),Fm.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const o=zm.getComponent(s);if(o!==0){const a=Bm.getComponent(s);km.multiplyMatrices(n.bones[a].matrixWorld,n.boneInverses[a]),t.addScaledVector(Uw.copy(Fm).applyMatrix4(km),o)}}return t.applyMatrix4(this.bindMatrixInverse)}}class ip extends ht{constructor(){super(),this.isBone=!0,this.type="Bone"}}class Zn extends Lt{constructor(e=null,t=1,n=1,r,s,o,a,l,c=Vt,u=Vt,h,f){super(null,o,a,l,c,u,r,s,h,f),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Hm=new Ge,Nw=new Ge;class Fu{constructor(e=[],t=[]){this.uuid=Gn(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,r=this.bones.length;n<r;n++)this.boneInverses.push(new Ge)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new Ge;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,r=this.boneTexture;for(let s=0,o=e.length;s<o;s++){const a=e[s]?e[s].matrixWorld:Nw;Hm.multiplyMatrices(a,t[s]),Hm.toArray(n,s*16)}r!==null&&(r.needsUpdate=!0)}clone(){return new Fu(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new Zn(t,e,e,Zt,On);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const r=this.bones[t];if(r.name===e)return r}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,r=e.bones.length;n<r;n++){const s=e.bones[n];let o=t[s];o===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),o=new ip),this.bones.push(o),this.boneInverses.push(new Ge().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.7,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let r=0,s=t.length;r<s;r++){const o=t[r];e.bones.push(o.uuid);const a=n[r];e.boneInverses.push(a.toArray())}return e}}class bo extends ft{constructor(e,t,n,r=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=r}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const Hs=new Ge,Gm=new Ge,Pl=[],Wm=new Kt,Ow=new Ge,zo=new St,ko=new Jt;class V_ extends St{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new bo(new Float32Array(n*16),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let r=0;r<n;r++)this.setMatrixAt(r,Ow)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new Kt),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,Hs),Wm.copy(e.boundingBox).applyMatrix4(Hs),this.boundingBox.union(Wm)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new Jt),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,Hs),ko.copy(e.boundingSphere).applyMatrix4(Hs),this.boundingSphere.union(ko)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.morphTexture!==null&&(this.morphTexture=e.morphTexture.clone()),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}getMorphAt(e,t){const n=t.morphTargetInfluences,r=this.morphTexture.source.data.data,s=n.length+1,o=e*s+1;for(let a=0;a<n.length;a++)n[a]=r[o+a]}raycast(e,t){const n=this.matrixWorld,r=this.count;if(zo.geometry=this.geometry,zo.material=this.material,zo.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),ko.copy(this.boundingSphere),ko.applyMatrix4(n),e.ray.intersectsSphere(ko)!==!1))for(let s=0;s<r;s++){this.getMatrixAt(s,Hs),Gm.multiplyMatrices(n,Hs),zo.matrixWorld=Gm,zo.raycast(e,Pl);for(let o=0,a=Pl.length;o<a;o++){const l=Pl[o];l.instanceId=s,l.object=this,t.push(l)}Pl.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new bo(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}setMorphAt(e,t){const n=t.morphTargetInfluences,r=n.length+1;this.morphTexture===null&&(this.morphTexture=new Zn(new Float32Array(r*this.count),r,this.count,Ru,On));const s=this.morphTexture.source.data.data;let o=0;for(let c=0;c<n.length;c++)o+=n[c];const a=this.geometry.morphTargetsRelative?1:1-o,l=r*e;s[l]=a,s.set(n,l+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null)}}const Vh=new O,Fw=new O,Bw=new et;class yi{constructor(e=new O(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,r){return this.normal.set(e,t,n),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const r=Vh.subVectors(n,t).cross(Fw.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(Vh),r=this.normal.dot(n);if(r===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/r;return s<0||s>1?null:t.copy(e.start).addScaledVector(n,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||Bw.getNormalMatrix(e),r=this.coplanarPoint(Vh).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-r.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Or=new Jt,zw=new de(.5,.5),Ll=new O;class Ao{constructor(e=new yi,t=new yi,n=new yi,r=new yi,s=new yi,o=new yi){this.planes=[e,t,n,r,s,o]}set(e,t,n,r,s,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(n),a[3].copy(r),a[4].copy(s),a[5].copy(o),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=jn){const n=this.planes,r=e.elements,s=r[0],o=r[1],a=r[2],l=r[3],c=r[4],u=r[5],h=r[6],f=r[7],d=r[8],p=r[9],y=r[10],m=r[11],g=r[12],M=r[13],x=r[14],b=r[15];if(n[0].setComponents(l-s,f-c,m-d,b-g).normalize(),n[1].setComponents(l+s,f+c,m+d,b+g).normalize(),n[2].setComponents(l+o,f+u,m+p,b+M).normalize(),n[3].setComponents(l-o,f-u,m-p,b-M).normalize(),n[4].setComponents(l-a,f-h,m-y,b-x).normalize(),t===jn)n[5].setComponents(l+a,f+h,m+y,b+x).normalize();else if(t===Ia)n[5].setComponents(a,h,y,x).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Or.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),Or.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Or)}intersectsSprite(e){Or.center.set(0,0,0);const t=zw.distanceTo(e.center);return Or.radius=.7071067811865476+t,Or.applyMatrix4(e.matrixWorld),this.intersectsSphere(Or)}intersectsSphere(e){const t=this.planes,n=e.center,r=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<r)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const r=t[n];if(Ll.x=r.normal.x>0?e.max.x:e.min.x,Ll.y=r.normal.y>0?e.max.y:e.min.y,Ll.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(Ll)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}const pi=new Ge,mi=new Ao;class Bu{constructor(){this.coordinateSystem=jn}intersectsObject(e,t){if(!t.isArrayCamera||t.cameras.length===0)return!1;for(let n=0;n<t.cameras.length;n++){const r=t.cameras[n];if(pi.multiplyMatrices(r.projectionMatrix,r.matrixWorldInverse),mi.setFromProjectionMatrix(pi,this.coordinateSystem),mi.intersectsObject(e))return!0}return!1}intersectsSprite(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let n=0;n<t.cameras.length;n++){const r=t.cameras[n];if(pi.multiplyMatrices(r.projectionMatrix,r.matrixWorldInverse),mi.setFromProjectionMatrix(pi,this.coordinateSystem),mi.intersectsSprite(e))return!0}return!1}intersectsSphere(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let n=0;n<t.cameras.length;n++){const r=t.cameras[n];if(pi.multiplyMatrices(r.projectionMatrix,r.matrixWorldInverse),mi.setFromProjectionMatrix(pi,this.coordinateSystem),mi.intersectsSphere(e))return!0}return!1}intersectsBox(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let n=0;n<t.cameras.length;n++){const r=t.cameras[n];if(pi.multiplyMatrices(r.projectionMatrix,r.matrixWorldInverse),mi.setFromProjectionMatrix(pi,this.coordinateSystem),mi.intersectsBox(e))return!0}return!1}containsPoint(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let n=0;n<t.cameras.length;n++){const r=t.cameras[n];if(pi.multiplyMatrices(r.projectionMatrix,r.matrixWorldInverse),mi.setFromProjectionMatrix(pi,this.coordinateSystem),mi.containsPoint(e))return!0}return!1}clone(){return new Bu}}function Hh(i,e){return i-e}function kw(i,e){return i.z-e.z}function Vw(i,e){return e.z-i.z}class Hw{constructor(){this.index=0,this.pool=[],this.list=[]}push(e,t,n,r){const s=this.pool,o=this.list;this.index>=s.length&&s.push({start:-1,count:-1,z:-1,index:-1});const a=s[this.index];o.push(a),this.index++,a.start=e,a.count=t,a.z=n,a.index=r}reset(){this.list.length=0,this.index=0}}const Rn=new Ge,Gw=new Ee(1,1,1),Xm=new Ao,Ww=new Bu,Dl=new Kt,Fr=new Jt,Vo=new O,Ym=new O,Xw=new O,Gh=new Hw,an=new St,Ul=[];function Yw(i,e,t=0){const n=e.itemSize;if(i.isInterleavedBufferAttribute||i.array.constructor!==e.array.constructor){const r=i.count;for(let s=0;s<r;s++)for(let o=0;o<n;o++)e.setComponent(s+t,o,i.getComponent(s,o))}else e.array.set(i.array,t*n);e.needsUpdate=!0}function Br(i,e){if(i.constructor!==e.constructor){const t=Math.min(i.length,e.length);for(let n=0;n<t;n++)e[n]=i[n]}else{const t=Math.min(i.length,e.length);e.set(new i.constructor(i.buffer,0,t))}}class H_ extends St{constructor(e,t,n=t*2,r){super(new tt,r),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._instanceInfo=[],this._geometryInfo=[],this._availableInstanceIds=[],this._availableGeometryIds=[],this._nextIndexStart=0,this._nextVertexStart=0,this._geometryCount=0,this._visibilityChanged=!0,this._geometryInitialized=!1,this._maxInstanceCount=e,this._maxVertexCount=t,this._maxIndexCount=n,this._multiDrawCounts=new Int32Array(e),this._multiDrawStarts=new Int32Array(e),this._multiDrawCount=0,this._multiDrawInstances=null,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}get maxInstanceCount(){return this._maxInstanceCount}get instanceCount(){return this._instanceInfo.length-this._availableInstanceIds.length}get unusedVertexCount(){return this._maxVertexCount-this._nextVertexStart}get unusedIndexCount(){return this._maxIndexCount-this._nextIndexStart}_initMatricesTexture(){let e=Math.sqrt(this._maxInstanceCount*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4),n=new Zn(t,e,e,Zt,On);this._matricesTexture=n}_initIndirectTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Uint32Array(e*e),n=new Zn(t,e,e,Wa,$i);this._indirectTexture=n}_initColorsTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Float32Array(e*e*4).fill(1),n=new Zn(t,e,e,Zt,On);n.colorSpace=ct.workingColorSpace,this._colorsTexture=n}_initializeGeometry(e){const t=this.geometry,n=this._maxVertexCount,r=this._maxIndexCount;if(this._geometryInitialized===!1){for(const s in e.attributes){const o=e.getAttribute(s),{array:a,itemSize:l,normalized:c}=o,u=new a.constructor(n*l),h=new ft(u,l,c);t.setAttribute(s,h)}if(e.getIndex()!==null){const s=n>65535?new Uint32Array(r):new Uint16Array(r);t.setIndex(new ft(s,1))}this._geometryInitialized=!0}}_validateGeometry(e){const t=this.geometry;if(!!e.getIndex()!=!!t.getIndex())throw new Error('THREE.BatchedMesh: All geometries must consistently have "index".');for(const n in t.attributes){if(!e.hasAttribute(n))throw new Error(`THREE.BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const r=e.getAttribute(n),s=t.getAttribute(n);if(r.itemSize!==s.itemSize||r.normalized!==s.normalized)throw new Error("THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}validateInstanceId(e){const t=this._instanceInfo;if(e<0||e>=t.length||t[e].active===!1)throw new Error(`THREE.BatchedMesh: Invalid instanceId ${e}. Instance is either out of range or has been deleted.`)}validateGeometryId(e){const t=this._geometryInfo;if(e<0||e>=t.length||t[e].active===!1)throw new Error(`THREE.BatchedMesh: Invalid geometryId ${e}. Geometry is either out of range or has been deleted.`)}setCustomSort(e){return this.customSort=e,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Kt);const e=this.boundingBox,t=this._instanceInfo;e.makeEmpty();for(let n=0,r=t.length;n<r;n++){if(t[n].active===!1)continue;const s=t[n].geometryIndex;this.getMatrixAt(n,Rn),this.getBoundingBoxAt(s,Dl).applyMatrix4(Rn),e.union(Dl)}}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Jt);const e=this.boundingSphere,t=this._instanceInfo;e.makeEmpty();for(let n=0,r=t.length;n<r;n++){if(t[n].active===!1)continue;const s=t[n].geometryIndex;this.getMatrixAt(n,Rn),this.getBoundingSphereAt(s,Fr).applyMatrix4(Rn),e.union(Fr)}}addInstance(e){if(this._instanceInfo.length>=this.maxInstanceCount&&this._availableInstanceIds.length===0)throw new Error("THREE.BatchedMesh: Maximum item count reached.");const n={visible:!0,active:!0,geometryIndex:e};let r=null;this._availableInstanceIds.length>0?(this._availableInstanceIds.sort(Hh),r=this._availableInstanceIds.shift(),this._instanceInfo[r]=n):(r=this._instanceInfo.length,this._instanceInfo.push(n));const s=this._matricesTexture;Rn.identity().toArray(s.image.data,r*16),s.needsUpdate=!0;const o=this._colorsTexture;return o&&(Gw.toArray(o.image.data,r*4),o.needsUpdate=!0),this._visibilityChanged=!0,r}addGeometry(e,t=-1,n=-1){this._initializeGeometry(e),this._validateGeometry(e);const r={vertexStart:-1,vertexCount:-1,reservedVertexCount:-1,indexStart:-1,indexCount:-1,reservedIndexCount:-1,start:-1,count:-1,boundingBox:null,boundingSphere:null,active:!0},s=this._geometryInfo;r.vertexStart=this._nextVertexStart,r.reservedVertexCount=t===-1?e.getAttribute("position").count:t;const o=e.getIndex();if(o!==null&&(r.indexStart=this._nextIndexStart,r.reservedIndexCount=n===-1?o.count:n),r.indexStart!==-1&&r.indexStart+r.reservedIndexCount>this._maxIndexCount||r.vertexStart+r.reservedVertexCount>this._maxVertexCount)throw new Error("THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.");let l;return this._availableGeometryIds.length>0?(this._availableGeometryIds.sort(Hh),l=this._availableGeometryIds.shift(),s[l]=r):(l=this._geometryCount,this._geometryCount++,s.push(r)),this.setGeometryAt(l,e),this._nextIndexStart=r.indexStart+r.reservedIndexCount,this._nextVertexStart=r.vertexStart+r.reservedVertexCount,l}setGeometryAt(e,t){if(e>=this._geometryCount)throw new Error("THREE.BatchedMesh: Maximum geometry count reached.");this._validateGeometry(t);const n=this.geometry,r=n.getIndex()!==null,s=n.getIndex(),o=t.getIndex(),a=this._geometryInfo[e];if(r&&o.count>a.reservedIndexCount||t.attributes.position.count>a.reservedVertexCount)throw new Error("THREE.BatchedMesh: Reserved space not large enough for provided geometry.");const l=a.vertexStart,c=a.reservedVertexCount;a.vertexCount=t.getAttribute("position").count;for(const u in n.attributes){const h=t.getAttribute(u),f=n.getAttribute(u);Yw(h,f,l);const d=h.itemSize;for(let p=h.count,y=c;p<y;p++){const m=l+p;for(let g=0;g<d;g++)f.setComponent(m,g,0)}f.needsUpdate=!0,f.addUpdateRange(l*d,c*d)}if(r){const u=a.indexStart,h=a.reservedIndexCount;a.indexCount=t.getIndex().count;for(let f=0;f<o.count;f++)s.setX(u+f,l+o.getX(f));for(let f=o.count,d=h;f<d;f++)s.setX(u+f,l);s.needsUpdate=!0,s.addUpdateRange(u,a.reservedIndexCount)}return a.start=r?a.indexStart:a.vertexStart,a.count=r?a.indexCount:a.vertexCount,a.boundingBox=null,t.boundingBox!==null&&(a.boundingBox=t.boundingBox.clone()),a.boundingSphere=null,t.boundingSphere!==null&&(a.boundingSphere=t.boundingSphere.clone()),this._visibilityChanged=!0,e}deleteGeometry(e){const t=this._geometryInfo;if(e>=t.length||t[e].active===!1)return this;const n=this._instanceInfo;for(let r=0,s=n.length;r<s;r++)n[r].active&&n[r].geometryIndex===e&&this.deleteInstance(r);return t[e].active=!1,this._availableGeometryIds.push(e),this._visibilityChanged=!0,this}deleteInstance(e){return this.validateInstanceId(e),this._instanceInfo[e].active=!1,this._availableInstanceIds.push(e),this._visibilityChanged=!0,this}optimize(){let e=0,t=0;const n=this._geometryInfo,r=n.map((o,a)=>a).sort((o,a)=>n[o].vertexStart-n[a].vertexStart),s=this.geometry;for(let o=0,a=n.length;o<a;o++){const l=r[o],c=n[l];if(c.active!==!1){if(s.index!==null){if(c.indexStart!==t){const{indexStart:u,vertexStart:h,reservedIndexCount:f}=c,d=s.index,p=d.array,y=e-h;for(let m=u;m<u+f;m++)p[m]=p[m]+y;d.array.copyWithin(t,u,u+f),d.addUpdateRange(t,f),c.indexStart=t}t+=c.reservedIndexCount}if(c.vertexStart!==e){const{vertexStart:u,reservedVertexCount:h}=c,f=s.attributes;for(const d in f){const p=f[d],{array:y,itemSize:m}=p;y.copyWithin(e*m,u*m,(u+h)*m),p.addUpdateRange(e*m,h*m)}c.vertexStart=e}e+=c.reservedVertexCount,c.start=s.index?c.indexStart:c.vertexStart,this._nextIndexStart=s.index?c.indexStart+c.reservedIndexCount:0,this._nextVertexStart=c.vertexStart+c.reservedVertexCount}}return this}getBoundingBoxAt(e,t){if(e>=this._geometryCount)return null;const n=this.geometry,r=this._geometryInfo[e];if(r.boundingBox===null){const s=new Kt,o=n.index,a=n.attributes.position;for(let l=r.start,c=r.start+r.count;l<c;l++){let u=l;o&&(u=o.getX(u)),s.expandByPoint(Vo.fromBufferAttribute(a,u))}r.boundingBox=s}return t.copy(r.boundingBox),t}getBoundingSphereAt(e,t){if(e>=this._geometryCount)return null;const n=this.geometry,r=this._geometryInfo[e];if(r.boundingSphere===null){const s=new Jt;this.getBoundingBoxAt(e,Dl),Dl.getCenter(s.center);const o=n.index,a=n.attributes.position;let l=0;for(let c=r.start,u=r.start+r.count;c<u;c++){let h=c;o&&(h=o.getX(h)),Vo.fromBufferAttribute(a,h),l=Math.max(l,s.center.distanceToSquared(Vo))}s.radius=Math.sqrt(l),r.boundingSphere=s}return t.copy(r.boundingSphere),t}setMatrixAt(e,t){this.validateInstanceId(e);const n=this._matricesTexture,r=this._matricesTexture.image.data;return t.toArray(r,e*16),n.needsUpdate=!0,this}getMatrixAt(e,t){return this.validateInstanceId(e),t.fromArray(this._matricesTexture.image.data,e*16)}setColorAt(e,t){return this.validateInstanceId(e),this._colorsTexture===null&&this._initColorsTexture(),t.toArray(this._colorsTexture.image.data,e*4),this._colorsTexture.needsUpdate=!0,this}getColorAt(e,t){return this.validateInstanceId(e),t.fromArray(this._colorsTexture.image.data,e*4)}setVisibleAt(e,t){return this.validateInstanceId(e),this._instanceInfo[e].visible===t?this:(this._instanceInfo[e].visible=t,this._visibilityChanged=!0,this)}getVisibleAt(e){return this.validateInstanceId(e),this._instanceInfo[e].visible}setGeometryIdAt(e,t){return this.validateInstanceId(e),this.validateGeometryId(t),this._instanceInfo[e].geometryIndex=t,this}getGeometryIdAt(e){return this.validateInstanceId(e),this._instanceInfo[e].geometryIndex}getGeometryRangeAt(e,t={}){this.validateGeometryId(e);const n=this._geometryInfo[e];return t.vertexStart=n.vertexStart,t.vertexCount=n.vertexCount,t.reservedVertexCount=n.reservedVertexCount,t.indexStart=n.indexStart,t.indexCount=n.indexCount,t.reservedIndexCount=n.reservedIndexCount,t.start=n.start,t.count=n.count,t}setInstanceCount(e){const t=this._availableInstanceIds,n=this._instanceInfo;for(t.sort(Hh);t[t.length-1]===n.length;)n.pop(),t.pop();if(e<n.length)throw new Error(`BatchedMesh: Instance ids outside the range ${e} are being used. Cannot shrink instance count.`);const r=new Int32Array(e),s=new Int32Array(e);Br(this._multiDrawCounts,r),Br(this._multiDrawStarts,s),this._multiDrawCounts=r,this._multiDrawStarts=s,this._maxInstanceCount=e;const o=this._indirectTexture,a=this._matricesTexture,l=this._colorsTexture;o.dispose(),this._initIndirectTexture(),Br(o.image.data,this._indirectTexture.image.data),a.dispose(),this._initMatricesTexture(),Br(a.image.data,this._matricesTexture.image.data),l&&(l.dispose(),this._initColorsTexture(),Br(l.image.data,this._colorsTexture.image.data))}setGeometrySize(e,t){const n=[...this._geometryInfo].filter(a=>a.active);if(Math.max(...n.map(a=>a.vertexStart+a.reservedVertexCount))>e)throw new Error(`BatchedMesh: Geometry vertex values are being used outside the range ${t}. Cannot shrink further.`);if(this.geometry.index&&Math.max(...n.map(l=>l.indexStart+l.reservedIndexCount))>t)throw new Error(`BatchedMesh: Geometry index values are being used outside the range ${t}. Cannot shrink further.`);const s=this.geometry;s.dispose(),this._maxVertexCount=e,this._maxIndexCount=t,this._geometryInitialized&&(this._geometryInitialized=!1,this.geometry=new tt,this._initializeGeometry(s));const o=this.geometry;s.index&&Br(s.index.array,o.index.array);for(const a in s.attributes)Br(s.attributes[a].array,o.attributes[a].array)}raycast(e,t){const n=this._instanceInfo,r=this._geometryInfo,s=this.matrixWorld,o=this.geometry;an.material=this.material,an.geometry.index=o.index,an.geometry.attributes=o.attributes,an.geometry.boundingBox===null&&(an.geometry.boundingBox=new Kt),an.geometry.boundingSphere===null&&(an.geometry.boundingSphere=new Jt);for(let a=0,l=n.length;a<l;a++){if(!n[a].visible||!n[a].active)continue;const c=n[a].geometryIndex,u=r[c];an.geometry.setDrawRange(u.start,u.count),this.getMatrixAt(a,an.matrixWorld).premultiply(s),this.getBoundingBoxAt(c,an.geometry.boundingBox),this.getBoundingSphereAt(c,an.geometry.boundingSphere),an.raycast(e,Ul);for(let h=0,f=Ul.length;h<f;h++){const d=Ul[h];d.object=this,d.batchId=a,t.push(d)}Ul.length=0}an.material=null,an.geometry.index=null,an.geometry.attributes={},an.geometry.setDrawRange(0,1/0)}copy(e){return super.copy(e),this.geometry=e.geometry.clone(),this.perObjectFrustumCulled=e.perObjectFrustumCulled,this.sortObjects=e.sortObjects,this.boundingBox=e.boundingBox!==null?e.boundingBox.clone():null,this.boundingSphere=e.boundingSphere!==null?e.boundingSphere.clone():null,this._geometryInfo=e._geometryInfo.map(t=>({...t,boundingBox:t.boundingBox!==null?t.boundingBox.clone():null,boundingSphere:t.boundingSphere!==null?t.boundingSphere.clone():null})),this._instanceInfo=e._instanceInfo.map(t=>({...t})),this._availableInstanceIds=e._availableInstanceIds.slice(),this._availableGeometryIds=e._availableGeometryIds.slice(),this._nextIndexStart=e._nextIndexStart,this._nextVertexStart=e._nextVertexStart,this._geometryCount=e._geometryCount,this._maxInstanceCount=e._maxInstanceCount,this._maxVertexCount=e._maxVertexCount,this._maxIndexCount=e._maxIndexCount,this._geometryInitialized=e._geometryInitialized,this._multiDrawCounts=e._multiDrawCounts.slice(),this._multiDrawStarts=e._multiDrawStarts.slice(),this._indirectTexture=e._indirectTexture.clone(),this._indirectTexture.image.data=this._indirectTexture.image.data.slice(),this._matricesTexture=e._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),this._colorsTexture!==null&&(this._colorsTexture=e._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,this._colorsTexture!==null&&(this._colorsTexture.dispose(),this._colorsTexture=null)}onBeforeRender(e,t,n,r,s){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const o=r.getIndex(),a=o===null?1:o.array.BYTES_PER_ELEMENT,l=this._instanceInfo,c=this._multiDrawStarts,u=this._multiDrawCounts,h=this._geometryInfo,f=this.perObjectFrustumCulled,d=this._indirectTexture,p=d.image.data,y=n.isArrayCamera?Ww:Xm;f&&!n.isArrayCamera&&(Rn.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),Xm.setFromProjectionMatrix(Rn,e.coordinateSystem));let m=0;if(this.sortObjects){Rn.copy(this.matrixWorld).invert(),Vo.setFromMatrixPosition(n.matrixWorld).applyMatrix4(Rn),Ym.set(0,0,-1).transformDirection(n.matrixWorld).transformDirection(Rn);for(let x=0,b=l.length;x<b;x++)if(l[x].visible&&l[x].active){const C=l[x].geometryIndex;this.getMatrixAt(x,Rn),this.getBoundingSphereAt(C,Fr).applyMatrix4(Rn);let w=!1;if(f&&(w=!y.intersectsSphere(Fr,n)),!w){const T=h[C],S=Xw.subVectors(Fr.center,Vo).dot(Ym);Gh.push(T.start,T.count,S,x)}}const g=Gh.list,M=this.customSort;M===null?g.sort(s.transparent?Vw:kw):M.call(this,g,n);for(let x=0,b=g.length;x<b;x++){const C=g[x];c[m]=C.start*a,u[m]=C.count,p[m]=C.index,m++}Gh.reset()}else for(let g=0,M=l.length;g<M;g++)if(l[g].visible&&l[g].active){const x=l[g].geometryIndex;let b=!1;if(f&&(this.getMatrixAt(g,Rn),this.getBoundingSphereAt(x,Fr).applyMatrix4(Rn),b=!y.intersectsSphere(Fr,n)),!b){const C=h[x];c[m]=C.start*a,u[m]=C.count,p[m]=g,m++}}d.needsUpdate=!0,this._multiDrawCount=m,this._visibilityChanged=!1}onBeforeShadow(e,t,n,r,s,o){this.onBeforeRender(e,null,r,s,o)}}class En extends gn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Ee(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const su=new O,ou=new O,qm=new Ge,Ho=new bs,Nl=new Jt,Wh=new O,jm=new O;class Mr extends ht{constructor(e=new tt,t=new En){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let r=1,s=t.count;r<s;r++)su.fromBufferAttribute(t,r-1),ou.fromBufferAttribute(t,r),n[r]=n[r-1],n[r]+=su.distanceTo(ou);e.setAttribute("lineDistance",new ze(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,r=this.matrixWorld,s=e.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Nl.copy(n.boundingSphere),Nl.applyMatrix4(r),Nl.radius+=s,e.ray.intersectsSphere(Nl)===!1)return;qm.copy(r).invert(),Ho.copy(e.ray).applyMatrix4(qm);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=this.isLineSegments?2:1,u=n.index,f=n.attributes.position;if(u!==null){const d=Math.max(0,o.start),p=Math.min(u.count,o.start+o.count);for(let y=d,m=p-1;y<m;y+=c){const g=u.getX(y),M=u.getX(y+1),x=Ol(this,e,Ho,l,g,M,y);x&&t.push(x)}if(this.isLineLoop){const y=u.getX(p-1),m=u.getX(d),g=Ol(this,e,Ho,l,y,m,p-1);g&&t.push(g)}}else{const d=Math.max(0,o.start),p=Math.min(f.count,o.start+o.count);for(let y=d,m=p-1;y<m;y+=c){const g=Ol(this,e,Ho,l,y,y+1,y);g&&t.push(g)}if(this.isLineLoop){const y=Ol(this,e,Ho,l,p-1,d,p-1);y&&t.push(y)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const r=t[n[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=r.length;s<o;s++){const a=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}function Ol(i,e,t,n,r,s,o){const a=i.geometry.attributes.position;if(su.fromBufferAttribute(a,r),ou.fromBufferAttribute(a,s),t.distanceSqToSegment(su,ou,Wh,jm)>n)return;Wh.applyMatrix4(i.matrixWorld);const c=e.ray.origin.distanceTo(Wh);if(!(c<e.near||c>e.far))return{distance:c,point:jm.clone().applyMatrix4(i.matrixWorld),index:o,face:null,faceIndex:null,barycoord:null,object:i}}const $m=new O,Zm=new O;class Ei extends Mr{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let r=0,s=t.count;r<s;r+=2)$m.fromBufferAttribute(t,r),Zm.fromBufferAttribute(t,r+1),n[r]=r===0?0:n[r-1],n[r+1]=n[r]+$m.distanceTo(Zm);e.setAttribute("lineDistance",new ze(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class G_ extends Mr{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class rp extends gn{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Ee(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const Km=new Ge,qf=new bs,Fl=new Jt,Bl=new O;class W_ extends ht{constructor(e=new tt,t=new rp){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,r=this.matrixWorld,s=e.params.Points.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Fl.copy(n.boundingSphere),Fl.applyMatrix4(r),Fl.radius+=s,e.ray.intersectsSphere(Fl)===!1)return;Km.copy(r).invert(),qf.copy(e.ray).applyMatrix4(Km);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=n.index,h=n.attributes.position;if(c!==null){const f=Math.max(0,o.start),d=Math.min(c.count,o.start+o.count);for(let p=f,y=d;p<y;p++){const m=c.getX(p);Bl.fromBufferAttribute(h,m),Jm(Bl,m,l,r,e,t,this)}}else{const f=Math.max(0,o.start),d=Math.min(h.count,o.start+o.count);for(let p=f,y=d;p<y;p++)Bl.fromBufferAttribute(h,p),Jm(Bl,p,l,r,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const r=t[n[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=r.length;s<o;s++){const a=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}function Jm(i,e,t,n,r,s,o){const a=qf.distanceSqToPoint(i);if(a<t){const l=new O;qf.closestPointToPoint(i,l),l.applyMatrix4(n);const c=r.ray.origin.distanceTo(l);if(c<r.near||c>r.far)return;s.push({distance:c,distanceToRay:Math.sqrt(a),point:l,index:e,face:null,faceIndex:null,barycoord:null,object:o})}}class X_ extends Lt{constructor(e,t,n,r,s=Yt,o=Yt,a,l,c){super(e,t,n,r,s,o,a,l,c),this.isVideoTexture=!0,this.generateMipmaps=!1;const u=this;function h(){u.needsUpdate=!0,e.requestVideoFrameCallback(h)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(h)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class qw extends X_{constructor(e,t,n,r,s,o,a,l){super({},e,t,n,r,s,o,a,l),this.isVideoFrameTexture=!0}update(){}clone(){return new this.constructor().copy(this)}setFrame(e){this.image=e,this.needsUpdate=!0}}class jw extends Lt{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=Vt,this.minFilter=Vt,this.generateMipmaps=!1,this.needsUpdate=!0}}class as extends Lt{constructor(e,t,n,r,s,o,a,l,c,u,h,f){super(null,o,a,l,c,u,r,s,h,f),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class $w extends as{constructor(e,t,n,r,s,o){super(e,t,n,s,o),this.isCompressedArrayTexture=!0,this.image.depth=r,this.wrapR=nn,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class Zw extends as{constructor(e,t,n){super(void 0,e[0].width,e[0].height,t,n,ji),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class Kw extends Lt{constructor(e,t,n,r,s,o,a,l,c){super(e,t,n,r,s,o,a,l,c),this.isCanvasTexture=!0,this.needsUpdate=!0}}class sp extends Lt{constructor(e,t,n=$i,r,s,o,a=Vt,l=Vt,c,u=go,h=1){if(u!==go&&u!==vo)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");const f={width:e,height:t,depth:h};super(f,r,s,o,a,l,u,n,c),this.isDepthTexture=!0,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.source=new mr(Object.assign({},e.image)),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class zu extends tt{constructor(e=1,t=1,n=4,r=8,s=1){super(),this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:n,radialSegments:r,heightSegments:s},t=Math.max(0,t),n=Math.max(1,Math.floor(n)),r=Math.max(3,Math.floor(r)),s=Math.max(1,Math.floor(s));const o=[],a=[],l=[],c=[],u=t/2,h=Math.PI/2*e,f=t,d=2*h+f,p=n*2+s,y=r+1,m=new O,g=new O;for(let M=0;M<=p;M++){let x=0,b=0,C=0,w=0;if(M<=n){const _=M/n,v=_*Math.PI/2;b=-u-e*Math.cos(v),C=e*Math.sin(v),w=-e*Math.cos(v),x=_*h}else if(M<=n+s){const _=(M-n)/s;b=-u+_*t,C=e,w=0,x=h+_*f}else{const _=(M-n-s)/n,v=_*Math.PI/2;b=u+e*Math.sin(v),C=e*Math.cos(v),w=e*Math.sin(v),x=h+f+_*h}const T=Math.max(0,Math.min(1,x/d));let S=0;M===0?S=.5/r:M===p&&(S=-.5/r);for(let _=0;_<=r;_++){const v=_/r,A=v*Math.PI*2,D=Math.sin(A),B=Math.cos(A);g.x=-C*B,g.y=b,g.z=C*D,a.push(g.x,g.y,g.z),m.set(-C*B,w,C*D),m.normalize(),l.push(m.x,m.y,m.z),c.push(v+S,T)}if(M>0){const _=(M-1)*y;for(let v=0;v<r;v++){const A=_+v,D=_+v+1,B=M*y+v,X=M*y+v+1;o.push(A,D,B),o.push(D,X,B)}}}this.setIndex(o),this.setAttribute("position",new ze(a,3)),this.setAttribute("normal",new ze(l,3)),this.setAttribute("uv",new ze(c,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new zu(e.radius,e.height,e.capSegments,e.radialSegments,e.heightSegments)}}class ku extends tt{constructor(e=1,t=32,n=0,r=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:r},t=Math.max(3,t);const s=[],o=[],a=[],l=[],c=new O,u=new de;o.push(0,0,0),a.push(0,0,1),l.push(.5,.5);for(let h=0,f=3;h<=t;h++,f+=3){const d=n+h/t*r;c.x=e*Math.cos(d),c.y=e*Math.sin(d),o.push(c.x,c.y,c.z),a.push(0,0,1),u.x=(o[f]/e+1)/2,u.y=(o[f+1]/e+1)/2,l.push(u.x,u.y)}for(let h=1;h<=t;h++)s.push(h,h+1,0);this.setIndex(s),this.setAttribute("position",new ze(o,3)),this.setAttribute("normal",new ze(a,3)),this.setAttribute("uv",new ze(l,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ku(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class Za extends tt{constructor(e=1,t=1,n=1,r=32,s=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:r,heightSegments:s,openEnded:o,thetaStart:a,thetaLength:l};const c=this;r=Math.floor(r),s=Math.floor(s);const u=[],h=[],f=[],d=[];let p=0;const y=[],m=n/2;let g=0;M(),o===!1&&(e>0&&x(!0),t>0&&x(!1)),this.setIndex(u),this.setAttribute("position",new ze(h,3)),this.setAttribute("normal",new ze(f,3)),this.setAttribute("uv",new ze(d,2));function M(){const b=new O,C=new O;let w=0;const T=(t-e)/n;for(let S=0;S<=s;S++){const _=[],v=S/s,A=v*(t-e)+e;for(let D=0;D<=r;D++){const B=D/r,X=B*l+a,Y=Math.sin(X),z=Math.cos(X);C.x=A*Y,C.y=-v*n+m,C.z=A*z,h.push(C.x,C.y,C.z),b.set(Y,T,z).normalize(),f.push(b.x,b.y,b.z),d.push(B,1-v),_.push(p++)}y.push(_)}for(let S=0;S<r;S++)for(let _=0;_<s;_++){const v=y[_][S],A=y[_+1][S],D=y[_+1][S+1],B=y[_][S+1];(e>0||_!==0)&&(u.push(v,A,B),w+=3),(t>0||_!==s-1)&&(u.push(A,D,B),w+=3)}c.addGroup(g,w,0),g+=w}function x(b){const C=p,w=new de,T=new O;let S=0;const _=b===!0?e:t,v=b===!0?1:-1;for(let D=1;D<=r;D++)h.push(0,m*v,0),f.push(0,v,0),d.push(.5,.5),p++;const A=p;for(let D=0;D<=r;D++){const X=D/r*l+a,Y=Math.cos(X),z=Math.sin(X);T.x=_*z,T.y=m*v,T.z=_*Y,h.push(T.x,T.y,T.z),f.push(0,v,0),w.x=Y*.5+.5,w.y=z*.5*v+.5,d.push(w.x,w.y),p++}for(let D=0;D<r;D++){const B=C+D,X=A+D;b===!0?u.push(X,X+1,B):u.push(X+1,X,B),S+=3}c.addGroup(g,S,b===!0?1:2),g+=S}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Za(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Ka extends Za{constructor(e=1,t=1,n=32,r=1,s=!1,o=0,a=Math.PI*2){super(0,e,t,n,r,s,o,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:r,openEnded:s,thetaStart:o,thetaLength:a}}static fromJSON(e){return new Ka(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Er extends tt{constructor(e=[],t=[],n=1,r=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:r};const s=[],o=[];a(r),c(n),u(),this.setAttribute("position",new ze(s,3)),this.setAttribute("normal",new ze(s.slice(),3)),this.setAttribute("uv",new ze(o,2)),r===0?this.computeVertexNormals():this.normalizeNormals();function a(M){const x=new O,b=new O,C=new O;for(let w=0;w<t.length;w+=3)d(t[w+0],x),d(t[w+1],b),d(t[w+2],C),l(x,b,C,M)}function l(M,x,b,C){const w=C+1,T=[];for(let S=0;S<=w;S++){T[S]=[];const _=M.clone().lerp(b,S/w),v=x.clone().lerp(b,S/w),A=w-S;for(let D=0;D<=A;D++)D===0&&S===w?T[S][D]=_:T[S][D]=_.clone().lerp(v,D/A)}for(let S=0;S<w;S++)for(let _=0;_<2*(w-S)-1;_++){const v=Math.floor(_/2);_%2===0?(f(T[S][v+1]),f(T[S+1][v]),f(T[S][v])):(f(T[S][v+1]),f(T[S+1][v+1]),f(T[S+1][v]))}}function c(M){const x=new O;for(let b=0;b<s.length;b+=3)x.x=s[b+0],x.y=s[b+1],x.z=s[b+2],x.normalize().multiplyScalar(M),s[b+0]=x.x,s[b+1]=x.y,s[b+2]=x.z}function u(){const M=new O;for(let x=0;x<s.length;x+=3){M.x=s[x+0],M.y=s[x+1],M.z=s[x+2];const b=m(M)/2/Math.PI+.5,C=g(M)/Math.PI+.5;o.push(b,1-C)}p(),h()}function h(){for(let M=0;M<o.length;M+=6){const x=o[M+0],b=o[M+2],C=o[M+4],w=Math.max(x,b,C),T=Math.min(x,b,C);w>.9&&T<.1&&(x<.2&&(o[M+0]+=1),b<.2&&(o[M+2]+=1),C<.2&&(o[M+4]+=1))}}function f(M){s.push(M.x,M.y,M.z)}function d(M,x){const b=M*3;x.x=e[b+0],x.y=e[b+1],x.z=e[b+2]}function p(){const M=new O,x=new O,b=new O,C=new O,w=new de,T=new de,S=new de;for(let _=0,v=0;_<s.length;_+=9,v+=6){M.set(s[_+0],s[_+1],s[_+2]),x.set(s[_+3],s[_+4],s[_+5]),b.set(s[_+6],s[_+7],s[_+8]),w.set(o[v+0],o[v+1]),T.set(o[v+2],o[v+3]),S.set(o[v+4],o[v+5]),C.copy(M).add(x).add(b).divideScalar(3);const A=m(C);y(w,v+0,M,A),y(T,v+2,x,A),y(S,v+4,b,A)}}function y(M,x,b,C){C<0&&M.x===1&&(o[x]=M.x-1),b.x===0&&b.z===0&&(o[x]=C/2/Math.PI+.5)}function m(M){return Math.atan2(M.z,-M.x)}function g(M){return Math.atan2(-M.y,Math.sqrt(M.x*M.x+M.z*M.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Er(e.vertices,e.indices,e.radius,e.details)}}class Vu extends Er{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,r=1/n,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-n,0,-r,n,0,r,-n,0,r,n,-r,-n,0,-r,n,0,r,-n,0,r,n,0,-n,0,-r,n,0,-r,-n,0,r,n,0,r],o=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,o,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Vu(e.radius,e.detail)}}const zl=new O,kl=new O,Xh=new O,Vl=new wn;class Y_ extends tt{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const r=Math.pow(10,4),s=Math.cos(os*t),o=e.getIndex(),a=e.getAttribute("position"),l=o?o.count:a.count,c=[0,0,0],u=["a","b","c"],h=new Array(3),f={},d=[];for(let p=0;p<l;p+=3){o?(c[0]=o.getX(p),c[1]=o.getX(p+1),c[2]=o.getX(p+2)):(c[0]=p,c[1]=p+1,c[2]=p+2);const{a:y,b:m,c:g}=Vl;if(y.fromBufferAttribute(a,c[0]),m.fromBufferAttribute(a,c[1]),g.fromBufferAttribute(a,c[2]),Vl.getNormal(Xh),h[0]=`${Math.round(y.x*r)},${Math.round(y.y*r)},${Math.round(y.z*r)}`,h[1]=`${Math.round(m.x*r)},${Math.round(m.y*r)},${Math.round(m.z*r)}`,h[2]=`${Math.round(g.x*r)},${Math.round(g.y*r)},${Math.round(g.z*r)}`,!(h[0]===h[1]||h[1]===h[2]||h[2]===h[0]))for(let M=0;M<3;M++){const x=(M+1)%3,b=h[M],C=h[x],w=Vl[u[M]],T=Vl[u[x]],S=`${b}_${C}`,_=`${C}_${b}`;_ in f&&f[_]?(Xh.dot(f[_].normal)<=s&&(d.push(w.x,w.y,w.z),d.push(T.x,T.y,T.z)),f[_]=null):S in f||(f[S]={index0:c[M],index1:c[x],normal:Xh.clone()})}}for(const p in f)if(f[p]){const{index0:y,index1:m}=f[p];zl.fromBufferAttribute(a,y),kl.fromBufferAttribute(a,m),d.push(zl.x,zl.y,zl.z),d.push(kl.x,kl.y,kl.z)}this.setAttribute("position",new ze(d,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class fi{constructor(){this.type="Curve",this.arcLengthDivisions=200,this.needsUpdate=!1,this.cacheArcLengths=null}getPoint(){console.warn("THREE.Curve: .getPoint() not implemented.")}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,r=this.getPoint(0),s=0;t.push(0);for(let o=1;o<=e;o++)n=this.getPoint(o/e),s+=n.distanceTo(r),t.push(s),r=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t=null){const n=this.getLengths();let r=0;const s=n.length;let o;t?o=t:o=e*n[s-1];let a=0,l=s-1,c;for(;a<=l;)if(r=Math.floor(a+(l-a)/2),c=n[r]-o,c<0)a=r+1;else if(c>0)l=r-1;else{l=r;break}if(r=l,n[r]===o)return r/(s-1);const u=n[r],f=n[r+1]-u,d=(o-u)/f;return(r+d)/(s-1)}getTangent(e,t){let r=e-1e-4,s=e+1e-4;r<0&&(r=0),s>1&&(s=1);const o=this.getPoint(r),a=this.getPoint(s),l=t||(o.isVector2?new de:new O);return l.copy(a).sub(o).normalize(),l}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t=!1){const n=new O,r=[],s=[],o=[],a=new O,l=new Ge;for(let d=0;d<=e;d++){const p=d/e;r[d]=this.getTangentAt(p,new O)}s[0]=new O,o[0]=new O;let c=Number.MAX_VALUE;const u=Math.abs(r[0].x),h=Math.abs(r[0].y),f=Math.abs(r[0].z);u<=c&&(c=u,n.set(1,0,0)),h<=c&&(c=h,n.set(0,1,0)),f<=c&&n.set(0,0,1),a.crossVectors(r[0],n).normalize(),s[0].crossVectors(r[0],a),o[0].crossVectors(r[0],s[0]);for(let d=1;d<=e;d++){if(s[d]=s[d-1].clone(),o[d]=o[d-1].clone(),a.crossVectors(r[d-1],r[d]),a.length()>Number.EPSILON){a.normalize();const p=Math.acos(Je(r[d-1].dot(r[d]),-1,1));s[d].applyMatrix4(l.makeRotationAxis(a,p))}o[d].crossVectors(r[d],s[d])}if(t===!0){let d=Math.acos(Je(s[0].dot(s[e]),-1,1));d/=e,r[0].dot(a.crossVectors(s[0],s[e]))>0&&(d=-d);for(let p=1;p<=e;p++)s[p].applyMatrix4(l.makeRotationAxis(r[p],d*p)),o[p].crossVectors(r[p],s[p])}return{tangents:r,normals:s,binormals:o}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.7,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class Hu extends fi{constructor(e=0,t=0,n=1,r=1,s=0,o=Math.PI*2,a=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=r,this.aStartAngle=s,this.aEndAngle=o,this.aClockwise=a,this.aRotation=l}getPoint(e,t=new de){const n=t,r=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const o=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=r;for(;s>r;)s-=r;s<Number.EPSILON&&(o?s=0:s=r),this.aClockwise===!0&&!o&&(s===r?s=-r:s=s-r);const a=this.aStartAngle+e*s;let l=this.aX+this.xRadius*Math.cos(a),c=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const u=Math.cos(this.aRotation),h=Math.sin(this.aRotation),f=l-this.aX,d=c-this.aY;l=f*u-d*h+this.aX,c=f*h+d*u+this.aY}return n.set(l,c)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class q_ extends Hu{constructor(e,t,n,r,s,o){super(e,t,n,n,r,s,o),this.isArcCurve=!0,this.type="ArcCurve"}}function op(){let i=0,e=0,t=0,n=0;function r(s,o,a,l){i=s,e=a,t=-3*s+3*o-2*a-l,n=2*s-2*o+a+l}return{initCatmullRom:function(s,o,a,l,c){r(o,a,c*(a-s),c*(l-o))},initNonuniformCatmullRom:function(s,o,a,l,c,u,h){let f=(o-s)/c-(a-s)/(c+u)+(a-o)/u,d=(a-o)/u-(l-o)/(u+h)+(l-a)/h;f*=u,d*=u,r(o,a,f,d)},calc:function(s){const o=s*s,a=o*s;return i+e*s+t*o+n*a}}}const Hl=new O,Yh=new op,qh=new op,jh=new op;class j_ extends fi{constructor(e=[],t=!1,n="centripetal",r=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=r}getPoint(e,t=new O){const n=t,r=this.points,s=r.length,o=(s-(this.closed?0:1))*e;let a=Math.floor(o),l=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/s)+1)*s:l===0&&a===s-1&&(a=s-2,l=1);let c,u;this.closed||a>0?c=r[(a-1)%s]:(Hl.subVectors(r[0],r[1]).add(r[0]),c=Hl);const h=r[a%s],f=r[(a+1)%s];if(this.closed||a+2<s?u=r[(a+2)%s]:(Hl.subVectors(r[s-1],r[s-2]).add(r[s-1]),u=Hl),this.curveType==="centripetal"||this.curveType==="chordal"){const d=this.curveType==="chordal"?.5:.25;let p=Math.pow(c.distanceToSquared(h),d),y=Math.pow(h.distanceToSquared(f),d),m=Math.pow(f.distanceToSquared(u),d);y<1e-4&&(y=1),p<1e-4&&(p=y),m<1e-4&&(m=y),Yh.initNonuniformCatmullRom(c.x,h.x,f.x,u.x,p,y,m),qh.initNonuniformCatmullRom(c.y,h.y,f.y,u.y,p,y,m),jh.initNonuniformCatmullRom(c.z,h.z,f.z,u.z,p,y,m)}else this.curveType==="catmullrom"&&(Yh.initCatmullRom(c.x,h.x,f.x,u.x,this.tension),qh.initCatmullRom(c.y,h.y,f.y,u.y,this.tension),jh.initCatmullRom(c.z,h.z,f.z,u.z,this.tension));return n.set(Yh.calc(l),qh.calc(l),jh.calc(l)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const r=e.points[t];this.points.push(r.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const r=this.points[t];e.points.push(r.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const r=e.points[t];this.points.push(new O().fromArray(r))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function Qm(i,e,t,n,r){const s=(n-e)*.5,o=(r-t)*.5,a=i*i,l=i*a;return(2*t-2*n+s+o)*l+(-3*t+3*n-2*s-o)*a+s*i+t}function Jw(i,e){const t=1-i;return t*t*e}function Qw(i,e){return 2*(1-i)*i*e}function e1(i,e){return i*i*e}function ha(i,e,t,n){return Jw(i,e)+Qw(i,t)+e1(i,n)}function t1(i,e){const t=1-i;return t*t*t*e}function n1(i,e){const t=1-i;return 3*t*t*i*e}function i1(i,e){return 3*(1-i)*i*i*e}function r1(i,e){return i*i*i*e}function fa(i,e,t,n,r){return t1(i,e)+n1(i,t)+i1(i,n)+r1(i,r)}class ap extends fi{constructor(e=new de,t=new de,n=new de,r=new de){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=r}getPoint(e,t=new de){const n=t,r=this.v0,s=this.v1,o=this.v2,a=this.v3;return n.set(fa(e,r.x,s.x,o.x,a.x),fa(e,r.y,s.y,o.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class $_ extends fi{constructor(e=new O,t=new O,n=new O,r=new O){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=r}getPoint(e,t=new O){const n=t,r=this.v0,s=this.v1,o=this.v2,a=this.v3;return n.set(fa(e,r.x,s.x,o.x,a.x),fa(e,r.y,s.y,o.y,a.y),fa(e,r.z,s.z,o.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class lp extends fi{constructor(e=new de,t=new de){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new de){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new de){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Z_ extends fi{constructor(e=new O,t=new O){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new O){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new O){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class cp extends fi{constructor(e=new de,t=new de,n=new de){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new de){const n=t,r=this.v0,s=this.v1,o=this.v2;return n.set(ha(e,r.x,s.x,o.x),ha(e,r.y,s.y,o.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class up extends fi{constructor(e=new O,t=new O,n=new O){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new O){const n=t,r=this.v0,s=this.v1,o=this.v2;return n.set(ha(e,r.x,s.x,o.x),ha(e,r.y,s.y,o.y),ha(e,r.z,s.z,o.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class hp extends fi{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new de){const n=t,r=this.points,s=(r.length-1)*e,o=Math.floor(s),a=s-o,l=r[o===0?o:o-1],c=r[o],u=r[o>r.length-2?r.length-1:o+1],h=r[o>r.length-3?r.length-1:o+2];return n.set(Qm(a,l.x,c.x,u.x,h.x),Qm(a,l.y,c.y,u.y,h.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const r=e.points[t];this.points.push(r.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const r=this.points[t];e.points.push(r.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const r=e.points[t];this.points.push(new de().fromArray(r))}return this}}var au=Object.freeze({__proto__:null,ArcCurve:q_,CatmullRomCurve3:j_,CubicBezierCurve:ap,CubicBezierCurve3:$_,EllipseCurve:Hu,LineCurve:lp,LineCurve3:Z_,QuadraticBezierCurve:cp,QuadraticBezierCurve3:up,SplineCurve:hp});class K_ extends fi{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const n=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new au[n](t,e))}return this}getPoint(e,t){const n=e*this.getLength(),r=this.getCurveLengths();let s=0;for(;s<r.length;){if(r[s]>=n){const o=r[s]-n,a=this.curves[s],l=a.getLength(),c=l===0?0:1-o/l;return a.getPointAt(c,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,r=this.curves.length;n<r;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let r=0,s=this.curves;r<s.length;r++){const o=s[r],a=o.isEllipseCurve?e*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?e*o.points.length:e,l=o.getPoints(a);for(let c=0;c<l.length;c++){const u=l[c];n&&n.equals(u)||(t.push(u),n=u)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const r=e.curves[t];this.curves.push(r.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const r=this.curves[t];e.curves.push(r.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const r=e.curves[t];this.curves.push(new au[r.type]().fromJSON(r))}return this}}class lu extends K_{constructor(e){super(),this.type="Path",this.currentPoint=new de,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new lp(this.currentPoint.clone(),new de(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,r){const s=new cp(this.currentPoint.clone(),new de(e,t),new de(n,r));return this.curves.push(s),this.currentPoint.set(n,r),this}bezierCurveTo(e,t,n,r,s,o){const a=new ap(this.currentPoint.clone(),new de(e,t),new de(n,r),new de(s,o));return this.curves.push(a),this.currentPoint.set(s,o),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new hp(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,r,s,o){const a=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(e+a,t+l,n,r,s,o),this}absarc(e,t,n,r,s,o){return this.absellipse(e,t,n,n,r,s,o),this}ellipse(e,t,n,r,s,o,a,l){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(e+c,t+u,n,r,s,o,a,l),this}absellipse(e,t,n,r,s,o,a,l){const c=new Hu(e,t,n,r,s,o,a,l);if(this.curves.length>0){const h=c.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(c);const u=c.getPoint(1);return this.currentPoint.copy(u),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class ls extends lu{constructor(e){super(e),this.uuid=Gn(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,r=this.holes.length;n<r;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const r=e.holes[t];this.holes.push(r.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const r=this.holes[t];e.holes.push(r.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const r=e.holes[t];this.holes.push(new lu().fromJSON(r))}return this}}function s1(i,e,t=2){const n=e&&e.length,r=n?e[0]*t:i.length;let s=J_(i,0,r,t,!0);const o=[];if(!s||s.next===s.prev)return o;let a,l,c;if(n&&(s=u1(i,e,s,t)),i.length>80*t){a=1/0,l=1/0;let u=-1/0,h=-1/0;for(let f=t;f<r;f+=t){const d=i[f],p=i[f+1];d<a&&(a=d),p<l&&(l=p),d>u&&(u=d),p>h&&(h=p)}c=Math.max(u-a,h-l),c=c!==0?32767/c:0}return La(s,o,t,a,l,c,0),o}function J_(i,e,t,n,r){let s;if(r===b1(i,e,t,n)>0)for(let o=e;o<t;o+=n)s=eg(o/n|0,i[o],i[o+1],s);else for(let o=t-n;o>=e;o-=n)s=eg(o/n|0,i[o],i[o+1],s);return s&&Mo(s,s.next)&&(Ua(s),s=s.next),s}function gs(i,e){if(!i)return i;e||(e=i);let t=i,n;do if(n=!1,!t.steiner&&(Mo(t,t.next)||Nt(t.prev,t,t.next)===0)){if(Ua(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function La(i,e,t,n,r,s,o){if(!i)return;!o&&s&&m1(i,n,r,s);let a=i;for(;i.prev!==i.next;){const l=i.prev,c=i.next;if(s?a1(i,n,r,s):o1(i)){e.push(l.i,i.i,c.i),Ua(i),i=c.next,a=c.next;continue}if(i=c,i===a){o?o===1?(i=l1(gs(i),e),La(i,e,t,n,r,s,2)):o===2&&c1(i,e,t,n,r,s):La(gs(i),e,t,n,r,s,1);break}}}function o1(i){const e=i.prev,t=i,n=i.next;if(Nt(e,t,n)>=0)return!1;const r=e.x,s=t.x,o=n.x,a=e.y,l=t.y,c=n.y,u=Math.min(r,s,o),h=Math.min(a,l,c),f=Math.max(r,s,o),d=Math.max(a,l,c);let p=n.next;for(;p!==e;){if(p.x>=u&&p.x<=f&&p.y>=h&&p.y<=d&&$o(r,a,s,l,o,c,p.x,p.y)&&Nt(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function a1(i,e,t,n){const r=i.prev,s=i,o=i.next;if(Nt(r,s,o)>=0)return!1;const a=r.x,l=s.x,c=o.x,u=r.y,h=s.y,f=o.y,d=Math.min(a,l,c),p=Math.min(u,h,f),y=Math.max(a,l,c),m=Math.max(u,h,f),g=jf(d,p,e,t,n),M=jf(y,m,e,t,n);let x=i.prevZ,b=i.nextZ;for(;x&&x.z>=g&&b&&b.z<=M;){if(x.x>=d&&x.x<=y&&x.y>=p&&x.y<=m&&x!==r&&x!==o&&$o(a,u,l,h,c,f,x.x,x.y)&&Nt(x.prev,x,x.next)>=0||(x=x.prevZ,b.x>=d&&b.x<=y&&b.y>=p&&b.y<=m&&b!==r&&b!==o&&$o(a,u,l,h,c,f,b.x,b.y)&&Nt(b.prev,b,b.next)>=0))return!1;b=b.nextZ}for(;x&&x.z>=g;){if(x.x>=d&&x.x<=y&&x.y>=p&&x.y<=m&&x!==r&&x!==o&&$o(a,u,l,h,c,f,x.x,x.y)&&Nt(x.prev,x,x.next)>=0)return!1;x=x.prevZ}for(;b&&b.z<=M;){if(b.x>=d&&b.x<=y&&b.y>=p&&b.y<=m&&b!==r&&b!==o&&$o(a,u,l,h,c,f,b.x,b.y)&&Nt(b.prev,b,b.next)>=0)return!1;b=b.nextZ}return!0}function l1(i,e){let t=i;do{const n=t.prev,r=t.next.next;!Mo(n,r)&&ey(n,t,t.next,r)&&Da(n,r)&&Da(r,n)&&(e.push(n.i,t.i,r.i),Ua(t),Ua(t.next),t=i=r),t=t.next}while(t!==i);return gs(t)}function c1(i,e,t,n,r,s){let o=i;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&_1(o,a)){let l=ty(o,a);o=gs(o,o.next),l=gs(l,l.next),La(o,e,t,n,r,s,0),La(l,e,t,n,r,s,0);return}a=a.next}o=o.next}while(o!==i)}function u1(i,e,t,n){const r=[];for(let s=0,o=e.length;s<o;s++){const a=e[s]*n,l=s<o-1?e[s+1]*n:i.length,c=J_(i,a,l,n,!1);c===c.next&&(c.steiner=!0),r.push(v1(c))}r.sort(h1);for(let s=0;s<r.length;s++)t=f1(r[s],t);return t}function h1(i,e){let t=i.x-e.x;if(t===0&&(t=i.y-e.y,t===0)){const n=(i.next.y-i.y)/(i.next.x-i.x),r=(e.next.y-e.y)/(e.next.x-e.x);t=n-r}return t}function f1(i,e){const t=d1(i,e);if(!t)return e;const n=ty(t,i);return gs(n,n.next),gs(t,t.next)}function d1(i,e){let t=e;const n=i.x,r=i.y;let s=-1/0,o;if(Mo(i,t))return t;do{if(Mo(i,t.next))return t.next;if(r<=t.y&&r>=t.next.y&&t.next.y!==t.y){const h=t.x+(r-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(h<=n&&h>s&&(s=h,o=t.x<t.next.x?t:t.next,h===n))return o}t=t.next}while(t!==e);if(!o)return null;const a=o,l=o.x,c=o.y;let u=1/0;t=o;do{if(n>=t.x&&t.x>=l&&n!==t.x&&Q_(r<c?n:s,r,l,c,r<c?s:n,r,t.x,t.y)){const h=Math.abs(r-t.y)/(n-t.x);Da(t,i)&&(h<u||h===u&&(t.x>o.x||t.x===o.x&&p1(o,t)))&&(o=t,u=h)}t=t.next}while(t!==a);return o}function p1(i,e){return Nt(i.prev,i,e.prev)<0&&Nt(e.next,i,i.next)<0}function m1(i,e,t,n){let r=i;do r.z===0&&(r.z=jf(r.x,r.y,e,t,n)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next;while(r!==i);r.prevZ.nextZ=null,r.prevZ=null,g1(r)}function g1(i){let e,t=1;do{let n=i,r;i=null;let s=null;for(e=0;n;){e++;let o=n,a=0;for(let c=0;c<t&&(a++,o=o.nextZ,!!o);c++);let l=t;for(;a>0||l>0&&o;)a!==0&&(l===0||!o||n.z<=o.z)?(r=n,n=n.nextZ,a--):(r=o,o=o.nextZ,l--),s?s.nextZ=r:i=r,r.prevZ=s,s=r;n=o}s.nextZ=null,t*=2}while(e>1);return i}function jf(i,e,t,n,r){return i=(i-t)*r|0,e=(e-n)*r|0,i=(i|i<<8)&16711935,i=(i|i<<4)&252645135,i=(i|i<<2)&858993459,i=(i|i<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,i|e<<1}function v1(i){let e=i,t=i;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==i);return t}function Q_(i,e,t,n,r,s,o,a){return(r-o)*(e-a)>=(i-o)*(s-a)&&(i-o)*(n-a)>=(t-o)*(e-a)&&(t-o)*(s-a)>=(r-o)*(n-a)}function $o(i,e,t,n,r,s,o,a){return!(i===o&&e===a)&&Q_(i,e,t,n,r,s,o,a)}function _1(i,e){return i.next.i!==e.i&&i.prev.i!==e.i&&!y1(i,e)&&(Da(i,e)&&Da(e,i)&&x1(i,e)&&(Nt(i.prev,i,e.prev)||Nt(i,e.prev,e))||Mo(i,e)&&Nt(i.prev,i,i.next)>0&&Nt(e.prev,e,e.next)>0)}function Nt(i,e,t){return(e.y-i.y)*(t.x-e.x)-(e.x-i.x)*(t.y-e.y)}function Mo(i,e){return i.x===e.x&&i.y===e.y}function ey(i,e,t,n){const r=Wl(Nt(i,e,t)),s=Wl(Nt(i,e,n)),o=Wl(Nt(t,n,i)),a=Wl(Nt(t,n,e));return!!(r!==s&&o!==a||r===0&&Gl(i,t,e)||s===0&&Gl(i,n,e)||o===0&&Gl(t,i,n)||a===0&&Gl(t,e,n))}function Gl(i,e,t){return e.x<=Math.max(i.x,t.x)&&e.x>=Math.min(i.x,t.x)&&e.y<=Math.max(i.y,t.y)&&e.y>=Math.min(i.y,t.y)}function Wl(i){return i>0?1:i<0?-1:0}function y1(i,e){let t=i;do{if(t.i!==i.i&&t.next.i!==i.i&&t.i!==e.i&&t.next.i!==e.i&&ey(t,t.next,i,e))return!0;t=t.next}while(t!==i);return!1}function Da(i,e){return Nt(i.prev,i,i.next)<0?Nt(i,e,i.next)>=0&&Nt(i,i.prev,e)>=0:Nt(i,e,i.prev)<0||Nt(i,i.next,e)<0}function x1(i,e){let t=i,n=!1;const r=(i.x+e.x)/2,s=(i.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&r<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==i);return n}function ty(i,e){const t=$f(i.i,i.x,i.y),n=$f(e.i,e.x,e.y),r=i.next,s=e.prev;return i.next=e,e.prev=i,t.next=r,r.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function eg(i,e,t,n){const r=$f(i,e,t);return n?(r.next=n.next,r.prev=n,n.next.prev=r,n.next=r):(r.prev=r,r.next=r),r}function Ua(i){i.next.prev=i.prev,i.prev.next=i.next,i.prevZ&&(i.prevZ.nextZ=i.nextZ),i.nextZ&&(i.nextZ.prevZ=i.prevZ)}function $f(i,e,t){return{i,x:e,y:t,prev:null,next:null,z:0,prevZ:null,nextZ:null,steiner:!1}}function b1(i,e,t,n){let r=0;for(let s=e,o=t-n;s<t;s+=n)r+=(i[o]-i[s])*(i[s+1]+i[o+1]),o=s;return r}class M1{static triangulate(e,t,n=2){return s1(e,t,n)}}class ri{static area(e){const t=e.length;let n=0;for(let r=t-1,s=0;s<t;r=s++)n+=e[r].x*e[s].y-e[s].x*e[r].y;return n*.5}static isClockWise(e){return ri.area(e)<0}static triangulateShape(e,t){const n=[],r=[],s=[];tg(e),ng(n,e);let o=e.length;t.forEach(tg);for(let l=0;l<t.length;l++)r.push(o),o+=t[l].length,ng(n,t[l]);const a=M1.triangulate(n,r);for(let l=0;l<a.length;l+=3)s.push(a.slice(l,l+3));return s}}function tg(i){const e=i.length;e>2&&i[e-1].equals(i[0])&&i.pop()}function ng(i,e){for(let t=0;t<e.length;t++)i.push(e[t].x),i.push(e[t].y)}class Ja extends tt{constructor(e=new ls([new de(.5,.5),new de(-.5,.5),new de(-.5,-.5),new de(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,r=[],s=[];for(let a=0,l=e.length;a<l;a++){const c=e[a];o(c)}this.setAttribute("position",new ze(r,3)),this.setAttribute("uv",new ze(s,2)),this.computeVertexNormals();function o(a){const l=[],c=t.curveSegments!==void 0?t.curveSegments:12,u=t.steps!==void 0?t.steps:1,h=t.depth!==void 0?t.depth:1;let f=t.bevelEnabled!==void 0?t.bevelEnabled:!0,d=t.bevelThickness!==void 0?t.bevelThickness:.2,p=t.bevelSize!==void 0?t.bevelSize:d-.1,y=t.bevelOffset!==void 0?t.bevelOffset:0,m=t.bevelSegments!==void 0?t.bevelSegments:3;const g=t.extrudePath,M=t.UVGenerator!==void 0?t.UVGenerator:S1;let x,b=!1,C,w,T,S;g&&(x=g.getSpacedPoints(u),b=!0,f=!1,C=g.computeFrenetFrames(u,!1),w=new O,T=new O,S=new O),f||(m=0,d=0,p=0,y=0);const _=a.extractPoints(c);let v=_.shape;const A=_.holes;if(!ri.isClockWise(v)){v=v.reverse();for(let E=0,G=A.length;E<G;E++){const V=A[E];ri.isClockWise(V)&&(A[E]=V.reverse())}}function B(E){const V=10000000000000001e-36;let $=E[0];for(let H=1;H<=E.length;H++){const ee=H%E.length,Z=E[ee],J=Z.x-$.x,pe=Z.y-$.y,U=J*J+pe*pe,R=Math.max(Math.abs(Z.x),Math.abs(Z.y),Math.abs($.x),Math.abs($.y)),j=V*R*R;if(U<=j){E.splice(ee,1),H--;continue}$=Z}}B(v),A.forEach(B);const X=A.length,Y=v;for(let E=0;E<X;E++){const G=A[E];v=v.concat(G)}function z(E,G,V){return G||console.error("THREE.ExtrudeGeometry: vec does not exist"),E.clone().addScaledVector(G,V)}const Q=v.length;function K(E,G,V){let $,H,ee;const Z=E.x-G.x,J=E.y-G.y,pe=V.x-E.x,U=V.y-E.y,R=Z*Z+J*J,j=Z*U-J*pe;if(Math.abs(j)>Number.EPSILON){const ie=Math.sqrt(R),he=Math.sqrt(pe*pe+U*U),se=G.x-J/ie,Ce=G.y+Z/ie,xe=V.x-U/he,Pe=V.y+pe/he,Le=((xe-se)*U-(Pe-Ce)*pe)/(Z*U-J*pe);$=se+Z*Le-E.x,H=Ce+J*Le-E.y;const _e=$*$+H*H;if(_e<=2)return new de($,H);ee=Math.sqrt(_e/2)}else{let ie=!1;Z>Number.EPSILON?pe>Number.EPSILON&&(ie=!0):Z<-Number.EPSILON?pe<-Number.EPSILON&&(ie=!0):Math.sign(J)===Math.sign(U)&&(ie=!0),ie?($=-J,H=Z,ee=Math.sqrt(R)):($=Z,H=J,ee=Math.sqrt(R/2))}return new de($/ee,H/ee)}const fe=[];for(let E=0,G=Y.length,V=G-1,$=E+1;E<G;E++,V++,$++)V===G&&(V=0),$===G&&($=0),fe[E]=K(Y[E],Y[V],Y[$]);const ge=[];let oe,Te=fe.concat();for(let E=0,G=X;E<G;E++){const V=A[E];oe=[];for(let $=0,H=V.length,ee=H-1,Z=$+1;$<H;$++,ee++,Z++)ee===H&&(ee=0),Z===H&&(Z=0),oe[$]=K(V[$],V[ee],V[Z]);ge.push(oe),Te=Te.concat(oe)}let ke;if(m===0)ke=ri.triangulateShape(Y,A);else{const E=[],G=[];for(let V=0;V<m;V++){const $=V/m,H=d*Math.cos($*Math.PI/2),ee=p*Math.sin($*Math.PI/2)+y;for(let Z=0,J=Y.length;Z<J;Z++){const pe=z(Y[Z],fe[Z],ee);I(pe.x,pe.y,-H),$===0&&E.push(pe)}for(let Z=0,J=X;Z<J;Z++){const pe=A[Z];oe=ge[Z];const U=[];for(let R=0,j=pe.length;R<j;R++){const ie=z(pe[R],oe[R],ee);I(ie.x,ie.y,-H),$===0&&U.push(ie)}$===0&&G.push(U)}}ke=ri.triangulateShape(E,G)}const ae=ke.length,ve=p+y;for(let E=0;E<Q;E++){const G=f?z(v[E],Te[E],ve):v[E];b?(T.copy(C.normals[0]).multiplyScalar(G.x),w.copy(C.binormals[0]).multiplyScalar(G.y),S.copy(x[0]).add(T).add(w),I(S.x,S.y,S.z)):I(G.x,G.y,0)}for(let E=1;E<=u;E++)for(let G=0;G<Q;G++){const V=f?z(v[G],Te[G],ve):v[G];b?(T.copy(C.normals[E]).multiplyScalar(V.x),w.copy(C.binormals[E]).multiplyScalar(V.y),S.copy(x[E]).add(T).add(w),I(S.x,S.y,S.z)):I(V.x,V.y,h/u*E)}for(let E=m-1;E>=0;E--){const G=E/m,V=d*Math.cos(G*Math.PI/2),$=p*Math.sin(G*Math.PI/2)+y;for(let H=0,ee=Y.length;H<ee;H++){const Z=z(Y[H],fe[H],$);I(Z.x,Z.y,h+V)}for(let H=0,ee=A.length;H<ee;H++){const Z=A[H];oe=ge[H];for(let J=0,pe=Z.length;J<pe;J++){const U=z(Z[J],oe[J],$);b?I(U.x,U.y+x[u-1].y,x[u-1].x+V):I(U.x,U.y,h+V)}}}Re(),Se();function Re(){const E=r.length/3;if(f){let G=0,V=Q*G;for(let $=0;$<ae;$++){const H=ke[$];F(H[2]+V,H[1]+V,H[0]+V)}G=u+m*2,V=Q*G;for(let $=0;$<ae;$++){const H=ke[$];F(H[0]+V,H[1]+V,H[2]+V)}}else{for(let G=0;G<ae;G++){const V=ke[G];F(V[2],V[1],V[0])}for(let G=0;G<ae;G++){const V=ke[G];F(V[0]+Q*u,V[1]+Q*u,V[2]+Q*u)}}n.addGroup(E,r.length/3-E,0)}function Se(){const E=r.length/3;let G=0;le(Y,G),G+=Y.length;for(let V=0,$=A.length;V<$;V++){const H=A[V];le(H,G),G+=H.length}n.addGroup(E,r.length/3-E,1)}function le(E,G){let V=E.length;for(;--V>=0;){const $=V;let H=V-1;H<0&&(H=E.length-1);for(let ee=0,Z=u+m*2;ee<Z;ee++){const J=Q*ee,pe=Q*(ee+1),U=G+$+J,R=G+H+J,j=G+H+pe,ie=G+$+pe;q(U,R,j,ie)}}}function I(E,G,V){l.push(E),l.push(G),l.push(V)}function F(E,G,V){P(E),P(G),P(V);const $=r.length/3,H=M.generateTopUV(n,r,$-3,$-2,$-1);L(H[0]),L(H[1]),L(H[2])}function q(E,G,V,$){P(E),P(G),P($),P(G),P(V),P($);const H=r.length/3,ee=M.generateSideWallUV(n,r,H-6,H-3,H-2,H-1);L(ee[0]),L(ee[1]),L(ee[3]),L(ee[1]),L(ee[2]),L(ee[3])}function P(E){r.push(l[E*3+0]),r.push(l[E*3+1]),r.push(l[E*3+2])}function L(E){s.push(E.x),s.push(E.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return w1(t,n,e)}static fromJSON(e,t){const n=[];for(let s=0,o=e.shapes.length;s<o;s++){const a=t[e.shapes[s]];n.push(a)}const r=e.options.extrudePath;return r!==void 0&&(e.options.extrudePath=new au[r.type]().fromJSON(r)),new Ja(n,e.options)}}const S1={generateTopUV:function(i,e,t,n,r){const s=e[t*3],o=e[t*3+1],a=e[n*3],l=e[n*3+1],c=e[r*3],u=e[r*3+1];return[new de(s,o),new de(a,l),new de(c,u)]},generateSideWallUV:function(i,e,t,n,r,s){const o=e[t*3],a=e[t*3+1],l=e[t*3+2],c=e[n*3],u=e[n*3+1],h=e[n*3+2],f=e[r*3],d=e[r*3+1],p=e[r*3+2],y=e[s*3],m=e[s*3+1],g=e[s*3+2];return Math.abs(a-u)<Math.abs(o-c)?[new de(o,1-l),new de(c,1-h),new de(f,1-p),new de(y,1-g)]:[new de(a,1-l),new de(u,1-h),new de(d,1-p),new de(m,1-g)]}};function w1(i,e,t){if(t.shapes=[],Array.isArray(i))for(let n=0,r=i.length;n<r;n++){const s=i[n];t.shapes.push(s.uuid)}else t.shapes.push(i.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class Gu extends Er{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,r=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(r,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Gu(e.radius,e.detail)}}class Wu extends tt{constructor(e=[new de(0,-.5),new de(.5,0),new de(0,.5)],t=12,n=0,r=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:r},t=Math.floor(t),r=Je(r,0,Math.PI*2);const s=[],o=[],a=[],l=[],c=[],u=1/t,h=new O,f=new de,d=new O,p=new O,y=new O;let m=0,g=0;for(let M=0;M<=e.length-1;M++)switch(M){case 0:m=e[M+1].x-e[M].x,g=e[M+1].y-e[M].y,d.x=g*1,d.y=-m,d.z=g*0,y.copy(d),d.normalize(),l.push(d.x,d.y,d.z);break;case e.length-1:l.push(y.x,y.y,y.z);break;default:m=e[M+1].x-e[M].x,g=e[M+1].y-e[M].y,d.x=g*1,d.y=-m,d.z=g*0,p.copy(d),d.x+=y.x,d.y+=y.y,d.z+=y.z,d.normalize(),l.push(d.x,d.y,d.z),y.copy(p)}for(let M=0;M<=t;M++){const x=n+M*u*r,b=Math.sin(x),C=Math.cos(x);for(let w=0;w<=e.length-1;w++){h.x=e[w].x*b,h.y=e[w].y,h.z=e[w].x*C,o.push(h.x,h.y,h.z),f.x=M/t,f.y=w/(e.length-1),a.push(f.x,f.y);const T=l[3*w+0]*b,S=l[3*w+1],_=l[3*w+0]*C;c.push(T,S,_)}}for(let M=0;M<t;M++)for(let x=0;x<e.length-1;x++){const b=x+M*e.length,C=b,w=b+e.length,T=b+e.length+1,S=b+1;s.push(C,w,S),s.push(T,S,w)}this.setIndex(s),this.setAttribute("position",new ze(o,3)),this.setAttribute("uv",new ze(a,2)),this.setAttribute("normal",new ze(c,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Wu(e.points,e.segments,e.phiStart,e.phiLength)}}class Qa extends Er{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],r=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,r,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Qa(e.radius,e.detail)}}class Ar extends tt{constructor(e=1,t=1,n=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r};const s=e/2,o=t/2,a=Math.floor(n),l=Math.floor(r),c=a+1,u=l+1,h=e/a,f=t/l,d=[],p=[],y=[],m=[];for(let g=0;g<u;g++){const M=g*f-o;for(let x=0;x<c;x++){const b=x*h-s;p.push(b,-M,0),y.push(0,0,1),m.push(x/a),m.push(1-g/l)}}for(let g=0;g<l;g++)for(let M=0;M<a;M++){const x=M+c*g,b=M+c*(g+1),C=M+1+c*(g+1),w=M+1+c*g;d.push(x,b,w),d.push(b,C,w)}this.setIndex(d),this.setAttribute("position",new ze(p,3)),this.setAttribute("normal",new ze(y,3)),this.setAttribute("uv",new ze(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ar(e.width,e.height,e.widthSegments,e.heightSegments)}}class Xu extends tt{constructor(e=.5,t=1,n=32,r=1,s=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:r,thetaStart:s,thetaLength:o},n=Math.max(3,n),r=Math.max(1,r);const a=[],l=[],c=[],u=[];let h=e;const f=(t-e)/r,d=new O,p=new de;for(let y=0;y<=r;y++){for(let m=0;m<=n;m++){const g=s+m/n*o;d.x=h*Math.cos(g),d.y=h*Math.sin(g),l.push(d.x,d.y,d.z),c.push(0,0,1),p.x=(d.x/t+1)/2,p.y=(d.y/t+1)/2,u.push(p.x,p.y)}h+=f}for(let y=0;y<r;y++){const m=y*(n+1);for(let g=0;g<n;g++){const M=g+m,x=M,b=M+n+1,C=M+n+2,w=M+1;a.push(x,b,w),a.push(b,C,w)}}this.setIndex(a),this.setAttribute("position",new ze(l,3)),this.setAttribute("normal",new ze(c,3)),this.setAttribute("uv",new ze(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Xu(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class Yu extends tt{constructor(e=new ls([new de(0,.5),new de(-.5,-.5),new de(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],r=[],s=[],o=[];let a=0,l=0;if(Array.isArray(e)===!1)c(e);else for(let u=0;u<e.length;u++)c(e[u]),this.addGroup(a,l,u),a+=l,l=0;this.setIndex(n),this.setAttribute("position",new ze(r,3)),this.setAttribute("normal",new ze(s,3)),this.setAttribute("uv",new ze(o,2));function c(u){const h=r.length/3,f=u.extractPoints(t);let d=f.shape;const p=f.holes;ri.isClockWise(d)===!1&&(d=d.reverse());for(let m=0,g=p.length;m<g;m++){const M=p[m];ri.isClockWise(M)===!0&&(p[m]=M.reverse())}const y=ri.triangulateShape(d,p);for(let m=0,g=p.length;m<g;m++){const M=p[m];d=d.concat(M)}for(let m=0,g=d.length;m<g;m++){const M=d[m];r.push(M.x,M.y,0),s.push(0,0,1),o.push(M.x,M.y)}for(let m=0,g=y.length;m<g;m++){const M=y[m],x=M[0]+h,b=M[1]+h,C=M[2]+h;n.push(x,b,C),l+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return T1(t,e)}static fromJSON(e,t){const n=[];for(let r=0,s=e.shapes.length;r<s;r++){const o=t[e.shapes[r]];n.push(o)}return new Yu(n,e.curveSegments)}}function T1(i,e){if(e.shapes=[],Array.isArray(i))for(let t=0,n=i.length;t<n;t++){const r=i[t];e.shapes.push(r.uuid)}else e.shapes.push(i.uuid);return e}class el extends tt{constructor(e=1,t=32,n=16,r=0,s=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:r,phiLength:s,thetaStart:o,thetaLength:a},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const l=Math.min(o+a,Math.PI);let c=0;const u=[],h=new O,f=new O,d=[],p=[],y=[],m=[];for(let g=0;g<=n;g++){const M=[],x=g/n;let b=0;g===0&&o===0?b=.5/t:g===n&&l===Math.PI&&(b=-.5/t);for(let C=0;C<=t;C++){const w=C/t;h.x=-e*Math.cos(r+w*s)*Math.sin(o+x*a),h.y=e*Math.cos(o+x*a),h.z=e*Math.sin(r+w*s)*Math.sin(o+x*a),p.push(h.x,h.y,h.z),f.copy(h).normalize(),y.push(f.x,f.y,f.z),m.push(w+b,1-x),M.push(c++)}u.push(M)}for(let g=0;g<n;g++)for(let M=0;M<t;M++){const x=u[g][M+1],b=u[g][M],C=u[g+1][M],w=u[g+1][M+1];(g!==0||o>0)&&d.push(x,b,w),(g!==n-1||l<Math.PI)&&d.push(b,C,w)}this.setIndex(d),this.setAttribute("position",new ze(p,3)),this.setAttribute("normal",new ze(y,3)),this.setAttribute("uv",new ze(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new el(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class qu extends Er{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],r=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,r,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new qu(e.radius,e.detail)}}class ju extends tt{constructor(e=1,t=.4,n=12,r=48,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:r,arc:s},n=Math.floor(n),r=Math.floor(r);const o=[],a=[],l=[],c=[],u=new O,h=new O,f=new O;for(let d=0;d<=n;d++)for(let p=0;p<=r;p++){const y=p/r*s,m=d/n*Math.PI*2;h.x=(e+t*Math.cos(m))*Math.cos(y),h.y=(e+t*Math.cos(m))*Math.sin(y),h.z=t*Math.sin(m),a.push(h.x,h.y,h.z),u.x=e*Math.cos(y),u.y=e*Math.sin(y),f.subVectors(h,u).normalize(),l.push(f.x,f.y,f.z),c.push(p/r),c.push(d/n)}for(let d=1;d<=n;d++)for(let p=1;p<=r;p++){const y=(r+1)*d+p-1,m=(r+1)*(d-1)+p-1,g=(r+1)*(d-1)+p,M=(r+1)*d+p;o.push(y,m,M),o.push(m,g,M)}this.setIndex(o),this.setAttribute("position",new ze(a,3)),this.setAttribute("normal",new ze(l,3)),this.setAttribute("uv",new ze(c,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ju(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class $u extends tt{constructor(e=1,t=.4,n=64,r=8,s=2,o=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:r,p:s,q:o},n=Math.floor(n),r=Math.floor(r);const a=[],l=[],c=[],u=[],h=new O,f=new O,d=new O,p=new O,y=new O,m=new O,g=new O;for(let x=0;x<=n;++x){const b=x/n*s*Math.PI*2;M(b,s,o,e,d),M(b+.01,s,o,e,p),m.subVectors(p,d),g.addVectors(p,d),y.crossVectors(m,g),g.crossVectors(y,m),y.normalize(),g.normalize();for(let C=0;C<=r;++C){const w=C/r*Math.PI*2,T=-t*Math.cos(w),S=t*Math.sin(w);h.x=d.x+(T*g.x+S*y.x),h.y=d.y+(T*g.y+S*y.y),h.z=d.z+(T*g.z+S*y.z),l.push(h.x,h.y,h.z),f.subVectors(h,d).normalize(),c.push(f.x,f.y,f.z),u.push(x/n),u.push(C/r)}}for(let x=1;x<=n;x++)for(let b=1;b<=r;b++){const C=(r+1)*(x-1)+(b-1),w=(r+1)*x+(b-1),T=(r+1)*x+b,S=(r+1)*(x-1)+b;a.push(C,w,S),a.push(w,T,S)}this.setIndex(a),this.setAttribute("position",new ze(l,3)),this.setAttribute("normal",new ze(c,3)),this.setAttribute("uv",new ze(u,2));function M(x,b,C,w,T){const S=Math.cos(x),_=Math.sin(x),v=C/b*x,A=Math.cos(v);T.x=w*(2+A)*.5*S,T.y=w*(2+A)*_*.5,T.z=w*Math.sin(v)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new $u(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Zu extends tt{constructor(e=new up(new O(-1,-1,0),new O(-1,1,0),new O(1,1,0)),t=64,n=1,r=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:r,closed:s};const o=e.computeFrenetFrames(t,s);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const a=new O,l=new O,c=new de;let u=new O;const h=[],f=[],d=[],p=[];y(),this.setIndex(p),this.setAttribute("position",new ze(h,3)),this.setAttribute("normal",new ze(f,3)),this.setAttribute("uv",new ze(d,2));function y(){for(let x=0;x<t;x++)m(x);m(s===!1?t:0),M(),g()}function m(x){u=e.getPointAt(x/t,u);const b=o.normals[x],C=o.binormals[x];for(let w=0;w<=r;w++){const T=w/r*Math.PI*2,S=Math.sin(T),_=-Math.cos(T);l.x=_*b.x+S*C.x,l.y=_*b.y+S*C.y,l.z=_*b.z+S*C.z,l.normalize(),f.push(l.x,l.y,l.z),a.x=u.x+n*l.x,a.y=u.y+n*l.y,a.z=u.z+n*l.z,h.push(a.x,a.y,a.z)}}function g(){for(let x=1;x<=t;x++)for(let b=1;b<=r;b++){const C=(r+1)*(x-1)+(b-1),w=(r+1)*x+(b-1),T=(r+1)*x+b,S=(r+1)*(x-1)+b;p.push(C,w,S),p.push(w,T,S)}}function M(){for(let x=0;x<=t;x++)for(let b=0;b<=r;b++)c.x=x/t,c.y=b/r,d.push(c.x,c.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Zu(new au[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class ny extends tt{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,r=new O,s=new O;if(e.index!==null){const o=e.attributes.position,a=e.index;let l=e.groups;l.length===0&&(l=[{start:0,count:a.count,materialIndex:0}]);for(let c=0,u=l.length;c<u;++c){const h=l[c],f=h.start,d=h.count;for(let p=f,y=f+d;p<y;p+=3)for(let m=0;m<3;m++){const g=a.getX(p+m),M=a.getX(p+(m+1)%3);r.fromBufferAttribute(o,g),s.fromBufferAttribute(o,M),ig(r,s,n)===!0&&(t.push(r.x,r.y,r.z),t.push(s.x,s.y,s.z))}}}else{const o=e.attributes.position;for(let a=0,l=o.count/3;a<l;a++)for(let c=0;c<3;c++){const u=3*a+c,h=3*a+(c+1)%3;r.fromBufferAttribute(o,u),s.fromBufferAttribute(o,h),ig(r,s,n)===!0&&(t.push(r.x,r.y,r.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new ze(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function ig(i,e,t){const n=`${i.x},${i.y},${i.z}-${e.x},${e.y},${e.z}`,r=`${e.x},${e.y},${e.z}-${i.x},${i.y},${i.z}`;return t.has(n)===!0||t.has(r)===!0?!1:(t.add(n),t.add(r),!0)}var rg=Object.freeze({__proto__:null,BoxGeometry:Tr,CapsuleGeometry:zu,CircleGeometry:ku,ConeGeometry:Ka,CylinderGeometry:Za,DodecahedronGeometry:Vu,EdgesGeometry:Y_,ExtrudeGeometry:Ja,IcosahedronGeometry:Gu,LatheGeometry:Wu,OctahedronGeometry:Qa,PlaneGeometry:Ar,PolyhedronGeometry:Er,RingGeometry:Xu,ShapeGeometry:Yu,SphereGeometry:el,TetrahedronGeometry:qu,TorusGeometry:ju,TorusKnotGeometry:$u,TubeGeometry:Zu,WireframeGeometry:ny});class iy extends gn{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Ee(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class da extends mn{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class fp extends gn{constructor(e){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new Ee(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ee(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=wr,this.normalScale=new de(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Tn,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class ry extends fp{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new de(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Je(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Ee(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Ee(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Ee(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!=e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class sy extends gn{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Ee(16777215),this.specular=new Ee(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ee(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=wr,this.normalScale=new de(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Tn,this.combine=Ga,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class oy extends gn{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Ee(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ee(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=wr,this.normalScale=new de(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class ay extends gn{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=wr,this.normalScale=new de(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class ly extends gn{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Ee(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ee(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=wr,this.normalScale=new de(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Tn,this.combine=Ga,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class dp extends gn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=x_,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class pp extends gn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}class cy extends gn{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Ee(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=wr,this.normalScale=new de(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class uy extends En{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function ts(i,e){return!i||i.constructor===e?i:typeof e.BYTES_PER_ELEMENT=="number"?new e(i):Array.prototype.slice.call(i)}function hy(i){return ArrayBuffer.isView(i)&&!(i instanceof DataView)}function fy(i){function e(r,s){return i[r]-i[s]}const t=i.length,n=new Array(t);for(let r=0;r!==t;++r)n[r]=r;return n.sort(e),n}function Zf(i,e,t){const n=i.length,r=new i.constructor(n);for(let s=0,o=0;o!==n;++s){const a=t[s]*e;for(let l=0;l!==e;++l)r[o++]=i[a+l]}return r}function mp(i,e,t,n){let r=1,s=i[0];for(;s!==void 0&&s[n]===void 0;)s=i[r++];if(s===void 0)return;let o=s[n];if(o!==void 0)if(Array.isArray(o))do o=s[n],o!==void 0&&(e.push(s.time),t.push(...o)),s=i[r++];while(s!==void 0);else if(o.toArray!==void 0)do o=s[n],o!==void 0&&(e.push(s.time),o.toArray(t,t.length)),s=i[r++];while(s!==void 0);else do o=s[n],o!==void 0&&(e.push(s.time),t.push(o)),s=i[r++];while(s!==void 0)}function E1(i,e,t,n,r=30){const s=i.clone();s.name=e;const o=[];for(let l=0;l<s.tracks.length;++l){const c=s.tracks[l],u=c.getValueSize(),h=[],f=[];for(let d=0;d<c.times.length;++d){const p=c.times[d]*r;if(!(p<t||p>=n)){h.push(c.times[d]);for(let y=0;y<u;++y)f.push(c.values[d*u+y])}}h.length!==0&&(c.times=ts(h,c.times.constructor),c.values=ts(f,c.values.constructor),o.push(c))}s.tracks=o;let a=1/0;for(let l=0;l<s.tracks.length;++l)a>s.tracks[l].times[0]&&(a=s.tracks[l].times[0]);for(let l=0;l<s.tracks.length;++l)s.tracks[l].shift(-1*a);return s.resetDuration(),s}function A1(i,e=0,t=i,n=30){n<=0&&(n=30);const r=t.tracks.length,s=e/n;for(let o=0;o<r;++o){const a=t.tracks[o],l=a.ValueTypeName;if(l==="bool"||l==="string")continue;const c=i.tracks.find(function(g){return g.name===a.name&&g.ValueTypeName===l});if(c===void 0)continue;let u=0;const h=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=h/3);let f=0;const d=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=d/3);const p=a.times.length-1;let y;if(s<=a.times[0]){const g=u,M=h-u;y=a.values.slice(g,M)}else if(s>=a.times[p]){const g=p*h+u,M=g+h-u;y=a.values.slice(g,M)}else{const g=a.createInterpolant(),M=u,x=h-u;g.evaluate(s),y=g.resultBuffer.slice(M,x)}l==="quaternion"&&new dn().fromArray(y).normalize().conjugate().toArray(y);const m=c.times.length;for(let g=0;g<m;++g){const M=g*d+f;if(l==="quaternion")dn.multiplyQuaternionsFlat(c.values,M,y,0,c.values,M);else{const x=d-f*2;for(let b=0;b<x;++b)c.values[M+b]-=y[b]}}}return i.blendMode=Zd,i}class C1{static convertArray(e,t){return ts(e,t)}static isTypedArray(e){return hy(e)}static getKeyframeOrder(e){return fy(e)}static sortedArray(e,t,n){return Zf(e,t,n)}static flattenJSON(e,t,n,r){mp(e,t,n,r)}static subclip(e,t,n,r,s=30){return E1(e,t,n,r,s)}static makeClipAdditive(e,t=0,n=e,r=30){return A1(e,t,n,r)}}class tl{constructor(e,t,n,r){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=r!==void 0?r:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,r=t[n],s=t[n-1];e:{t:{let o;n:{i:if(!(e<r)){for(let a=n+2;;){if(r===void 0){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===a)break;if(s=r,r=t[++n],e<r)break t}o=t.length;break n}if(!(e>=s)){const a=t[1];e<a&&(n=2,s=a);for(let l=n-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===l)break;if(r=s,s=t[--n-1],e>=s)break t}o=n,n=0;break n}break e}for(;n<o;){const a=n+o>>>1;e<t[a]?o=a:n=a+1}if(r=t[n],s=t[n-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(r===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,r)}return this.interpolate_(n,s,e,r)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,r=this.valueSize,s=e*r;for(let o=0;o!==r;++o)t[o]=n[s+o];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class dy extends tl{constructor(e,t,n,r){super(e,t,n,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Qr,endingEnd:Qr}}intervalChanged_(e,t,n){const r=this.parameterPositions;let s=e-2,o=e+1,a=r[s],l=r[o];if(a===void 0)switch(this.getSettings_().endingStart){case es:s=e,a=2*t-n;break;case Aa:s=r.length-2,a=t+r[s]-r[s+1];break;default:s=e,a=n}if(l===void 0)switch(this.getSettings_().endingEnd){case es:o=e,l=2*n-t;break;case Aa:o=1,l=n+r[1]-r[0];break;default:o=e-1,l=t}const c=(n-t)*.5,u=this.valueSize;this._weightPrev=c/(t-a),this._weightNext=c/(l-n),this._offsetPrev=s*u,this._offsetNext=o*u}interpolate_(e,t,n,r){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,u=this._offsetPrev,h=this._offsetNext,f=this._weightPrev,d=this._weightNext,p=(n-t)/(r-t),y=p*p,m=y*p,g=-f*m+2*f*y-f*p,M=(1+f)*m+(-1.5-2*f)*y+(-.5+f)*p+1,x=(-1-d)*m+(1.5+d)*y+.5*p,b=d*m-d*y;for(let C=0;C!==a;++C)s[C]=g*o[u+C]+M*o[c+C]+x*o[l+C]+b*o[h+C];return s}}class gp extends tl{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e,t,n,r){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,u=(n-t)/(r-t),h=1-u;for(let f=0;f!==a;++f)s[f]=o[c+f]*h+o[l+f]*u;return s}}class py extends tl{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e){return this.copySampleValue_(e-1)}}class Kn{constructor(e,t,n,r){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=ts(t,this.TimeBufferType),this.values=ts(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:ts(e.times,Array),values:ts(e.values,Array)};const r=e.getInterpolation();r!==e.DefaultInterpolation&&(n.interpolation=r)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new py(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new gp(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new dy(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case _o:t=this.InterpolantFactoryMethodDiscrete;break;case Ea:t=this.InterpolantFactoryMethodLinear;break;case cc:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return _o;case this.InterpolantFactoryMethodLinear:return Ea;case this.InterpolantFactoryMethodSmooth:return cc}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,r=t.length;n!==r;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,r=t.length;n!==r;++n)t[n]*=e}return this}trim(e,t){const n=this.times,r=n.length;let s=0,o=r-1;for(;s!==r&&n[s]<e;)++s;for(;o!==-1&&n[o]>t;)--o;if(++o,s!==0||o!==r){s>=o&&(o=Math.max(o,1),s=o-1);const a=this.getValueSize();this.times=n.slice(s,o),this.values=this.values.slice(s*a,o*a)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,r=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let o=null;for(let a=0;a!==s;a++){const l=n[a];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,l),e=!1;break}if(o!==null&&o>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,l,o),e=!1;break}o=l}if(r!==void 0&&hy(r))for(let a=0,l=r.length;a!==l;++a){const c=r[a];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,c),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),r=this.getInterpolation()===cc,s=e.length-1;let o=1;for(let a=1;a<s;++a){let l=!1;const c=e[a],u=e[a+1];if(c!==u&&(a!==1||c!==e[0]))if(r)l=!0;else{const h=a*n,f=h-n,d=h+n;for(let p=0;p!==n;++p){const y=t[h+p];if(y!==t[f+p]||y!==t[d+p]){l=!0;break}}}if(l){if(a!==o){e[o]=e[a];const h=a*n,f=o*n;for(let d=0;d!==n;++d)t[f+d]=t[h+d]}++o}}if(s>0){e[o]=e[s];for(let a=s*n,l=o*n,c=0;c!==n;++c)t[l+c]=t[a+c];++o}return o!==e.length?(this.times=e.slice(0,o),this.values=t.slice(0,o*n)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),n=this.constructor,r=new n(this.name,e,t);return r.createInterpolant=this.createInterpolant,r}}Kn.prototype.ValueTypeName="";Kn.prototype.TimeBufferType=Float32Array;Kn.prototype.ValueBufferType=Float32Array;Kn.prototype.DefaultInterpolation=Ea;class Ms extends Kn{constructor(e,t,n){super(e,t,n)}}Ms.prototype.ValueTypeName="bool";Ms.prototype.ValueBufferType=Array;Ms.prototype.DefaultInterpolation=_o;Ms.prototype.InterpolantFactoryMethodLinear=void 0;Ms.prototype.InterpolantFactoryMethodSmooth=void 0;class vp extends Kn{constructor(e,t,n,r){super(e,t,n,r)}}vp.prototype.ValueTypeName="color";class Na extends Kn{constructor(e,t,n,r){super(e,t,n,r)}}Na.prototype.ValueTypeName="number";class my extends tl{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e,t,n,r){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=(n-t)/(r-t);let c=e*a;for(let u=c+a;c!==u;c+=4)dn.slerpFlat(s,0,o,c-a,o,c,l);return s}}class nl extends Kn{constructor(e,t,n,r){super(e,t,n,r)}InterpolantFactoryMethodLinear(e){return new my(this.times,this.values,this.getValueSize(),e)}}nl.prototype.ValueTypeName="quaternion";nl.prototype.InterpolantFactoryMethodSmooth=void 0;class Ss extends Kn{constructor(e,t,n){super(e,t,n)}}Ss.prototype.ValueTypeName="string";Ss.prototype.ValueBufferType=Array;Ss.prototype.DefaultInterpolation=_o;Ss.prototype.InterpolantFactoryMethodLinear=void 0;Ss.prototype.InterpolantFactoryMethodSmooth=void 0;class Oa extends Kn{constructor(e,t,n,r){super(e,t,n,r)}}Oa.prototype.ValueTypeName="vector";class Fa{constructor(e="",t=-1,n=[],r=Lu){this.name=e,this.tracks=n,this.duration=t,this.blendMode=r,this.uuid=Gn(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,r=1/(e.fps||1);for(let o=0,a=n.length;o!==a;++o)t.push(I1(n[o]).scale(r));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,r={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,o=n.length;s!==o;++s)t.push(Kn.toJSON(n[s]));return r}static CreateFromMorphTargetSequence(e,t,n,r){const s=t.length,o=[];for(let a=0;a<s;a++){let l=[],c=[];l.push((a+s-1)%s,a,(a+1)%s),c.push(0,1,0);const u=fy(l);l=Zf(l,1,u),c=Zf(c,1,u),!r&&l[0]===0&&(l.push(s),c.push(c[0])),o.push(new Na(".morphTargetInfluences["+t[a].name+"]",l,c).scale(1/n))}return new this(e,-1,o)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const r=e;n=r.geometry&&r.geometry.animations||r.animations}for(let r=0;r<n.length;r++)if(n[r].name===t)return n[r];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const r={},s=/^([\w-]*?)([\d]+)$/;for(let a=0,l=e.length;a<l;a++){const c=e[a],u=c.name.match(s);if(u&&u.length>1){const h=u[1];let f=r[h];f||(r[h]=f=[]),f.push(c)}}const o=[];for(const a in r)o.push(this.CreateFromMorphTargetSequence(a,r[a],t,n));return o}static parseAnimation(e,t){if(console.warn("THREE.AnimationClip: parseAnimation() is deprecated and will be removed with r185"),!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(h,f,d,p,y){if(d.length!==0){const m=[],g=[];mp(d,m,g,p),m.length!==0&&y.push(new h(f,m,g))}},r=[],s=e.name||"default",o=e.fps||30,a=e.blendMode;let l=e.length||-1;const c=e.hierarchy||[];for(let h=0;h<c.length;h++){const f=c[h].keys;if(!(!f||f.length===0))if(f[0].morphTargets){const d={};let p;for(p=0;p<f.length;p++)if(f[p].morphTargets)for(let y=0;y<f[p].morphTargets.length;y++)d[f[p].morphTargets[y]]=-1;for(const y in d){const m=[],g=[];for(let M=0;M!==f[p].morphTargets.length;++M){const x=f[p];m.push(x.time),g.push(x.morphTarget===y?1:0)}r.push(new Na(".morphTargetInfluence["+y+"]",m,g))}l=d.length*o}else{const d=".bones["+t[h].name+"]";n(Oa,d+".position",f,"pos",r),n(nl,d+".quaternion",f,"rot",r),n(Oa,d+".scale",f,"scl",r)}}return r.length===0?null:new this(s,l,r,a)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,r=e.length;n!==r;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function R1(i){switch(i.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Na;case"vector":case"vector2":case"vector3":case"vector4":return Oa;case"color":return vp;case"quaternion":return nl;case"bool":case"boolean":return Ms;case"string":return Ss}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+i)}function I1(i){if(i.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=R1(i.type);if(i.times===void 0){const t=[],n=[];mp(i.keys,t,n,"value"),i.times=t,i.values=n}return e.parse!==void 0?e.parse(i):new e(i.name,i.times,i.values,i.interpolation)}const xi={enabled:!1,files:{},add:function(i,e){this.enabled!==!1&&(this.files[i]=e)},get:function(i){if(this.enabled!==!1)return this.files[i]},remove:function(i){delete this.files[i]},clear:function(){this.files={}}};class _p{constructor(e,t,n){const r=this;let s=!1,o=0,a=0,l;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(u){a++,s===!1&&r.onStart!==void 0&&r.onStart(u,o,a),s=!0},this.itemEnd=function(u){o++,r.onProgress!==void 0&&r.onProgress(u,o,a),o===a&&(s=!1,r.onLoad!==void 0&&r.onLoad())},this.itemError=function(u){r.onError!==void 0&&r.onError(u)},this.resolveURL=function(u){return l?l(u):u},this.setURLModifier=function(u){return l=u,this},this.addHandler=function(u,h){return c.push(u,h),this},this.removeHandler=function(u){const h=c.indexOf(u);return h!==-1&&c.splice(h,2),this},this.getHandler=function(u){for(let h=0,f=c.length;h<f;h+=2){const d=c[h],p=c[h+1];if(d.global&&(d.lastIndex=0),d.test(u))return p}return null}}}const gy=new _p;class An{constructor(e){this.manager=e!==void 0?e:gy,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(r,s){n.load(e,r,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}An.DEFAULT_MATERIAL_NAME="__DEFAULT";const Ni={};class P1 extends Error{constructor(e,t){super(e),this.response=t}}class wi extends An{constructor(e){super(e),this.mimeType="",this.responseType=""}load(e,t,n,r){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=xi.get(`file:${e}`);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(Ni[e]!==void 0){Ni[e].push({onLoad:t,onProgress:n,onError:r});return}Ni[e]=[],Ni[e].push({onLoad:t,onProgress:n,onError:r});const o=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,l=this.responseType;fetch(o).then(c=>{if(c.status===200||c.status===0){if(c.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||c.body===void 0||c.body.getReader===void 0)return c;const u=Ni[e],h=c.body.getReader(),f=c.headers.get("X-File-Size")||c.headers.get("Content-Length"),d=f?parseInt(f):0,p=d!==0;let y=0;const m=new ReadableStream({start(g){M();function M(){h.read().then(({done:x,value:b})=>{if(x)g.close();else{y+=b.byteLength;const C=new ProgressEvent("progress",{lengthComputable:p,loaded:y,total:d});for(let w=0,T=u.length;w<T;w++){const S=u[w];S.onProgress&&S.onProgress(C)}g.enqueue(b),M()}},x=>{g.error(x)})}}});return new Response(m)}else throw new P1(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`,c)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(u=>new DOMParser().parseFromString(u,a));case"json":return c.json();default:if(a==="")return c.text();{const h=/charset="?([^;"\s]*)"?/i.exec(a),f=h&&h[1]?h[1].toLowerCase():void 0,d=new TextDecoder(f);return c.arrayBuffer().then(p=>d.decode(p))}}}).then(c=>{xi.add(`file:${e}`,c);const u=Ni[e];delete Ni[e];for(let h=0,f=u.length;h<f;h++){const d=u[h];d.onLoad&&d.onLoad(c)}}).catch(c=>{const u=Ni[e];if(u===void 0)throw this.manager.itemError(e),c;delete Ni[e];for(let h=0,f=u.length;h<f;h++){const d=u[h];d.onError&&d.onError(c)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class L1 extends An{constructor(e){super(e)}load(e,t,n,r){const s=this,o=new wi(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(l){r?r(l):console.error(l),s.manager.itemError(e)}},n,r)}parse(e){const t=[];for(let n=0;n<e.length;n++){const r=Fa.parse(e[n]);t.push(r)}return t}}class D1 extends An{constructor(e){super(e)}load(e,t,n,r){const s=this,o=[],a=new as,l=new wi(this.manager);l.setPath(this.path),l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setWithCredentials(s.withCredentials);let c=0;function u(h){l.load(e[h],function(f){const d=s.parse(f,!0);o[h]={width:d.width,height:d.height,format:d.format,mipmaps:d.mipmaps},c+=1,c===6&&(d.mipmapCount===1&&(a.minFilter=Yt),a.image=o,a.format=d.format,a.needsUpdate=!0,t&&t(a))},n,r)}if(Array.isArray(e))for(let h=0,f=e.length;h<f;++h)u(h);else l.load(e,function(h){const f=s.parse(h,!0);if(f.isCubemap){const d=f.mipmaps.length/f.mipmapCount;for(let p=0;p<d;p++){o[p]={mipmaps:[]};for(let y=0;y<f.mipmapCount;y++)o[p].mipmaps.push(f.mipmaps[p*f.mipmapCount+y]),o[p].format=f.format,o[p].width=f.width,o[p].height=f.height}a.image=o}else a.image.width=f.width,a.image.height=f.height,a.mipmaps=f.mipmaps;f.mipmapCount===1&&(a.minFilter=Yt),a.format=f.format,a.needsUpdate=!0,t&&t(a)},n,r);return a}}const Gs=new WeakMap;class Ba extends An{constructor(e){super(e)}load(e,t,n,r){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=xi.get(`image:${e}`);if(o!==void 0){if(o.complete===!0)s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0);else{let h=Gs.get(o);h===void 0&&(h=[],Gs.set(o,h)),h.push({onLoad:t,onError:r})}return o}const a=Pa("img");function l(){u(),t&&t(this);const h=Gs.get(this)||[];for(let f=0;f<h.length;f++){const d=h[f];d.onLoad&&d.onLoad(this)}Gs.delete(this),s.manager.itemEnd(e)}function c(h){u(),r&&r(h),xi.remove(`image:${e}`);const f=Gs.get(this)||[];for(let d=0;d<f.length;d++){const p=f[d];p.onError&&p.onError(h)}Gs.delete(this),s.manager.itemError(e),s.manager.itemEnd(e)}function u(){a.removeEventListener("load",l,!1),a.removeEventListener("error",c,!1)}return a.addEventListener("load",l,!1),a.addEventListener("error",c,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),xi.add(`image:${e}`,a),s.manager.itemStart(e),a.src=e,a}}class U1 extends An{constructor(e){super(e)}load(e,t,n,r){const s=new ja;s.colorSpace=bn;const o=new Ba(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let a=0;function l(c){o.load(e[c],function(u){s.images[c]=u,a++,a===6&&(s.needsUpdate=!0,t&&t(s))},void 0,r)}for(let c=0;c<e.length;++c)l(c);return s}}class N1 extends An{constructor(e){super(e)}load(e,t,n,r){const s=this,o=new Zn,a=new wi(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(s.withCredentials),a.load(e,function(l){let c;try{c=s.parse(l)}catch(u){if(r!==void 0)r(u);else{console.error(u);return}}c.image!==void 0?o.image=c.image:c.data!==void 0&&(o.image.width=c.width,o.image.height=c.height,o.image.data=c.data),o.wrapS=c.wrapS!==void 0?c.wrapS:nn,o.wrapT=c.wrapT!==void 0?c.wrapT:nn,o.magFilter=c.magFilter!==void 0?c.magFilter:Yt,o.minFilter=c.minFilter!==void 0?c.minFilter:Yt,o.anisotropy=c.anisotropy!==void 0?c.anisotropy:1,c.colorSpace!==void 0&&(o.colorSpace=c.colorSpace),c.flipY!==void 0&&(o.flipY=c.flipY),c.format!==void 0&&(o.format=c.format),c.type!==void 0&&(o.type=c.type),c.mipmaps!==void 0&&(o.mipmaps=c.mipmaps,o.minFilter=ii),c.mipmapCount===1&&(o.minFilter=Yt),c.generateMipmaps!==void 0&&(o.generateMipmaps=c.generateMipmaps),o.needsUpdate=!0,t&&t(o,c)},n,r),o}}class O1 extends An{constructor(e){super(e)}load(e,t,n,r){const s=new Lt,o=new Ba(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(a){s.image=a,s.needsUpdate=!0,t!==void 0&&t(s)},n,r),s}}class Cr extends ht{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Ee(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}}class vy extends Cr{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(ht.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Ee(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const $h=new Ge,sg=new O,og=new O;class yp{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new de(512,512),this.mapType=ci,this.map=null,this.mapPass=null,this.matrix=new Ge,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Ao,this._frameExtents=new de(1,1),this._viewportCount=1,this._viewports=[new rt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;sg.setFromMatrixPosition(e.matrixWorld),t.position.copy(sg),og.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(og),t.updateMatrixWorld(),$h.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix($h),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply($h)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.autoUpdate=e.autoUpdate,this.needsUpdate=e.needsUpdate,this.normalBias=e.normalBias,this.blurSamples=e.blurSamples,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class F1 extends yp{constructor(){super(new Mt(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1,this.aspect=1}updateMatrices(e){const t=this.camera,n=yo*2*e.angle*this.focus,r=this.mapSize.width/this.mapSize.height*this.aspect,s=e.distance||t.far;(n!==t.fov||r!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=r,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class _y extends Cr{constructor(e,t,n=0,r=Math.PI/3,s=0,o=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(ht.DEFAULT_UP),this.updateMatrix(),this.target=new ht,this.distance=n,this.angle=r,this.penumbra=s,this.decay=o,this.map=null,this.shadow=new F1}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const ag=new Ge,Go=new O,Zh=new O;class B1 extends yp{constructor(){super(new Mt(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new de(4,2),this._viewportCount=6,this._viewports=[new rt(2,1,1,1),new rt(0,1,1,1),new rt(3,1,1,1),new rt(1,1,1,1),new rt(3,0,1,1),new rt(1,0,1,1)],this._cubeDirections=[new O(1,0,0),new O(-1,0,0),new O(0,0,1),new O(0,0,-1),new O(0,1,0),new O(0,-1,0)],this._cubeUps=[new O(0,1,0),new O(0,1,0),new O(0,1,0),new O(0,1,0),new O(0,0,1),new O(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,r=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),Go.setFromMatrixPosition(e.matrixWorld),n.position.copy(Go),Zh.copy(n.position),Zh.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Zh),n.updateMatrixWorld(),r.makeTranslation(-Go.x,-Go.y,-Go.z),ag.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(ag)}}class yy extends Cr{constructor(e,t,n=0,r=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=r,this.shadow=new B1}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class Gi extends qa{constructor(e=-1,t=1,n=1,r=-1,s=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=r,this.near=s,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,r,s,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let s=n-e,o=n+e,a=r+t,l=r-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,o=s+c*this.view.width,a-=u*this.view.offsetY,l=a-u*this.view.height}this.projectionMatrix.makeOrthographic(s,o,a,l,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}class z1 extends yp{constructor(){super(new Gi(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class xy extends Cr{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(ht.DEFAULT_UP),this.updateMatrix(),this.target=new ht,this.shadow=new z1}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class by extends Cr{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class My extends Cr{constructor(e,t,n=10,r=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=r}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class Sy{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new O)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,r=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.282095),t.addScaledVector(o[1],.488603*r),t.addScaledVector(o[2],.488603*s),t.addScaledVector(o[3],.488603*n),t.addScaledVector(o[4],1.092548*(n*r)),t.addScaledVector(o[5],1.092548*(r*s)),t.addScaledVector(o[6],.315392*(3*s*s-1)),t.addScaledVector(o[7],1.092548*(n*s)),t.addScaledVector(o[8],.546274*(n*n-r*r)),t}getIrradianceAt(e,t){const n=e.x,r=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.886227),t.addScaledVector(o[1],2*.511664*r),t.addScaledVector(o[2],2*.511664*s),t.addScaledVector(o[3],2*.511664*n),t.addScaledVector(o[4],2*.429043*n*r),t.addScaledVector(o[5],2*.429043*r*s),t.addScaledVector(o[6],.743125*s*s-.247708),t.addScaledVector(o[7],2*.429043*n*s),t.addScaledVector(o[8],.429043*(n*n-r*r)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let r=0;r<9;r++)n[r].fromArray(e,t+r*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let r=0;r<9;r++)n[r].toArray(e,t+r*3);return e}static getBasisAt(e,t){const n=e.x,r=e.y,s=e.z;t[0]=.282095,t[1]=.488603*r,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*r,t[5]=1.092548*r*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-r*r)}}class wy extends Cr{constructor(e=new Sy,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class Ku extends An{constructor(e){super(e),this.textures={}}load(e,t,n,r){const s=this,o=new wi(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(l){r?r(l):console.error(l),s.manager.itemError(e)}},n,r)}parse(e){const t=this.textures;function n(s){return t[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),t[s]}const r=this.createMaterialFromType(e.type);if(e.uuid!==void 0&&(r.uuid=e.uuid),e.name!==void 0&&(r.name=e.name),e.color!==void 0&&r.color!==void 0&&r.color.setHex(e.color),e.roughness!==void 0&&(r.roughness=e.roughness),e.metalness!==void 0&&(r.metalness=e.metalness),e.sheen!==void 0&&(r.sheen=e.sheen),e.sheenColor!==void 0&&(r.sheenColor=new Ee().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(r.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&r.emissive!==void 0&&r.emissive.setHex(e.emissive),e.specular!==void 0&&r.specular!==void 0&&r.specular.setHex(e.specular),e.specularIntensity!==void 0&&(r.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&r.specularColor!==void 0&&r.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(r.shininess=e.shininess),e.clearcoat!==void 0&&(r.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(r.clearcoatRoughness=e.clearcoatRoughness),e.dispersion!==void 0&&(r.dispersion=e.dispersion),e.iridescence!==void 0&&(r.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(r.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(r.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(r.transmission=e.transmission),e.thickness!==void 0&&(r.thickness=e.thickness),e.attenuationDistance!==void 0&&(r.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&r.attenuationColor!==void 0&&r.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(r.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(r.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(r.fog=e.fog),e.flatShading!==void 0&&(r.flatShading=e.flatShading),e.blending!==void 0&&(r.blending=e.blending),e.combine!==void 0&&(r.combine=e.combine),e.side!==void 0&&(r.side=e.side),e.shadowSide!==void 0&&(r.shadowSide=e.shadowSide),e.opacity!==void 0&&(r.opacity=e.opacity),e.transparent!==void 0&&(r.transparent=e.transparent),e.alphaTest!==void 0&&(r.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(r.alphaHash=e.alphaHash),e.depthFunc!==void 0&&(r.depthFunc=e.depthFunc),e.depthTest!==void 0&&(r.depthTest=e.depthTest),e.depthWrite!==void 0&&(r.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(r.colorWrite=e.colorWrite),e.blendSrc!==void 0&&(r.blendSrc=e.blendSrc),e.blendDst!==void 0&&(r.blendDst=e.blendDst),e.blendEquation!==void 0&&(r.blendEquation=e.blendEquation),e.blendSrcAlpha!==void 0&&(r.blendSrcAlpha=e.blendSrcAlpha),e.blendDstAlpha!==void 0&&(r.blendDstAlpha=e.blendDstAlpha),e.blendEquationAlpha!==void 0&&(r.blendEquationAlpha=e.blendEquationAlpha),e.blendColor!==void 0&&r.blendColor!==void 0&&r.blendColor.setHex(e.blendColor),e.blendAlpha!==void 0&&(r.blendAlpha=e.blendAlpha),e.stencilWriteMask!==void 0&&(r.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(r.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(r.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(r.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(r.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(r.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(r.stencilZPass=e.stencilZPass),e.stencilWrite!==void 0&&(r.stencilWrite=e.stencilWrite),e.wireframe!==void 0&&(r.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(r.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(r.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(r.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(r.rotation=e.rotation),e.linewidth!==void 0&&(r.linewidth=e.linewidth),e.dashSize!==void 0&&(r.dashSize=e.dashSize),e.gapSize!==void 0&&(r.gapSize=e.gapSize),e.scale!==void 0&&(r.scale=e.scale),e.polygonOffset!==void 0&&(r.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(r.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(r.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(r.dithering=e.dithering),e.alphaToCoverage!==void 0&&(r.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(r.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(r.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(r.visible=e.visible),e.toneMapped!==void 0&&(r.toneMapped=e.toneMapped),e.userData!==void 0&&(r.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?r.vertexColors=e.vertexColors>0:r.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const o=e.uniforms[s];switch(r.uniforms[s]={},o.type){case"t":r.uniforms[s].value=n(o.value);break;case"c":r.uniforms[s].value=new Ee().setHex(o.value);break;case"v2":r.uniforms[s].value=new de().fromArray(o.value);break;case"v3":r.uniforms[s].value=new O().fromArray(o.value);break;case"v4":r.uniforms[s].value=new rt().fromArray(o.value);break;case"m3":r.uniforms[s].value=new et().fromArray(o.value);break;case"m4":r.uniforms[s].value=new Ge().fromArray(o.value);break;default:r.uniforms[s].value=o.value}}if(e.defines!==void 0&&(r.defines=e.defines),e.vertexShader!==void 0&&(r.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(r.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(r.glslVersion=e.glslVersion),e.extensions!==void 0)for(const s in e.extensions)r.extensions[s]=e.extensions[s];if(e.lights!==void 0&&(r.lights=e.lights),e.clipping!==void 0&&(r.clipping=e.clipping),e.size!==void 0&&(r.size=e.size),e.sizeAttenuation!==void 0&&(r.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(r.map=n(e.map)),e.matcap!==void 0&&(r.matcap=n(e.matcap)),e.alphaMap!==void 0&&(r.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(r.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(r.bumpScale=e.bumpScale),e.normalMap!==void 0&&(r.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(r.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),r.normalScale=new de().fromArray(s)}return e.displacementMap!==void 0&&(r.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(r.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(r.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(r.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(r.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(r.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(r.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(r.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(r.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(r.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(r.envMap=n(e.envMap)),e.envMapRotation!==void 0&&r.envMapRotation.fromArray(e.envMapRotation),e.envMapIntensity!==void 0&&(r.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(r.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(r.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(r.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(r.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(r.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(r.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(r.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(r.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(r.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(r.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(r.clearcoatNormalScale=new de().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(r.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(r.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(r.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(r.thicknessMap=n(e.thicknessMap)),e.anisotropyMap!==void 0&&(r.anisotropyMap=n(e.anisotropyMap)),e.sheenColorMap!==void 0&&(r.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(r.sheenRoughnessMap=n(e.sheenRoughnessMap)),r}setTextures(e){return this.textures=e,this}createMaterialFromType(e){return Ku.createMaterialFromType(e)}static createMaterialFromType(e){const t={ShadowMaterial:iy,SpriteMaterial:np,RawShaderMaterial:da,ShaderMaterial:mn,PointsMaterial:rp,MeshPhysicalMaterial:ry,MeshStandardMaterial:fp,MeshPhongMaterial:sy,MeshToonMaterial:oy,MeshNormalMaterial:ay,MeshLambertMaterial:ly,MeshDepthMaterial:dp,MeshDistanceMaterial:pp,MeshBasicMaterial:Ti,MeshMatcapMaterial:cy,LineDashedMaterial:uy,LineBasicMaterial:En,Material:gn};return new t[e]}}class Kf{static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class Ty extends tt{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class Ey extends An{constructor(e){super(e)}load(e,t,n,r){const s=this,o=new wi(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(l){r?r(l):console.error(l),s.manager.itemError(e)}},n,r)}parse(e){const t={},n={};function r(d,p){if(t[p]!==void 0)return t[p];const m=d.interleavedBuffers[p],g=s(d,m.buffer),M=Zs(m.type,g),x=new $a(M,m.stride);return x.uuid=m.uuid,t[p]=x,x}function s(d,p){if(n[p]!==void 0)return n[p];const m=d.arrayBuffers[p],g=new Uint32Array(m).buffer;return n[p]=g,g}const o=e.isInstancedBufferGeometry?new Ty:new tt,a=e.data.index;if(a!==void 0){const d=Zs(a.type,a.array);o.setIndex(new ft(d,1))}const l=e.data.attributes;for(const d in l){const p=l[d];let y;if(p.isInterleavedBufferAttribute){const m=r(e.data,p.data);y=new Ki(m,p.itemSize,p.offset,p.normalized)}else{const m=Zs(p.type,p.array),g=p.isInstancedBufferAttribute?bo:ft;y=new g(m,p.itemSize,p.normalized)}p.name!==void 0&&(y.name=p.name),p.usage!==void 0&&y.setUsage(p.usage),o.setAttribute(d,y)}const c=e.data.morphAttributes;if(c)for(const d in c){const p=c[d],y=[];for(let m=0,g=p.length;m<g;m++){const M=p[m];let x;if(M.isInterleavedBufferAttribute){const b=r(e.data,M.data);x=new Ki(b,M.itemSize,M.offset,M.normalized)}else{const b=Zs(M.type,M.array);x=new ft(b,M.itemSize,M.normalized)}M.name!==void 0&&(x.name=M.name),y.push(x)}o.morphAttributes[d]=y}e.data.morphTargetsRelative&&(o.morphTargetsRelative=!0);const h=e.data.groups||e.data.drawcalls||e.data.offsets;if(h!==void 0)for(let d=0,p=h.length;d!==p;++d){const y=h[d];o.addGroup(y.start,y.count,y.materialIndex)}const f=e.data.boundingSphere;return f!==void 0&&(o.boundingSphere=new Jt().fromJSON(f)),e.name&&(o.name=e.name),e.userData&&(o.userData=e.userData),o}}class k1 extends An{constructor(e){super(e)}load(e,t,n,r){const s=this,o=this.path===""?Kf.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||o;const a=new wi(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(l){let c=null;try{c=JSON.parse(l)}catch(h){r!==void 0&&r(h),console.error("THREE:ObjectLoader: Can't parse "+e+".",h.message);return}const u=c.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry"){r!==void 0&&r(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(c,t)},n,r)}async loadAsync(e,t){const n=this,r=this.path===""?Kf.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||r;const s=new wi(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const o=await s.loadAsync(e,t),a=JSON.parse(o),l=a.metadata;if(l===void 0||l.type===void 0||l.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(a)}parse(e,t){const n=this.parseAnimations(e.animations),r=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,r),o=this.parseImages(e.images,function(){t!==void 0&&t(c)}),a=this.parseTextures(e.textures,o),l=this.parseMaterials(e.materials,a),c=this.parseObject(e.object,s,l,a,n),u=this.parseSkeletons(e.skeletons,c);if(this.bindSkeletons(c,u),this.bindLightTargets(c),t!==void 0){let h=!1;for(const f in o)if(o[f].data instanceof HTMLImageElement){h=!0;break}h===!1&&t(c)}return c}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,n),s=await this.parseImagesAsync(e.images),o=this.parseTextures(e.textures,s),a=this.parseMaterials(e.materials,o),l=this.parseObject(e.object,r,a,o,t),c=this.parseSkeletons(e.skeletons,l);return this.bindSkeletons(l,c),this.bindLightTargets(l),l}parseShapes(e){const t={};if(e!==void 0)for(let n=0,r=e.length;n<r;n++){const s=new ls().fromJSON(e[n]);t[s.uuid]=s}return t}parseSkeletons(e,t){const n={},r={};if(t.traverse(function(s){s.isBone&&(r[s.uuid]=s)}),e!==void 0)for(let s=0,o=e.length;s<o;s++){const a=new Fu().fromJSON(e[s],r);n[a.uuid]=a}return n}parseGeometries(e,t){const n={};if(e!==void 0){const r=new Ey;for(let s=0,o=e.length;s<o;s++){let a;const l=e[s];switch(l.type){case"BufferGeometry":case"InstancedBufferGeometry":a=r.parse(l);break;default:l.type in rg?a=rg[l.type].fromJSON(l,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${l.type}"`)}a.uuid=l.uuid,l.name!==void 0&&(a.name=l.name),l.userData!==void 0&&(a.userData=l.userData),n[l.uuid]=a}}return n}parseMaterials(e,t){const n={},r={};if(e!==void 0){const s=new Ku;s.setTextures(t);for(let o=0,a=e.length;o<a;o++){const l=e[o];n[l.uuid]===void 0&&(n[l.uuid]=s.parse(l)),r[l.uuid]=n[l.uuid]}}return r}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const r=e[n],s=Fa.parse(r);t[s.uuid]=s}return t}parseImages(e,t){const n=this,r={};let s;function o(l){return n.manager.itemStart(l),s.load(l,function(){n.manager.itemEnd(l)},void 0,function(){n.manager.itemError(l),n.manager.itemEnd(l)})}function a(l){if(typeof l=="string"){const c=l,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:n.resourcePath+c;return o(u)}else return l.data?{data:Zs(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){const l=new _p(t);s=new Ba(l),s.setCrossOrigin(this.crossOrigin);for(let c=0,u=e.length;c<u;c++){const h=e[c],f=h.url;if(Array.isArray(f)){const d=[];for(let p=0,y=f.length;p<y;p++){const m=f[p],g=a(m);g!==null&&(g instanceof HTMLImageElement?d.push(g):d.push(new Zn(g.data,g.width,g.height)))}r[h.uuid]=new mr(d)}else{const d=a(h.url);r[h.uuid]=new mr(d)}}}return r}async parseImagesAsync(e){const t=this,n={};let r;async function s(o){if(typeof o=="string"){const a=o,l=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(a)?a:t.resourcePath+a;return await r.loadAsync(l)}else return o.data?{data:Zs(o.type,o.data),width:o.width,height:o.height}:null}if(e!==void 0&&e.length>0){r=new Ba(this.manager),r.setCrossOrigin(this.crossOrigin);for(let o=0,a=e.length;o<a;o++){const l=e[o],c=l.url;if(Array.isArray(c)){const u=[];for(let h=0,f=c.length;h<f;h++){const d=c[h],p=await s(d);p!==null&&(p instanceof HTMLImageElement?u.push(p):u.push(new Zn(p.data,p.width,p.height)))}n[l.uuid]=new mr(u)}else{const u=await s(l.url);n[l.uuid]=new mr(u)}}}return n}parseTextures(e,t){function n(s,o){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),o[s])}const r={};if(e!==void 0)for(let s=0,o=e.length;s<o;s++){const a=e[s];a.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),t[a.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",a.image);const l=t[a.image],c=l.data;let u;Array.isArray(c)?(u=new ja,c.length===6&&(u.needsUpdate=!0)):(c&&c.data?u=new Zn:u=new Lt,c&&(u.needsUpdate=!0)),u.source=l,u.uuid=a.uuid,a.name!==void 0&&(u.name=a.name),a.mapping!==void 0&&(u.mapping=n(a.mapping,V1)),a.channel!==void 0&&(u.channel=a.channel),a.offset!==void 0&&u.offset.fromArray(a.offset),a.repeat!==void 0&&u.repeat.fromArray(a.repeat),a.center!==void 0&&u.center.fromArray(a.center),a.rotation!==void 0&&(u.rotation=a.rotation),a.wrap!==void 0&&(u.wrapS=n(a.wrap[0],lg),u.wrapT=n(a.wrap[1],lg)),a.format!==void 0&&(u.format=a.format),a.internalFormat!==void 0&&(u.internalFormat=a.internalFormat),a.type!==void 0&&(u.type=a.type),a.colorSpace!==void 0&&(u.colorSpace=a.colorSpace),a.minFilter!==void 0&&(u.minFilter=n(a.minFilter,cg)),a.magFilter!==void 0&&(u.magFilter=n(a.magFilter,cg)),a.anisotropy!==void 0&&(u.anisotropy=a.anisotropy),a.flipY!==void 0&&(u.flipY=a.flipY),a.generateMipmaps!==void 0&&(u.generateMipmaps=a.generateMipmaps),a.premultiplyAlpha!==void 0&&(u.premultiplyAlpha=a.premultiplyAlpha),a.unpackAlignment!==void 0&&(u.unpackAlignment=a.unpackAlignment),a.compareFunction!==void 0&&(u.compareFunction=a.compareFunction),a.userData!==void 0&&(u.userData=a.userData),r[a.uuid]=u}return r}parseObject(e,t,n,r,s){let o;function a(f){return t[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",f),t[f]}function l(f){if(f!==void 0){if(Array.isArray(f)){const d=[];for(let p=0,y=f.length;p<y;p++){const m=f[p];n[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),d.push(n[m])}return d}return n[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",f),n[f]}}function c(f){return r[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",f),r[f]}let u,h;switch(e.type){case"Scene":o=new ms,e.background!==void 0&&(Number.isInteger(e.background)?o.background=new Ee(e.background):o.background=c(e.background)),e.environment!==void 0&&(o.environment=c(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?o.fog=new Ou(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(o.fog=new Nu(e.fog.color,e.fog.density)),e.fog.name!==""&&(o.fog.name=e.fog.name)),e.backgroundBlurriness!==void 0&&(o.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(o.backgroundIntensity=e.backgroundIntensity),e.backgroundRotation!==void 0&&o.backgroundRotation.fromArray(e.backgroundRotation),e.environmentIntensity!==void 0&&(o.environmentIntensity=e.environmentIntensity),e.environmentRotation!==void 0&&o.environmentRotation.fromArray(e.environmentRotation);break;case"PerspectiveCamera":o=new Mt(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(o.focus=e.focus),e.zoom!==void 0&&(o.zoom=e.zoom),e.filmGauge!==void 0&&(o.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(o.filmOffset=e.filmOffset),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"OrthographicCamera":o=new Gi(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(o.zoom=e.zoom),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"AmbientLight":o=new by(e.color,e.intensity);break;case"DirectionalLight":o=new xy(e.color,e.intensity),o.target=e.target||"";break;case"PointLight":o=new yy(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":o=new My(e.color,e.intensity,e.width,e.height);break;case"SpotLight":o=new _y(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay),o.target=e.target||"";break;case"HemisphereLight":o=new vy(e.color,e.groundColor,e.intensity);break;case"LightProbe":o=new wy().fromJSON(e);break;case"SkinnedMesh":u=a(e.geometry),h=l(e.material),o=new k_(u,h),e.bindMode!==void 0&&(o.bindMode=e.bindMode),e.bindMatrix!==void 0&&o.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(o.skeleton=e.skeleton);break;case"Mesh":u=a(e.geometry),h=l(e.material),o=new St(u,h);break;case"InstancedMesh":u=a(e.geometry),h=l(e.material);const f=e.count,d=e.instanceMatrix,p=e.instanceColor;o=new V_(u,h,f),o.instanceMatrix=new bo(new Float32Array(d.array),16),p!==void 0&&(o.instanceColor=new bo(new Float32Array(p.array),p.itemSize));break;case"BatchedMesh":u=a(e.geometry),h=l(e.material),o=new H_(e.maxInstanceCount,e.maxVertexCount,e.maxIndexCount,h),o.geometry=u,o.perObjectFrustumCulled=e.perObjectFrustumCulled,o.sortObjects=e.sortObjects,o._drawRanges=e.drawRanges,o._reservedRanges=e.reservedRanges,o._geometryInfo=e.geometryInfo.map(y=>{let m=null,g=null;return y.boundingBox!==void 0&&(m=new Kt().fromJSON(y.boundingBox)),y.boundingSphere!==void 0&&(g=new Jt().fromJSON(y.boundingSphere)),{...y,boundingBox:m,boundingSphere:g}}),o._instanceInfo=e.instanceInfo,o._availableInstanceIds=e._availableInstanceIds,o._availableGeometryIds=e._availableGeometryIds,o._nextIndexStart=e.nextIndexStart,o._nextVertexStart=e.nextVertexStart,o._geometryCount=e.geometryCount,o._maxInstanceCount=e.maxInstanceCount,o._maxVertexCount=e.maxVertexCount,o._maxIndexCount=e.maxIndexCount,o._geometryInitialized=e.geometryInitialized,o._matricesTexture=c(e.matricesTexture.uuid),o._indirectTexture=c(e.indirectTexture.uuid),e.colorsTexture!==void 0&&(o._colorsTexture=c(e.colorsTexture.uuid)),e.boundingSphere!==void 0&&(o.boundingSphere=new Jt().fromJSON(e.boundingSphere)),e.boundingBox!==void 0&&(o.boundingBox=new Kt().fromJSON(e.boundingBox));break;case"LOD":o=new z_;break;case"Line":o=new Mr(a(e.geometry),l(e.material));break;case"LineLoop":o=new G_(a(e.geometry),l(e.material));break;case"LineSegments":o=new Ei(a(e.geometry),l(e.material));break;case"PointCloud":case"Points":o=new W_(a(e.geometry),l(e.material));break;case"Sprite":o=new B_(l(e.material));break;case"Group":o=new Ks;break;case"Bone":o=new ip;break;default:o=new ht}if(o.uuid=e.uuid,e.name!==void 0&&(o.name=e.name),e.matrix!==void 0?(o.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(o.matrixAutoUpdate=e.matrixAutoUpdate),o.matrixAutoUpdate&&o.matrix.decompose(o.position,o.quaternion,o.scale)):(e.position!==void 0&&o.position.fromArray(e.position),e.rotation!==void 0&&o.rotation.fromArray(e.rotation),e.quaternion!==void 0&&o.quaternion.fromArray(e.quaternion),e.scale!==void 0&&o.scale.fromArray(e.scale)),e.up!==void 0&&o.up.fromArray(e.up),e.castShadow!==void 0&&(o.castShadow=e.castShadow),e.receiveShadow!==void 0&&(o.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.intensity!==void 0&&(o.shadow.intensity=e.shadow.intensity),e.shadow.bias!==void 0&&(o.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(o.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(o.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&o.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(o.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(o.visible=e.visible),e.frustumCulled!==void 0&&(o.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(o.renderOrder=e.renderOrder),e.userData!==void 0&&(o.userData=e.userData),e.layers!==void 0&&(o.layers.mask=e.layers),e.children!==void 0){const f=e.children;for(let d=0;d<f.length;d++)o.add(this.parseObject(f[d],t,n,r,s))}if(e.animations!==void 0){const f=e.animations;for(let d=0;d<f.length;d++){const p=f[d];o.animations.push(s[p])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(o.autoUpdate=e.autoUpdate);const f=e.levels;for(let d=0;d<f.length;d++){const p=f[d],y=o.getObjectByProperty("uuid",p.object);y!==void 0&&o.addLevel(y,p.distance,p.hysteresis)}}return o}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const r=t[n.skeleton];r===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(r,n.bindMatrix)}})}bindLightTargets(e){e.traverse(function(t){if(t.isDirectionalLight||t.isSpotLight){const n=t.target,r=e.getObjectByProperty("uuid",n);r!==void 0?t.target=r:t.target=new ht}})}}const V1={UVMapping:wu,CubeReflectionMapping:ji,CubeRefractionMapping:br,EquirectangularReflectionMapping:wa,EquirectangularRefractionMapping:Ta,CubeUVReflectionMapping:Eo},lg={RepeatWrapping:ho,ClampToEdgeWrapping:nn,MirroredRepeatWrapping:fo},cg={NearestFilter:Vt,NearestMipmapNearestFilter:Tu,NearestMipmapLinearFilter:Jr,LinearFilter:Yt,LinearMipmapNearestFilter:so,LinearMipmapLinearFilter:ii},Kh=new WeakMap;class H1 extends An{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,r){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=xi.get(`image-bitmap:${e}`);if(o!==void 0){if(s.manager.itemStart(e),o.then){o.then(c=>{if(Kh.has(o)===!0)r&&r(Kh.get(o)),s.manager.itemError(e),s.manager.itemEnd(e);else return t&&t(c),s.manager.itemEnd(e),c});return}return setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o}const a={};a.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",a.headers=this.requestHeader;const l=fetch(e,a).then(function(c){return c.blob()}).then(function(c){return createImageBitmap(c,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(c){return xi.add(`image-bitmap:${e}`,c),t&&t(c),s.manager.itemEnd(e),c}).catch(function(c){r&&r(c),Kh.set(l,c),xi.remove(`image-bitmap:${e}`),s.manager.itemError(e),s.manager.itemEnd(e)});xi.add(`image-bitmap:${e}`,l),s.manager.itemStart(e)}}let Xl;class xp{static getContext(){return Xl===void 0&&(Xl=new(window.AudioContext||window.webkitAudioContext)),Xl}static setContext(e){Xl=e}}class G1 extends An{constructor(e){super(e)}load(e,t,n,r){const s=this,o=new wi(this.manager);o.setResponseType("arraybuffer"),o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(l){try{const c=l.slice(0);xp.getContext().decodeAudioData(c,function(h){t(h)}).catch(a)}catch(c){a(c)}},n,r);function a(l){r?r(l):console.error(l),s.manager.itemError(e)}}}const ug=new Ge,hg=new Ge,zr=new Ge;class W1{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Mt,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Mt,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,zr.copy(e.projectionMatrix);const r=t.eyeSep/2,s=r*t.near/t.focus,o=t.near*Math.tan(os*t.fov*.5)/t.zoom;let a,l;hg.elements[12]=-r,ug.elements[12]=r,a=-o*t.aspect+s,l=o*t.aspect+s,zr.elements[0]=2*t.near/(l-a),zr.elements[8]=(l+a)/(l-a),this.cameraL.projectionMatrix.copy(zr),a=-o*t.aspect-s,l=o*t.aspect-s,zr.elements[0]=2*t.near/(l-a),zr.elements[8]=(l+a)/(l-a),this.cameraR.projectionMatrix.copy(zr)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(hg),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(ug)}}class Ay extends Mt{constructor(e=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=e}}class Ju{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=performance.now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=performance.now();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}const kr=new O,Jh=new dn,X1=new O,Vr=new O,Hr=new O;class Y1 extends ht{constructor(){super(),this.type="AudioListener",this.context=xp.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Ju}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(kr,Jh,X1),Vr.set(0,0,-1).applyQuaternion(Jh),Hr.set(0,1,0).applyQuaternion(Jh),t.positionX){const n=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(kr.x,n),t.positionY.linearRampToValueAtTime(kr.y,n),t.positionZ.linearRampToValueAtTime(kr.z,n),t.forwardX.linearRampToValueAtTime(Vr.x,n),t.forwardY.linearRampToValueAtTime(Vr.y,n),t.forwardZ.linearRampToValueAtTime(Vr.z,n),t.upX.linearRampToValueAtTime(Hr.x,n),t.upY.linearRampToValueAtTime(Hr.y,n),t.upZ.linearRampToValueAtTime(Hr.z,n)}else t.setPosition(kr.x,kr.y,kr.z),t.setOrientation(Vr.x,Vr.y,Vr.z,Hr.x,Hr.y,Hr.z)}}class Cy extends ht{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(e=0){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(this.context.currentTime+e),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){return this.detune=e,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1,this._progress=0}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}copy(e,t){return super.copy(e,t),e.sourceType!=="buffer"?(console.warn("THREE.Audio: Audio source type cannot be copied."),this):(this.autoplay=e.autoplay,this.buffer=e.buffer,this.detune=e.detune,this.loop=e.loop,this.loopStart=e.loopStart,this.loopEnd=e.loopEnd,this.offset=e.offset,this.duration=e.duration,this.playbackRate=e.playbackRate,this.hasPlaybackControl=e.hasPlaybackControl,this.sourceType=e.sourceType,this.filters=e.filters.slice(),this)}clone(e){return new this.constructor(this.listener).copy(this,e)}}const Gr=new O,fg=new dn,q1=new O,Wr=new O;class j1 extends Cy{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){return super.connect(),this.panner.connect(this.gain),this}disconnect(){return super.disconnect(),this.panner.disconnect(this.gain),this}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(Gr,fg,q1),Wr.set(0,0,1).applyQuaternion(fg);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(Gr.x,n),t.positionY.linearRampToValueAtTime(Gr.y,n),t.positionZ.linearRampToValueAtTime(Gr.z,n),t.orientationX.linearRampToValueAtTime(Wr.x,n),t.orientationY.linearRampToValueAtTime(Wr.y,n),t.orientationZ.linearRampToValueAtTime(Wr.z,n)}else t.setPosition(Gr.x,Gr.y,Gr.z),t.setOrientation(Wr.x,Wr.y,Wr.z)}}class $1{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class Ry{constructor(e,t,n){this.binding=e,this.valueSize=n;let r,s,o;switch(t){case"quaternion":r=this._slerp,s=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":r=this._select,s=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:r=this._lerp,s=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=r,this._mixBufferRegionAdditive=s,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,r=this.valueSize,s=e*r+r;let o=this.cumulativeWeight;if(o===0){for(let a=0;a!==r;++a)n[s+a]=n[a];o=t}else{o+=t;const a=t/o;this._mixBufferRegion(n,s,0,a,r)}this.cumulativeWeight=o}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,r=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,r,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,r=e*t+t,s=this.cumulativeWeight,o=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const l=t*this._origIndex;this._mixBufferRegion(n,r,l,1-s,t)}o>0&&this._mixBufferRegionAdditive(n,r,this._addIndex*t,1,t);for(let l=t,c=t+t;l!==c;++l)if(n[l]!==n[l+t]){a.setValue(n,r);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,r=n*this._origIndex;e.getValue(t,r);for(let s=n,o=r;s!==o;++s)t[s]=t[r+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,r,s){if(r>=.5)for(let o=0;o!==s;++o)e[t+o]=e[n+o]}_slerp(e,t,n,r){dn.slerpFlat(e,t,e,t,e,n,r)}_slerpAdditive(e,t,n,r,s){const o=this._workIndex*s;dn.multiplyQuaternionsFlat(e,o,e,t,e,n),dn.slerpFlat(e,t,e,t,e,o,r)}_lerp(e,t,n,r,s){const o=1-r;for(let a=0;a!==s;++a){const l=t+a;e[l]=e[l]*o+e[n+a]*r}}_lerpAdditive(e,t,n,r,s){for(let o=0;o!==s;++o){const a=t+o;e[a]=e[a]+e[n+o]*r}}}const bp="\\[\\]\\.:\\/",Z1=new RegExp("["+bp+"]","g"),Mp="[^"+bp+"]",K1="[^"+bp.replace("\\.","")+"]",J1=/((?:WC+[\/:])*)/.source.replace("WC",Mp),Q1=/(WCOD+)?/.source.replace("WCOD",K1),eT=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Mp),tT=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Mp),nT=new RegExp("^"+J1+Q1+eT+tT+"$"),iT=["material","materials","bones","map"];class rT{constructor(e,t,n){const r=n||st.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,r)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,r=this._bindings[n];r!==void 0&&r.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let r=this._targetGroup.nCachedObjects_,s=n.length;r!==s;++r)n[r].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class st{constructor(e,t,n){this.path=t,this.parsedPath=n||st.parseTrackName(t),this.node=st.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new st.Composite(e,t,n):new st(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(Z1,"")}static parseTrackName(e){const t=nT.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},r=n.nodeName&&n.nodeName.lastIndexOf(".");if(r!==void 0&&r!==-1){const s=n.nodeName.substring(r+1);iT.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,r),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(s){for(let o=0;o<s.length;o++){const a=s[o];if(a.name===t||a.uuid===t)return a;const l=n(a.children);if(l)return l}return null},r=n(e.children);if(r)return r}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let r=0,s=n.length;r!==s;++r)e[t++]=n[r]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let r=0,s=n.length;r!==s;++r)n[r]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let r=0,s=n.length;r!==s;++r)n[r]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let r=0,s=n.length;r!==s;++r)n[r]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,r=t.propertyName;let s=t.propertyIndex;if(e||(e=st.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let c=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let u=0;u<e.length;u++)if(e[u].name===c){c=u;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(c!==void 0){if(e[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[c]}}const o=e[r];if(o===void 0){const c=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+r+" but it wasn't found.",e);return}let a=this.Versioning.None;this.targetObject=e,e.isMaterial===!0?a=this.Versioning.NeedsUpdate:e.isObject3D===!0&&(a=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(s!==void 0){if(r==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}l=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=s}else o.fromArray!==void 0&&o.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(l=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=r;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}st.Composite=rT;st.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};st.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};st.prototype.GetterByBindingType=[st.prototype._getValue_direct,st.prototype._getValue_array,st.prototype._getValue_arrayElement,st.prototype._getValue_toArray];st.prototype.SetterByBindingTypeAndVersioning=[[st.prototype._setValue_direct,st.prototype._setValue_direct_setNeedsUpdate,st.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[st.prototype._setValue_array,st.prototype._setValue_array_setNeedsUpdate,st.prototype._setValue_array_setMatrixWorldNeedsUpdate],[st.prototype._setValue_arrayElement,st.prototype._setValue_arrayElement_setNeedsUpdate,st.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[st.prototype._setValue_fromArray,st.prototype._setValue_fromArray_setNeedsUpdate,st.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class sT{constructor(){this.isAnimationObjectGroup=!0,this.uuid=Gn(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,r=arguments.length;n!==r;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,r=this._parsedPaths,s=this._bindings,o=s.length;let a,l=e.length,c=this.nCachedObjects_;for(let u=0,h=arguments.length;u!==h;++u){const f=arguments[u],d=f.uuid;let p=t[d];if(p===void 0){p=l++,t[d]=p,e.push(f);for(let y=0,m=o;y!==m;++y)s[y].push(new st(f,n[y],r[y]))}else if(p<c){a=e[p];const y=--c,m=e[y];t[m.uuid]=p,e[p]=m,t[d]=y,e[y]=f;for(let g=0,M=o;g!==M;++g){const x=s[g],b=x[y];let C=x[p];x[p]=b,C===void 0&&(C=new st(f,n[g],r[g])),x[y]=C}}else e[p]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=c}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,r=n.length;let s=this.nCachedObjects_;for(let o=0,a=arguments.length;o!==a;++o){const l=arguments[o],c=l.uuid,u=t[c];if(u!==void 0&&u>=s){const h=s++,f=e[h];t[f.uuid]=u,e[u]=f,t[c]=h,e[h]=l;for(let d=0,p=r;d!==p;++d){const y=n[d],m=y[h],g=y[u];y[u]=m,y[h]=g}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,r=n.length;let s=this.nCachedObjects_,o=e.length;for(let a=0,l=arguments.length;a!==l;++a){const c=arguments[a],u=c.uuid,h=t[u];if(h!==void 0)if(delete t[u],h<s){const f=--s,d=e[f],p=--o,y=e[p];t[d.uuid]=h,e[h]=d,t[y.uuid]=f,e[f]=y,e.pop();for(let m=0,g=r;m!==g;++m){const M=n[m],x=M[f],b=M[p];M[h]=x,M[f]=b,M.pop()}}else{const f=--o,d=e[f];f>0&&(t[d.uuid]=h),e[h]=d,e.pop();for(let p=0,y=r;p!==y;++p){const m=n[p];m[h]=m[f],m.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const n=this._bindingsIndicesByPath;let r=n[e];const s=this._bindings;if(r!==void 0)return s[r];const o=this._paths,a=this._parsedPaths,l=this._objects,c=l.length,u=this.nCachedObjects_,h=new Array(c);r=s.length,n[e]=r,o.push(e),a.push(t),s.push(h);for(let f=u,d=l.length;f!==d;++f){const p=l[f];h[f]=new st(p,e,t)}return h}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const r=this._paths,s=this._parsedPaths,o=this._bindings,a=o.length-1,l=o[a],c=e[a];t[c]=n,o[n]=l,o.pop(),s[n]=s[a],s.pop(),r[n]=r[a],r.pop()}}}class Iy{constructor(e,t,n=null,r=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=r;const s=t.tracks,o=s.length,a=new Array(o),l={endingStart:Qr,endingEnd:Qr};for(let c=0;c!==o;++c){const u=s[c].createInterpolant(null);a[c]=u,u.settings=l}this._interpolantSettings=l,this._interpolants=a,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=__,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n=!1){if(e.fadeOut(t),this.fadeIn(t),n===!0){const r=this._clip.duration,s=e._clip.duration,o=s/r,a=r/s;e.warp(1,o,t),this.warp(a,1,t)}return this}crossFadeTo(e,t,n=!1){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const r=this._mixer,s=r.time,o=this.timeScale;let a=this._timeScaleInterpolant;a===null&&(a=r._lendControlInterpolant(),this._timeScaleInterpolant=a);const l=a.parameterPositions,c=a.sampleValues;return l[0]=s,l[1]=s+n,c[0]=e/o,c[1]=t/o,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,r){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const l=(e-s)*n;l<0||n===0?t=0:(this._startTime=null,t=n*l)}t*=this._updateTimeScale(e);const o=this._updateTime(t),a=this._updateWeight(e);if(a>0){const l=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case Zd:for(let u=0,h=l.length;u!==h;++u)l[u].evaluate(o),c[u].accumulateAdditive(a);break;case Lu:default:for(let u=0,h=l.length;u!==h;++u)l[u].evaluate(o),c[u].accumulate(r,a)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const r=n.evaluate(e)[0];t*=r,e>n.parameterPositions[1]&&(this.stopFading(),r===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const r=n.evaluate(e)[0];t*=r,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let r=this.time+e,s=this._loopCount;const o=n===y_;if(e===0)return s===-1?r:o&&(s&1)===1?t-r:r;if(n===v_){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(r>=t)r=t;else if(r<0)r=0;else{this.time=r;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),r>=t||r<0){const a=Math.floor(r/t);r-=t*a,s+=Math.abs(a);const l=this.repetitions-s;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=e>0?t:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===1){const c=e<0;this._setEndings(c,!c,o)}else this._setEndings(!1,!1,o);this._loopCount=s,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=r;if(o&&(s&1)===1)return t-r}return r}_setEndings(e,t,n){const r=this._interpolantSettings;n?(r.endingStart=es,r.endingEnd=es):(e?r.endingStart=this.zeroSlopeAtStart?es:Qr:r.endingStart=Aa,t?r.endingEnd=this.zeroSlopeAtEnd?es:Qr:r.endingEnd=Aa)}_scheduleFading(e,t,n){const r=this._mixer,s=r.time;let o=this._weightInterpolant;o===null&&(o=r._lendControlInterpolant(),this._weightInterpolant=o);const a=o.parameterPositions,l=o.sampleValues;return a[0]=s,l[0]=t,a[1]=s+e,l[1]=n,this}}const oT=new Float32Array(1);class aT extends hi{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,r=e._clip.tracks,s=r.length,o=e._propertyBindings,a=e._interpolants,l=n.uuid,c=this._bindingsByRootAndName;let u=c[l];u===void 0&&(u={},c[l]=u);for(let h=0;h!==s;++h){const f=r[h],d=f.name;let p=u[d];if(p!==void 0)++p.referenceCount,o[h]=p;else{if(p=o[h],p!==void 0){p._cacheIndex===null&&(++p.referenceCount,this._addInactiveBinding(p,l,d));continue}const y=t&&t._propertyBindings[h].binding.parsedPath;p=new Ry(st.create(n,d,y),f.ValueTypeName,f.getValueSize()),++p.referenceCount,this._addInactiveBinding(p,l,d),o[h]=p}a[h].resultBuffer=p.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,r=e._clip.uuid,s=this._actionsByClip[r];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,r,n)}const t=e._propertyBindings;for(let n=0,r=t.length;n!==r;++n){const s=t[n];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,r=t.length;n!==r;++n){const s=t[n];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const r=this._actions,s=this._actionsByClip;let o=s[t];if(o===void 0)o={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=o;else{const a=o.knownActions;e._byClipCacheIndex=a.length,a.push(e)}e._cacheIndex=r.length,r.push(e),o.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],r=e._cacheIndex;n._cacheIndex=r,t[r]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,o=this._actionsByClip,a=o[s],l=a.knownActions,c=l[l.length-1],u=e._byClipCacheIndex;c._byClipCacheIndex=u,l[u]=c,l.pop(),e._byClipCacheIndex=null;const h=a.actionByRoot,f=(e._localRoot||this._root).uuid;delete h[f],l.length===0&&delete o[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,r=t.length;n!==r;++n){const s=t[n];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,r=this._nActiveActions++,s=t[r];e._cacheIndex=r,t[r]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,r=--this._nActiveActions,s=t[r];e._cacheIndex=r,t[r]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const r=this._bindingsByRootAndName,s=this._bindings;let o=r[t];o===void 0&&(o={},r[t]=o),o[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,r=n.rootNode.uuid,s=n.path,o=this._bindingsByRootAndName,a=o[r],l=t[t.length-1],c=e._cacheIndex;l._cacheIndex=c,t[c]=l,t.pop(),delete a[s],Object.keys(a).length===0&&delete o[r]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,r=this._nActiveBindings++,s=t[r];e._cacheIndex=r,t[r]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,r=--this._nActiveBindings,s=t[r];e._cacheIndex=r,t[r]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new gp(new Float32Array(2),new Float32Array(2),1,oT),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,r=--this._nActiveControlInterpolants,s=t[r];e.__cacheIndex=r,t[r]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const r=t||this._root,s=r.uuid;let o=typeof e=="string"?Fa.findByName(r,e):e;const a=o!==null?o.uuid:e,l=this._actionsByClip[a];let c=null;if(n===void 0&&(o!==null?n=o.blendMode:n=Lu),l!==void 0){const h=l.actionByRoot[s];if(h!==void 0&&h.blendMode===n)return h;c=l.knownActions[0],o===null&&(o=c._clip)}if(o===null)return null;const u=new Iy(this,o,t,n);return this._bindAction(u,c),this._addInactiveAction(u,a,s),u}existingAction(e,t){const n=t||this._root,r=n.uuid,s=typeof e=="string"?Fa.findByName(n,e):e,o=s?s.uuid:e,a=this._actionsByClip[o];return a!==void 0&&a.actionByRoot[r]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,r=this.time+=e,s=Math.sign(e),o=this._accuIndex^=1;for(let c=0;c!==n;++c)t[c]._update(r,e,s,o);const a=this._bindings,l=this._nActiveBindings;for(let c=0;c!==l;++c)a[c].apply(o);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,r=this._actionsByClip,s=r[n];if(s!==void 0){const o=s.knownActions;for(let a=0,l=o.length;a!==l;++a){const c=o[a];this._deactivateAction(c);const u=c._cacheIndex,h=t[t.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,h._cacheIndex=u,t[u]=h,t.pop(),this._removeInactiveBindingsForAction(c)}delete r[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const o in n){const a=n[o].actionByRoot,l=a[t];l!==void 0&&(this._deactivateAction(l),this._removeInactiveAction(l))}const r=this._bindingsByRootAndName,s=r[t];if(s!==void 0)for(const o in s){const a=s[o];a.restoreOriginalState(),this._removeInactiveBinding(a)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class lT extends Qd{constructor(e=1,t=1,n=1,r={}){super(e,t,r),this.isRenderTarget3D=!0,this.depth=n,this.texture=new Uu(null,e,t,n),this._setTextureOptions(r),this.texture.isRenderTargetTexture=!0}}class Qu{constructor(e){this.value=e}clone(){return new Qu(this.value.clone===void 0?this.value:this.value.clone())}}let cT=0;class uT extends hi{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:cT++}),this.name="",this.usage=Ra,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){this.dispatchEvent({type:"dispose"})}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,r=t.length;n<r;n++){const s=Array.isArray(t[n])?t[n]:[t[n]];for(let o=0;o<s.length;o++)this.uniforms.push(s[o].clone())}return this}clone(){return new this.constructor().copy(this)}}class hT extends $a{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class fT{constructor(e,t,n,r,s,o=!1){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=r,this.count=s,this.normalized=o,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}const dg=new Ge;class Py{constructor(e,t,n=0,r=1/0){this.ray=new bs(e,t),this.near=n,this.far=r,this.camera=null,this.layers=new Xa,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return dg.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(dg),this}intersectObject(e,t=!0,n=[]){return Jf(e,this,n,t),n.sort(pg),n}intersectObjects(e,t=!0,n=[]){for(let r=0,s=e.length;r<s;r++)Jf(e[r],this,n,t);return n.sort(pg),n}}function pg(i,e){return i.distance-e.distance}function Jf(i,e,t,n){let r=!0;if(i.layers.test(e.layers)&&i.raycast(e,t)===!1&&(r=!1),r===!0&&n===!0){const s=i.children;for(let o=0,a=s.length;o<a;o++)Jf(s[o],e,t,!0)}}class Qf{constructor(e=1,t=0,n=0){this.radius=e,this.phi=t,this.theta=n}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Je(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(Je(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class dT{constructor(e=1,t=0,n=0){this.radius=e,this.theta=t,this.y=n}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}class Sp{constructor(e,t,n,r){Sp.prototype.isMatrix2=!0,this.elements=[1,0,0,1],e!==void 0&&this.set(e,t,n,r)}identity(){return this.set(1,0,0,1),this}fromArray(e,t=0){for(let n=0;n<4;n++)this.elements[n]=e[n+t];return this}set(e,t,n,r){const s=this.elements;return s[0]=e,s[2]=t,s[1]=n,s[3]=r,this}}const mg=new de;class Ly{constructor(e=new de(1/0,1/0),t=new de(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=mg.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,mg).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const gg=new O,Yl=new O;class Dy{constructor(e=new O,t=new O){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){gg.subVectors(e,this.start),Yl.subVectors(this.end,this.start);const n=Yl.dot(Yl);let s=Yl.dot(gg)/n;return t&&(s=Je(s,0,1)),s}closestPointToPoint(e,t,n){const r=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(r).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const vg=new O;class pT extends ht{constructor(e,t){super(),this.light=e,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new tt,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let o=0,a=1,l=32;o<l;o++,a++){const c=o/l*Math.PI*2,u=a/l*Math.PI*2;r.push(Math.cos(c),Math.sin(c),1,Math.cos(u),Math.sin(u),1)}n.setAttribute("position",new ze(r,3));const s=new En({fog:!1,toneMapped:!1});this.cone=new Ei(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),vg.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(vg),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const ar=new O,ql=new Ge,Qh=new Ge;class mT extends Ei{constructor(e){const t=Uy(e),n=new tt,r=[],s=[],o=new Ee(0,0,1),a=new Ee(0,1,0);for(let c=0;c<t.length;c++){const u=t[c];u.parent&&u.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),s.push(o.r,o.g,o.b),s.push(a.r,a.g,a.b))}n.setAttribute("position",new ze(r,3)),n.setAttribute("color",new ze(s,3));const l=new En({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,l),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,r=n.getAttribute("position");Qh.copy(this.root.matrixWorld).invert();for(let s=0,o=0;s<t.length;s++){const a=t[s];a.parent&&a.parent.isBone&&(ql.multiplyMatrices(Qh,a.matrixWorld),ar.setFromMatrixPosition(ql),r.setXYZ(o,ar.x,ar.y,ar.z),ql.multiplyMatrices(Qh,a.parent.matrixWorld),ar.setFromMatrixPosition(ql),r.setXYZ(o+1,ar.x,ar.y,ar.z),o+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function Uy(i){const e=[];i.isBone===!0&&e.push(i);for(let t=0;t<i.children.length;t++)e.push(...Uy(i.children[t]));return e}class gT extends St{constructor(e,t,n){const r=new el(t,4,2),s=new Ti({wireframe:!0,fog:!1,toneMapped:!1});super(r,s),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const vT=new O,_g=new Ee,yg=new Ee;class _T extends ht{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const r=new Qa(t);r.rotateY(Math.PI*.5),this.material=new Ti({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=r.getAttribute("position"),o=new Float32Array(s.count*3);r.setAttribute("color",new ft(o,3)),this.add(new St(r,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");_g.copy(this.light.color),yg.copy(this.light.groundColor);for(let n=0,r=t.count;n<r;n++){const s=n<r/2?_g:yg;t.setXYZ(n,s.r,s.g,s.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(vT.setFromMatrixPosition(this.light.matrixWorld).negate())}}class yT extends Ei{constructor(e=10,t=10,n=4473924,r=8947848){n=new Ee(n),r=new Ee(r);const s=t/2,o=e/t,a=e/2,l=[],c=[];for(let f=0,d=0,p=-a;f<=t;f++,p+=o){l.push(-a,0,p,a,0,p),l.push(p,0,-a,p,0,a);const y=f===s?n:r;y.toArray(c,d),d+=3,y.toArray(c,d),d+=3,y.toArray(c,d),d+=3,y.toArray(c,d),d+=3}const u=new tt;u.setAttribute("position",new ze(l,3)),u.setAttribute("color",new ze(c,3));const h=new En({vertexColors:!0,toneMapped:!1});super(u,h),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class xT extends Ei{constructor(e=10,t=16,n=8,r=64,s=4473924,o=8947848){s=new Ee(s),o=new Ee(o);const a=[],l=[];if(t>1)for(let h=0;h<t;h++){const f=h/t*(Math.PI*2),d=Math.sin(f)*e,p=Math.cos(f)*e;a.push(0,0,0),a.push(d,0,p);const y=h&1?s:o;l.push(y.r,y.g,y.b),l.push(y.r,y.g,y.b)}for(let h=0;h<n;h++){const f=h&1?s:o,d=e-e/n*h;for(let p=0;p<r;p++){let y=p/r*(Math.PI*2),m=Math.sin(y)*d,g=Math.cos(y)*d;a.push(m,0,g),l.push(f.r,f.g,f.b),y=(p+1)/r*(Math.PI*2),m=Math.sin(y)*d,g=Math.cos(y)*d,a.push(m,0,g),l.push(f.r,f.g,f.b)}}const c=new tt;c.setAttribute("position",new ze(a,3)),c.setAttribute("color",new ze(l,3));const u=new En({vertexColors:!0,toneMapped:!1});super(c,u),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const xg=new O,jl=new O,bg=new O;class bT extends ht{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let r=new tt;r.setAttribute("position",new ze([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new En({fog:!1,toneMapped:!1});this.lightPlane=new Mr(r,s),this.add(this.lightPlane),r=new tt,r.setAttribute("position",new ze([0,0,0,0,0,1],3)),this.targetLine=new Mr(r,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),xg.setFromMatrixPosition(this.light.matrixWorld),jl.setFromMatrixPosition(this.light.target.matrixWorld),bg.subVectors(jl,xg),this.lightPlane.lookAt(jl),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(jl),this.targetLine.scale.z=bg.length()}}const $l=new O,zt=new qa;class MT extends Ei{constructor(e){const t=new tt,n=new En({color:16777215,vertexColors:!0,toneMapped:!1}),r=[],s=[],o={};a("n1","n2"),a("n2","n4"),a("n4","n3"),a("n3","n1"),a("f1","f2"),a("f2","f4"),a("f4","f3"),a("f3","f1"),a("n1","f1"),a("n2","f2"),a("n3","f3"),a("n4","f4"),a("p","n1"),a("p","n2"),a("p","n3"),a("p","n4"),a("u1","u2"),a("u2","u3"),a("u3","u1"),a("c","t"),a("p","c"),a("cn1","cn2"),a("cn3","cn4"),a("cf1","cf2"),a("cf3","cf4");function a(p,y){l(p),l(y)}function l(p){r.push(0,0,0),s.push(0,0,0),o[p]===void 0&&(o[p]=[]),o[p].push(r.length/3-1)}t.setAttribute("position",new ze(r,3)),t.setAttribute("color",new ze(s,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update();const c=new Ee(16755200),u=new Ee(16711680),h=new Ee(43775),f=new Ee(16777215),d=new Ee(3355443);this.setColors(c,u,h,f,d)}setColors(e,t,n,r,s){const a=this.geometry.getAttribute("color");a.setXYZ(0,e.r,e.g,e.b),a.setXYZ(1,e.r,e.g,e.b),a.setXYZ(2,e.r,e.g,e.b),a.setXYZ(3,e.r,e.g,e.b),a.setXYZ(4,e.r,e.g,e.b),a.setXYZ(5,e.r,e.g,e.b),a.setXYZ(6,e.r,e.g,e.b),a.setXYZ(7,e.r,e.g,e.b),a.setXYZ(8,e.r,e.g,e.b),a.setXYZ(9,e.r,e.g,e.b),a.setXYZ(10,e.r,e.g,e.b),a.setXYZ(11,e.r,e.g,e.b),a.setXYZ(12,e.r,e.g,e.b),a.setXYZ(13,e.r,e.g,e.b),a.setXYZ(14,e.r,e.g,e.b),a.setXYZ(15,e.r,e.g,e.b),a.setXYZ(16,e.r,e.g,e.b),a.setXYZ(17,e.r,e.g,e.b),a.setXYZ(18,e.r,e.g,e.b),a.setXYZ(19,e.r,e.g,e.b),a.setXYZ(20,e.r,e.g,e.b),a.setXYZ(21,e.r,e.g,e.b),a.setXYZ(22,e.r,e.g,e.b),a.setXYZ(23,e.r,e.g,e.b),a.setXYZ(24,t.r,t.g,t.b),a.setXYZ(25,t.r,t.g,t.b),a.setXYZ(26,t.r,t.g,t.b),a.setXYZ(27,t.r,t.g,t.b),a.setXYZ(28,t.r,t.g,t.b),a.setXYZ(29,t.r,t.g,t.b),a.setXYZ(30,t.r,t.g,t.b),a.setXYZ(31,t.r,t.g,t.b),a.setXYZ(32,n.r,n.g,n.b),a.setXYZ(33,n.r,n.g,n.b),a.setXYZ(34,n.r,n.g,n.b),a.setXYZ(35,n.r,n.g,n.b),a.setXYZ(36,n.r,n.g,n.b),a.setXYZ(37,n.r,n.g,n.b),a.setXYZ(38,r.r,r.g,r.b),a.setXYZ(39,r.r,r.g,r.b),a.setXYZ(40,s.r,s.g,s.b),a.setXYZ(41,s.r,s.g,s.b),a.setXYZ(42,s.r,s.g,s.b),a.setXYZ(43,s.r,s.g,s.b),a.setXYZ(44,s.r,s.g,s.b),a.setXYZ(45,s.r,s.g,s.b),a.setXYZ(46,s.r,s.g,s.b),a.setXYZ(47,s.r,s.g,s.b),a.setXYZ(48,s.r,s.g,s.b),a.setXYZ(49,s.r,s.g,s.b),a.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,r=1;zt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse);const s=this.camera.coordinateSystem===jn?-1:0;Ht("c",t,e,zt,0,0,s),Ht("t",t,e,zt,0,0,1),Ht("n1",t,e,zt,-n,-r,s),Ht("n2",t,e,zt,n,-r,s),Ht("n3",t,e,zt,-n,r,s),Ht("n4",t,e,zt,n,r,s),Ht("f1",t,e,zt,-n,-r,1),Ht("f2",t,e,zt,n,-r,1),Ht("f3",t,e,zt,-n,r,1),Ht("f4",t,e,zt,n,r,1),Ht("u1",t,e,zt,n*.7,r*1.1,s),Ht("u2",t,e,zt,-n*.7,r*1.1,s),Ht("u3",t,e,zt,0,r*2,s),Ht("cf1",t,e,zt,-n,0,1),Ht("cf2",t,e,zt,n,0,1),Ht("cf3",t,e,zt,0,-r,1),Ht("cf4",t,e,zt,0,r,1),Ht("cn1",t,e,zt,-n,0,s),Ht("cn2",t,e,zt,n,0,s),Ht("cn3",t,e,zt,0,-r,s),Ht("cn4",t,e,zt,0,r,s),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function Ht(i,e,t,n,r,s,o){$l.set(r,s,o).unproject(n);const a=e[i];if(a!==void 0){const l=t.getAttribute("position");for(let c=0,u=a.length;c<u;c++)l.setXYZ(a[c],$l.x,$l.y,$l.z)}}const Zl=new Kt;class ST extends Ei{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(8*3),s=new tt;s.setIndex(new ft(n,1)),s.setAttribute("position",new ft(r,3)),super(s,new En({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(){if(this.object!==void 0&&Zl.setFromObject(this.object),Zl.isEmpty())return;const e=Zl.min,t=Zl.max,n=this.geometry.attributes.position,r=n.array;r[0]=t.x,r[1]=t.y,r[2]=t.z,r[3]=e.x,r[4]=t.y,r[5]=t.z,r[6]=e.x,r[7]=e.y,r[8]=t.z,r[9]=t.x,r[10]=e.y,r[11]=t.z,r[12]=t.x,r[13]=t.y,r[14]=e.z,r[15]=e.x,r[16]=t.y,r[17]=e.z,r[18]=e.x,r[19]=e.y,r[20]=e.z,r[21]=t.x,r[22]=e.y,r[23]=e.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class wT extends Ei{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new tt;s.setIndex(new ft(n,1)),s.setAttribute("position",new ze(r,3)),super(s,new En({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class TT extends Mr{constructor(e,t=1,n=16776960){const r=n,s=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],o=new tt;o.setAttribute("position",new ze(s,3)),o.computeBoundingSphere(),super(o,new En({color:r,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const a=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],l=new tt;l.setAttribute("position",new ze(a,3)),l.computeBoundingSphere(),this.add(new St(l,new Ti({color:r,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const Mg=new O;let Kl,ef;class ET extends ht{constructor(e=new O(0,0,1),t=new O(0,0,0),n=1,r=16776960,s=n*.2,o=s*.2){super(),this.type="ArrowHelper",Kl===void 0&&(Kl=new tt,Kl.setAttribute("position",new ze([0,0,0,0,1,0],3)),ef=new Ka(.5,1,5,1),ef.translate(0,-.5,0)),this.position.copy(t),this.line=new Mr(Kl,new En({color:r,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new St(ef,new Ti({color:r,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,s,o)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{Mg.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(Mg,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class AT extends Ei{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],r=new tt;r.setAttribute("position",new ze(t,3)),r.setAttribute("color",new ze(n,3));const s=new En({vertexColors:!0,toneMapped:!1});super(r,s),this.type="AxesHelper"}setColors(e,t,n){const r=new Ee,s=this.geometry.attributes.color.array;return r.set(e),r.toArray(s,0),r.toArray(s,3),r.set(t),r.toArray(s,6),r.toArray(s,9),r.set(n),r.toArray(s,12),r.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Ny{constructor(){this.type="ShapePath",this.color=new Ee,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new lu,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,r){return this.currentPath.quadraticCurveTo(e,t,n,r),this}bezierCurveTo(e,t,n,r,s,o){return this.currentPath.bezierCurveTo(e,t,n,r,s,o),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(g){const M=[];for(let x=0,b=g.length;x<b;x++){const C=g[x],w=new ls;w.curves=C.curves,M.push(w)}return M}function n(g,M){const x=M.length;let b=!1;for(let C=x-1,w=0;w<x;C=w++){let T=M[C],S=M[w],_=S.x-T.x,v=S.y-T.y;if(Math.abs(v)>Number.EPSILON){if(v<0&&(T=M[w],_=-_,S=M[C],v=-v),g.y<T.y||g.y>S.y)continue;if(g.y===T.y){if(g.x===T.x)return!0}else{const A=v*(g.x-T.x)-_*(g.y-T.y);if(A===0)return!0;if(A<0)continue;b=!b}}else{if(g.y!==T.y)continue;if(S.x<=g.x&&g.x<=T.x||T.x<=g.x&&g.x<=S.x)return!0}}return b}const r=ri.isClockWise,s=this.subPaths;if(s.length===0)return[];let o,a,l;const c=[];if(s.length===1)return a=s[0],l=new ls,l.curves=a.curves,c.push(l),c;let u=!r(s[0].getPoints());u=e?!u:u;const h=[],f=[];let d=[],p=0,y;f[p]=void 0,d[p]=[];for(let g=0,M=s.length;g<M;g++)a=s[g],y=a.getPoints(),o=r(y),o=e?!o:o,o?(!u&&f[p]&&p++,f[p]={s:new ls,p:y},f[p].s.curves=a.curves,u&&p++,d[p]=[]):d[p].push({h:a,p:y[0]});if(!f[0])return t(s);if(f.length>1){let g=!1,M=0;for(let x=0,b=f.length;x<b;x++)h[x]=[];for(let x=0,b=f.length;x<b;x++){const C=d[x];for(let w=0;w<C.length;w++){const T=C[w];let S=!0;for(let _=0;_<f.length;_++)n(T.p,f[_].p)&&(x!==_&&M++,S?(S=!1,h[_].push(T)):g=!0);S&&h[x].push(T)}}M>0&&g===!1&&(d=h)}let m;for(let g=0,M=f.length;g<M;g++){l=f[g].s,c.push(l),m=d[g];for(let x=0,b=m.length;x<b;x++)l.holes.push(m[x].h)}return c}}class CT extends hi{constructor(e,t=null){super(),this.object=e,this.domElement=t,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(e){if(e===void 0){console.warn("THREE.Controls: connect() now requires an element.");return}this.domElement!==null&&this.disconnect(),this.domElement=e}disconnect(){}dispose(){}update(){}}function RT(i,e){const t=i.image&&i.image.width?i.image.width/i.image.height:1;return t>e?(i.repeat.x=1,i.repeat.y=t/e,i.offset.x=0,i.offset.y=(1-i.repeat.y)/2):(i.repeat.x=e/t,i.repeat.y=1,i.offset.x=(1-i.repeat.x)/2,i.offset.y=0),i}function IT(i,e){const t=i.image&&i.image.width?i.image.width/i.image.height:1;return t>e?(i.repeat.x=e/t,i.repeat.y=1,i.offset.x=(1-i.repeat.x)/2,i.offset.y=0):(i.repeat.x=1,i.repeat.y=t/e,i.offset.x=0,i.offset.y=(1-i.repeat.y)/2),i}function PT(i){return i.repeat.x=1,i.repeat.y=1,i.offset.x=0,i.offset.y=0,i}function ed(i,e,t,n){const r=LT(n);switch(t){case Yd:return i*e;case Ru:return i*e/r.components*r.byteLength;case Wa:return i*e/r.components*r.byteLength;case jd:return i*e*2/r.components*r.byteLength;case Iu:return i*e*2/r.components*r.byteLength;case qd:return i*e*3/r.components*r.byteLength;case Zt:return i*e*4/r.components*r.byteLength;case Pu:return i*e*4/r.components*r.byteLength;case sa:case oa:return Math.floor((i+3)/4)*Math.floor((e+3)/4)*8;case aa:case la:return Math.floor((i+3)/4)*Math.floor((e+3)/4)*16;case Uc:case Oc:return Math.max(i,16)*Math.max(e,8)/4;case Dc:case Nc:return Math.max(i,8)*Math.max(e,8)/2;case Fc:case Bc:return Math.floor((i+3)/4)*Math.floor((e+3)/4)*8;case zc:return Math.floor((i+3)/4)*Math.floor((e+3)/4)*16;case kc:return Math.floor((i+3)/4)*Math.floor((e+3)/4)*16;case Vc:return Math.floor((i+4)/5)*Math.floor((e+3)/4)*16;case Hc:return Math.floor((i+4)/5)*Math.floor((e+4)/5)*16;case Gc:return Math.floor((i+5)/6)*Math.floor((e+4)/5)*16;case Wc:return Math.floor((i+5)/6)*Math.floor((e+5)/6)*16;case Xc:return Math.floor((i+7)/8)*Math.floor((e+4)/5)*16;case Yc:return Math.floor((i+7)/8)*Math.floor((e+5)/6)*16;case qc:return Math.floor((i+7)/8)*Math.floor((e+7)/8)*16;case jc:return Math.floor((i+9)/10)*Math.floor((e+4)/5)*16;case $c:return Math.floor((i+9)/10)*Math.floor((e+5)/6)*16;case Zc:return Math.floor((i+9)/10)*Math.floor((e+7)/8)*16;case Kc:return Math.floor((i+9)/10)*Math.floor((e+9)/10)*16;case Jc:return Math.floor((i+11)/12)*Math.floor((e+9)/10)*16;case Qc:return Math.floor((i+11)/12)*Math.floor((e+11)/12)*16;case ca:case eu:case tu:return Math.ceil(i/4)*Math.ceil(e/4)*16;case $d:case nu:return Math.ceil(i/4)*Math.ceil(e/4)*8;case iu:case ru:return Math.ceil(i/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${t} format.`)}function LT(i){switch(i){case ci:case Gd:return{byteLength:1,components:1};case po:case Wd:case xs:return{byteLength:2,components:1};case Au:case Cu:return{byteLength:2,components:4};case $i:case Eu:case On:return{byteLength:4,components:1};case Xd:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${i}.`)}class DT{static contain(e,t){return RT(e,t)}static cover(e,t){return IT(e,t)}static fill(e){return PT(e)}static getByteLength(e,t,n,r){return ed(e,t,n,r)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:To}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=To);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function Oy(){let i=null,e=!1,t=null,n=null;function r(s,o){t(s,o),n=i.requestAnimationFrame(r)}return{start:function(){e!==!0&&t!==null&&(n=i.requestAnimationFrame(r),e=!0)},stop:function(){i.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){i=s}}}function UT(i){const e=new WeakMap;function t(a,l){const c=a.array,u=a.usage,h=c.byteLength,f=i.createBuffer();i.bindBuffer(l,f),i.bufferData(l,c,u),a.onUploadCallback();let d;if(c instanceof Float32Array)d=i.FLOAT;else if(typeof Float16Array<"u"&&c instanceof Float16Array)d=i.HALF_FLOAT;else if(c instanceof Uint16Array)a.isFloat16BufferAttribute?d=i.HALF_FLOAT:d=i.UNSIGNED_SHORT;else if(c instanceof Int16Array)d=i.SHORT;else if(c instanceof Uint32Array)d=i.UNSIGNED_INT;else if(c instanceof Int32Array)d=i.INT;else if(c instanceof Int8Array)d=i.BYTE;else if(c instanceof Uint8Array)d=i.UNSIGNED_BYTE;else if(c instanceof Uint8ClampedArray)d=i.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+c);return{buffer:f,type:d,bytesPerElement:c.BYTES_PER_ELEMENT,version:a.version,size:h}}function n(a,l,c){const u=l.array,h=l.updateRanges;if(i.bindBuffer(c,a),h.length===0)i.bufferSubData(c,0,u);else{h.sort((d,p)=>d.start-p.start);let f=0;for(let d=1;d<h.length;d++){const p=h[f],y=h[d];y.start<=p.start+p.count+1?p.count=Math.max(p.count,y.start+y.count-p.start):(++f,h[f]=y)}h.length=f+1;for(let d=0,p=h.length;d<p;d++){const y=h[d];i.bufferSubData(c,y.start*u.BYTES_PER_ELEMENT,u,y.start,y.count)}l.clearUpdateRanges()}l.onUploadCallback()}function r(a){return a.isInterleavedBufferAttribute&&(a=a.data),e.get(a)}function s(a){a.isInterleavedBufferAttribute&&(a=a.data);const l=e.get(a);l&&(i.deleteBuffer(l.buffer),e.delete(a))}function o(a,l){if(a.isInterleavedBufferAttribute&&(a=a.data),a.isGLBufferAttribute){const u=e.get(a);(!u||u.version<a.version)&&e.set(a,{buffer:a.buffer,type:a.type,bytesPerElement:a.elementSize,version:a.version});return}const c=e.get(a);if(c===void 0)e.set(a,t(a,l));else if(c.version<a.version){if(c.size!==a.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(c.buffer,a,l),c.version=a.version}}return{get:r,remove:s,update:o}}var NT=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,OT=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,FT=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,BT=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,zT=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,kT=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,VT=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,HT=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,GT=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,WT=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,XT=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,YT=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,qT=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,jT=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,$T=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,ZT=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,KT=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,JT=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,QT=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,eE=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,tE=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,nE=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,iE=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,rE=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,sE=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,oE=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,aE=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,lE=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,cE=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,uE=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,hE="gl_FragColor = linearToOutputTexel( gl_FragColor );",fE=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,dE=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,pE=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,mE=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,gE=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,vE=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,_E=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,yE=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,xE=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,bE=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,ME=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,SE=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,wE=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,TE=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,EE=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,AE=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,CE=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,RE=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,IE=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,PE=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,LE=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,DE=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,UE=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,NE=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,OE=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,FE=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,BE=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,zE=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,kE=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,VE=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,HE=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,GE=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,WE=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,XE=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,YE=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,qE=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,jE=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,$E=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,ZE=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,KE=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,JE=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,QE=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,eA=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,tA=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,nA=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,iA=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,rA=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,sA=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,oA=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,aA=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,lA=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,cA=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,uA=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,hA=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,fA=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,dA=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,pA=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,mA=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,gA=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,vA=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,_A=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,yA=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,xA=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,bA=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,MA=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,SA=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,wA=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,TA=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,EA=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,AA=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,CA=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,RA=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,IA=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,PA=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,LA=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,DA=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const UA=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,NA=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,OA=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,FA=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,BA=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,zA=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,kA=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,VA=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,HA=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,GA=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,WA=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,XA=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,YA=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,qA=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,jA=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,$A=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,ZA=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,KA=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,JA=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,QA=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,eC=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,tC=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,nC=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,iC=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,rC=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,sC=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,oC=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,aC=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,lC=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,cC=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,uC=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,hC=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,fC=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,dC=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,it={alphahash_fragment:NT,alphahash_pars_fragment:OT,alphamap_fragment:FT,alphamap_pars_fragment:BT,alphatest_fragment:zT,alphatest_pars_fragment:kT,aomap_fragment:VT,aomap_pars_fragment:HT,batching_pars_vertex:GT,batching_vertex:WT,begin_vertex:XT,beginnormal_vertex:YT,bsdfs:qT,iridescence_fragment:jT,bumpmap_pars_fragment:$T,clipping_planes_fragment:ZT,clipping_planes_pars_fragment:KT,clipping_planes_pars_vertex:JT,clipping_planes_vertex:QT,color_fragment:eE,color_pars_fragment:tE,color_pars_vertex:nE,color_vertex:iE,common:rE,cube_uv_reflection_fragment:sE,defaultnormal_vertex:oE,displacementmap_pars_vertex:aE,displacementmap_vertex:lE,emissivemap_fragment:cE,emissivemap_pars_fragment:uE,colorspace_fragment:hE,colorspace_pars_fragment:fE,envmap_fragment:dE,envmap_common_pars_fragment:pE,envmap_pars_fragment:mE,envmap_pars_vertex:gE,envmap_physical_pars_fragment:AE,envmap_vertex:vE,fog_vertex:_E,fog_pars_vertex:yE,fog_fragment:xE,fog_pars_fragment:bE,gradientmap_pars_fragment:ME,lightmap_pars_fragment:SE,lights_lambert_fragment:wE,lights_lambert_pars_fragment:TE,lights_pars_begin:EE,lights_toon_fragment:CE,lights_toon_pars_fragment:RE,lights_phong_fragment:IE,lights_phong_pars_fragment:PE,lights_physical_fragment:LE,lights_physical_pars_fragment:DE,lights_fragment_begin:UE,lights_fragment_maps:NE,lights_fragment_end:OE,logdepthbuf_fragment:FE,logdepthbuf_pars_fragment:BE,logdepthbuf_pars_vertex:zE,logdepthbuf_vertex:kE,map_fragment:VE,map_pars_fragment:HE,map_particle_fragment:GE,map_particle_pars_fragment:WE,metalnessmap_fragment:XE,metalnessmap_pars_fragment:YE,morphinstance_vertex:qE,morphcolor_vertex:jE,morphnormal_vertex:$E,morphtarget_pars_vertex:ZE,morphtarget_vertex:KE,normal_fragment_begin:JE,normal_fragment_maps:QE,normal_pars_fragment:eA,normal_pars_vertex:tA,normal_vertex:nA,normalmap_pars_fragment:iA,clearcoat_normal_fragment_begin:rA,clearcoat_normal_fragment_maps:sA,clearcoat_pars_fragment:oA,iridescence_pars_fragment:aA,opaque_fragment:lA,packing:cA,premultiplied_alpha_fragment:uA,project_vertex:hA,dithering_fragment:fA,dithering_pars_fragment:dA,roughnessmap_fragment:pA,roughnessmap_pars_fragment:mA,shadowmap_pars_fragment:gA,shadowmap_pars_vertex:vA,shadowmap_vertex:_A,shadowmask_pars_fragment:yA,skinbase_vertex:xA,skinning_pars_vertex:bA,skinning_vertex:MA,skinnormal_vertex:SA,specularmap_fragment:wA,specularmap_pars_fragment:TA,tonemapping_fragment:EA,tonemapping_pars_fragment:AA,transmission_fragment:CA,transmission_pars_fragment:RA,uv_pars_fragment:IA,uv_pars_vertex:PA,uv_vertex:LA,worldpos_vertex:DA,background_vert:UA,background_frag:NA,backgroundCube_vert:OA,backgroundCube_frag:FA,cube_vert:BA,cube_frag:zA,depth_vert:kA,depth_frag:VA,distanceRGBA_vert:HA,distanceRGBA_frag:GA,equirect_vert:WA,equirect_frag:XA,linedashed_vert:YA,linedashed_frag:qA,meshbasic_vert:jA,meshbasic_frag:$A,meshlambert_vert:ZA,meshlambert_frag:KA,meshmatcap_vert:JA,meshmatcap_frag:QA,meshnormal_vert:eC,meshnormal_frag:tC,meshphong_vert:nC,meshphong_frag:iC,meshphysical_vert:rC,meshphysical_frag:sC,meshtoon_vert:oC,meshtoon_frag:aC,points_vert:lC,points_frag:cC,shadow_vert:uC,shadow_frag:hC,sprite_vert:fC,sprite_frag:dC},Ie={common:{diffuse:{value:new Ee(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new et},alphaMap:{value:null},alphaMapTransform:{value:new et},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new et}},envmap:{envMap:{value:null},envMapRotation:{value:new et},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new et}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new et}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new et},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new et},normalScale:{value:new de(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new et},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new et}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new et}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new et}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ee(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ee(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new et},alphaTest:{value:0},uvTransform:{value:new et}},sprite:{diffuse:{value:new Ee(16777215)},opacity:{value:1},center:{value:new de(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new et},alphaMap:{value:null},alphaMapTransform:{value:new et},alphaTest:{value:0}}},ni={basic:{uniforms:xn([Ie.common,Ie.specularmap,Ie.envmap,Ie.aomap,Ie.lightmap,Ie.fog]),vertexShader:it.meshbasic_vert,fragmentShader:it.meshbasic_frag},lambert:{uniforms:xn([Ie.common,Ie.specularmap,Ie.envmap,Ie.aomap,Ie.lightmap,Ie.emissivemap,Ie.bumpmap,Ie.normalmap,Ie.displacementmap,Ie.fog,Ie.lights,{emissive:{value:new Ee(0)}}]),vertexShader:it.meshlambert_vert,fragmentShader:it.meshlambert_frag},phong:{uniforms:xn([Ie.common,Ie.specularmap,Ie.envmap,Ie.aomap,Ie.lightmap,Ie.emissivemap,Ie.bumpmap,Ie.normalmap,Ie.displacementmap,Ie.fog,Ie.lights,{emissive:{value:new Ee(0)},specular:{value:new Ee(1118481)},shininess:{value:30}}]),vertexShader:it.meshphong_vert,fragmentShader:it.meshphong_frag},standard:{uniforms:xn([Ie.common,Ie.envmap,Ie.aomap,Ie.lightmap,Ie.emissivemap,Ie.bumpmap,Ie.normalmap,Ie.displacementmap,Ie.roughnessmap,Ie.metalnessmap,Ie.fog,Ie.lights,{emissive:{value:new Ee(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:it.meshphysical_vert,fragmentShader:it.meshphysical_frag},toon:{uniforms:xn([Ie.common,Ie.aomap,Ie.lightmap,Ie.emissivemap,Ie.bumpmap,Ie.normalmap,Ie.displacementmap,Ie.gradientmap,Ie.fog,Ie.lights,{emissive:{value:new Ee(0)}}]),vertexShader:it.meshtoon_vert,fragmentShader:it.meshtoon_frag},matcap:{uniforms:xn([Ie.common,Ie.bumpmap,Ie.normalmap,Ie.displacementmap,Ie.fog,{matcap:{value:null}}]),vertexShader:it.meshmatcap_vert,fragmentShader:it.meshmatcap_frag},points:{uniforms:xn([Ie.points,Ie.fog]),vertexShader:it.points_vert,fragmentShader:it.points_frag},dashed:{uniforms:xn([Ie.common,Ie.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:it.linedashed_vert,fragmentShader:it.linedashed_frag},depth:{uniforms:xn([Ie.common,Ie.displacementmap]),vertexShader:it.depth_vert,fragmentShader:it.depth_frag},normal:{uniforms:xn([Ie.common,Ie.bumpmap,Ie.normalmap,Ie.displacementmap,{opacity:{value:1}}]),vertexShader:it.meshnormal_vert,fragmentShader:it.meshnormal_frag},sprite:{uniforms:xn([Ie.sprite,Ie.fog]),vertexShader:it.sprite_vert,fragmentShader:it.sprite_frag},background:{uniforms:{uvTransform:{value:new et},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:it.background_vert,fragmentShader:it.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new et}},vertexShader:it.backgroundCube_vert,fragmentShader:it.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:it.cube_vert,fragmentShader:it.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:it.equirect_vert,fragmentShader:it.equirect_frag},distanceRGBA:{uniforms:xn([Ie.common,Ie.displacementmap,{referencePosition:{value:new O},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:it.distanceRGBA_vert,fragmentShader:it.distanceRGBA_frag},shadow:{uniforms:xn([Ie.lights,Ie.fog,{color:{value:new Ee(0)},opacity:{value:1}}]),vertexShader:it.shadow_vert,fragmentShader:it.shadow_frag}};ni.physical={uniforms:xn([ni.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new et},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new et},clearcoatNormalScale:{value:new de(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new et},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new et},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new et},sheen:{value:0},sheenColor:{value:new Ee(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new et},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new et},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new et},transmissionSamplerSize:{value:new de},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new et},attenuationDistance:{value:0},attenuationColor:{value:new Ee(0)},specularColor:{value:new Ee(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new et},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new et},anisotropyVector:{value:new de},anisotropyMap:{value:null},anisotropyMapTransform:{value:new et}}]),vertexShader:it.meshphysical_vert,fragmentShader:it.meshphysical_frag};const Jl={r:0,b:0,g:0},Xr=new Tn,pC=new Ge;function mC(i,e,t,n,r,s,o){const a=new Ee(0);let l=s===!0?0:1,c,u,h=null,f=0,d=null;function p(x){let b=x.isScene===!0?x.background:null;return b&&b.isTexture&&(b=(x.backgroundBlurriness>0?t:e).get(b)),b}function y(x){let b=!1;const C=p(x);C===null?g(a,l):C&&C.isColor&&(g(C,1),b=!0);const w=i.xr.getEnvironmentBlendMode();w==="additive"?n.buffers.color.setClear(0,0,0,1,o):w==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,o),(i.autoClear||b)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),i.clear(i.autoClearColor,i.autoClearDepth,i.autoClearStencil))}function m(x,b){const C=p(b);C&&(C.isCubeTexture||C.mapping===Eo)?(u===void 0&&(u=new St(new Tr(1,1,1),new mn({name:"BackgroundCubeMaterial",uniforms:xo(ni.backgroundCube.uniforms),vertexShader:ni.backgroundCube.vertexShader,fragmentShader:ni.backgroundCube.fragmentShader,side:fn,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(w,T,S){this.matrixWorld.copyPosition(S.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(u)),Xr.copy(b.backgroundRotation),Xr.x*=-1,Xr.y*=-1,Xr.z*=-1,C.isCubeTexture&&C.isRenderTargetTexture===!1&&(Xr.y*=-1,Xr.z*=-1),u.material.uniforms.envMap.value=C,u.material.uniforms.flipEnvMap.value=C.isCubeTexture&&C.isRenderTargetTexture===!1?-1:1,u.material.uniforms.backgroundBlurriness.value=b.backgroundBlurriness,u.material.uniforms.backgroundIntensity.value=b.backgroundIntensity,u.material.uniforms.backgroundRotation.value.setFromMatrix4(pC.makeRotationFromEuler(Xr)),u.material.toneMapped=ct.getTransfer(C.colorSpace)!==vt,(h!==C||f!==C.version||d!==i.toneMapping)&&(u.material.needsUpdate=!0,h=C,f=C.version,d=i.toneMapping),u.layers.enableAll(),x.unshift(u,u.geometry,u.material,0,0,null)):C&&C.isTexture&&(c===void 0&&(c=new St(new Ar(2,2),new mn({name:"BackgroundMaterial",uniforms:xo(ni.background.uniforms),vertexShader:ni.background.vertexShader,fragmentShader:ni.background.fragmentShader,side:qi,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(c)),c.material.uniforms.t2D.value=C,c.material.uniforms.backgroundIntensity.value=b.backgroundIntensity,c.material.toneMapped=ct.getTransfer(C.colorSpace)!==vt,C.matrixAutoUpdate===!0&&C.updateMatrix(),c.material.uniforms.uvTransform.value.copy(C.matrix),(h!==C||f!==C.version||d!==i.toneMapping)&&(c.material.needsUpdate=!0,h=C,f=C.version,d=i.toneMapping),c.layers.enableAll(),x.unshift(c,c.geometry,c.material,0,0,null))}function g(x,b){x.getRGB(Jl,U_(i)),n.buffers.color.setClear(Jl.r,Jl.g,Jl.b,b,o)}function M(){u!==void 0&&(u.geometry.dispose(),u.material.dispose(),u=void 0),c!==void 0&&(c.geometry.dispose(),c.material.dispose(),c=void 0)}return{getClearColor:function(){return a},setClearColor:function(x,b=1){a.set(x),l=b,g(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(x){l=x,g(a,l)},render:y,addToRenderList:m,dispose:M}}function gC(i,e){const t=i.getParameter(i.MAX_VERTEX_ATTRIBS),n={},r=f(null);let s=r,o=!1;function a(v,A,D,B,X){let Y=!1;const z=h(B,D,A);s!==z&&(s=z,c(s.object)),Y=d(v,B,D,X),Y&&p(v,B,D,X),X!==null&&e.update(X,i.ELEMENT_ARRAY_BUFFER),(Y||o)&&(o=!1,b(v,A,D,B),X!==null&&i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,e.get(X).buffer))}function l(){return i.createVertexArray()}function c(v){return i.bindVertexArray(v)}function u(v){return i.deleteVertexArray(v)}function h(v,A,D){const B=D.wireframe===!0;let X=n[v.id];X===void 0&&(X={},n[v.id]=X);let Y=X[A.id];Y===void 0&&(Y={},X[A.id]=Y);let z=Y[B];return z===void 0&&(z=f(l()),Y[B]=z),z}function f(v){const A=[],D=[],B=[];for(let X=0;X<t;X++)A[X]=0,D[X]=0,B[X]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:A,enabledAttributes:D,attributeDivisors:B,object:v,attributes:{},index:null}}function d(v,A,D,B){const X=s.attributes,Y=A.attributes;let z=0;const Q=D.getAttributes();for(const K in Q)if(Q[K].location>=0){const ge=X[K];let oe=Y[K];if(oe===void 0&&(K==="instanceMatrix"&&v.instanceMatrix&&(oe=v.instanceMatrix),K==="instanceColor"&&v.instanceColor&&(oe=v.instanceColor)),ge===void 0||ge.attribute!==oe||oe&&ge.data!==oe.data)return!0;z++}return s.attributesNum!==z||s.index!==B}function p(v,A,D,B){const X={},Y=A.attributes;let z=0;const Q=D.getAttributes();for(const K in Q)if(Q[K].location>=0){let ge=Y[K];ge===void 0&&(K==="instanceMatrix"&&v.instanceMatrix&&(ge=v.instanceMatrix),K==="instanceColor"&&v.instanceColor&&(ge=v.instanceColor));const oe={};oe.attribute=ge,ge&&ge.data&&(oe.data=ge.data),X[K]=oe,z++}s.attributes=X,s.attributesNum=z,s.index=B}function y(){const v=s.newAttributes;for(let A=0,D=v.length;A<D;A++)v[A]=0}function m(v){g(v,0)}function g(v,A){const D=s.newAttributes,B=s.enabledAttributes,X=s.attributeDivisors;D[v]=1,B[v]===0&&(i.enableVertexAttribArray(v),B[v]=1),X[v]!==A&&(i.vertexAttribDivisor(v,A),X[v]=A)}function M(){const v=s.newAttributes,A=s.enabledAttributes;for(let D=0,B=A.length;D<B;D++)A[D]!==v[D]&&(i.disableVertexAttribArray(D),A[D]=0)}function x(v,A,D,B,X,Y,z){z===!0?i.vertexAttribIPointer(v,A,D,X,Y):i.vertexAttribPointer(v,A,D,B,X,Y)}function b(v,A,D,B){y();const X=B.attributes,Y=D.getAttributes(),z=A.defaultAttributeValues;for(const Q in Y){const K=Y[Q];if(K.location>=0){let fe=X[Q];if(fe===void 0&&(Q==="instanceMatrix"&&v.instanceMatrix&&(fe=v.instanceMatrix),Q==="instanceColor"&&v.instanceColor&&(fe=v.instanceColor)),fe!==void 0){const ge=fe.normalized,oe=fe.itemSize,Te=e.get(fe);if(Te===void 0)continue;const ke=Te.buffer,ae=Te.type,ve=Te.bytesPerElement,Re=ae===i.INT||ae===i.UNSIGNED_INT||fe.gpuType===Eu;if(fe.isInterleavedBufferAttribute){const Se=fe.data,le=Se.stride,I=fe.offset;if(Se.isInstancedInterleavedBuffer){for(let F=0;F<K.locationSize;F++)g(K.location+F,Se.meshPerAttribute);v.isInstancedMesh!==!0&&B._maxInstanceCount===void 0&&(B._maxInstanceCount=Se.meshPerAttribute*Se.count)}else for(let F=0;F<K.locationSize;F++)m(K.location+F);i.bindBuffer(i.ARRAY_BUFFER,ke);for(let F=0;F<K.locationSize;F++)x(K.location+F,oe/K.locationSize,ae,ge,le*ve,(I+oe/K.locationSize*F)*ve,Re)}else{if(fe.isInstancedBufferAttribute){for(let Se=0;Se<K.locationSize;Se++)g(K.location+Se,fe.meshPerAttribute);v.isInstancedMesh!==!0&&B._maxInstanceCount===void 0&&(B._maxInstanceCount=fe.meshPerAttribute*fe.count)}else for(let Se=0;Se<K.locationSize;Se++)m(K.location+Se);i.bindBuffer(i.ARRAY_BUFFER,ke);for(let Se=0;Se<K.locationSize;Se++)x(K.location+Se,oe/K.locationSize,ae,ge,oe*ve,oe/K.locationSize*Se*ve,Re)}}else if(z!==void 0){const ge=z[Q];if(ge!==void 0)switch(ge.length){case 2:i.vertexAttrib2fv(K.location,ge);break;case 3:i.vertexAttrib3fv(K.location,ge);break;case 4:i.vertexAttrib4fv(K.location,ge);break;default:i.vertexAttrib1fv(K.location,ge)}}}}M()}function C(){S();for(const v in n){const A=n[v];for(const D in A){const B=A[D];for(const X in B)u(B[X].object),delete B[X];delete A[D]}delete n[v]}}function w(v){if(n[v.id]===void 0)return;const A=n[v.id];for(const D in A){const B=A[D];for(const X in B)u(B[X].object),delete B[X];delete A[D]}delete n[v.id]}function T(v){for(const A in n){const D=n[A];if(D[v.id]===void 0)continue;const B=D[v.id];for(const X in B)u(B[X].object),delete B[X];delete D[v.id]}}function S(){_(),o=!0,s!==r&&(s=r,c(s.object))}function _(){r.geometry=null,r.program=null,r.wireframe=!1}return{setup:a,reset:S,resetDefaultState:_,dispose:C,releaseStatesOfGeometry:w,releaseStatesOfProgram:T,initAttributes:y,enableAttribute:m,disableUnusedAttributes:M}}function vC(i,e,t){let n;function r(c){n=c}function s(c,u){i.drawArrays(n,c,u),t.update(u,n,1)}function o(c,u,h){h!==0&&(i.drawArraysInstanced(n,c,u,h),t.update(u,n,h))}function a(c,u,h){if(h===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,c,0,u,0,h);let d=0;for(let p=0;p<h;p++)d+=u[p];t.update(d,n,1)}function l(c,u,h,f){if(h===0)return;const d=e.get("WEBGL_multi_draw");if(d===null)for(let p=0;p<c.length;p++)o(c[p],u[p],f[p]);else{d.multiDrawArraysInstancedWEBGL(n,c,0,u,0,f,0,h);let p=0;for(let y=0;y<h;y++)p+=u[y]*f[y];t.update(p,n,1)}}this.setMode=r,this.render=s,this.renderInstances=o,this.renderMultiDraw=a,this.renderMultiDrawInstances=l}function _C(i,e,t,n){let r;function s(){if(r!==void 0)return r;if(e.has("EXT_texture_filter_anisotropic")===!0){const T=e.get("EXT_texture_filter_anisotropic");r=i.getParameter(T.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r}function o(T){return!(T!==Zt&&n.convert(T)!==i.getParameter(i.IMPLEMENTATION_COLOR_READ_FORMAT))}function a(T){const S=T===xs&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(T!==ci&&n.convert(T)!==i.getParameter(i.IMPLEMENTATION_COLOR_READ_TYPE)&&T!==On&&!S)}function l(T){if(T==="highp"){if(i.getShaderPrecisionFormat(i.VERTEX_SHADER,i.HIGH_FLOAT).precision>0&&i.getShaderPrecisionFormat(i.FRAGMENT_SHADER,i.HIGH_FLOAT).precision>0)return"highp";T="mediump"}return T==="mediump"&&i.getShaderPrecisionFormat(i.VERTEX_SHADER,i.MEDIUM_FLOAT).precision>0&&i.getShaderPrecisionFormat(i.FRAGMENT_SHADER,i.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let c=t.precision!==void 0?t.precision:"highp";const u=l(c);u!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",u,"instead."),c=u);const h=t.logarithmicDepthBuffer===!0,f=t.reverseDepthBuffer===!0&&e.has("EXT_clip_control"),d=i.getParameter(i.MAX_TEXTURE_IMAGE_UNITS),p=i.getParameter(i.MAX_VERTEX_TEXTURE_IMAGE_UNITS),y=i.getParameter(i.MAX_TEXTURE_SIZE),m=i.getParameter(i.MAX_CUBE_MAP_TEXTURE_SIZE),g=i.getParameter(i.MAX_VERTEX_ATTRIBS),M=i.getParameter(i.MAX_VERTEX_UNIFORM_VECTORS),x=i.getParameter(i.MAX_VARYING_VECTORS),b=i.getParameter(i.MAX_FRAGMENT_UNIFORM_VECTORS),C=p>0,w=i.getParameter(i.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:s,getMaxPrecision:l,textureFormatReadable:o,textureTypeReadable:a,precision:c,logarithmicDepthBuffer:h,reverseDepthBuffer:f,maxTextures:d,maxVertexTextures:p,maxTextureSize:y,maxCubemapSize:m,maxAttributes:g,maxVertexUniforms:M,maxVaryings:x,maxFragmentUniforms:b,vertexTextures:C,maxSamples:w}}function yC(i){const e=this;let t=null,n=0,r=!1,s=!1;const o=new yi,a=new et,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(h,f){const d=h.length!==0||f||n!==0||r;return r=f,n=h.length,d},this.beginShadows=function(){s=!0,u(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(h,f){t=u(h,f,0)},this.setState=function(h,f,d){const p=h.clippingPlanes,y=h.clipIntersection,m=h.clipShadows,g=i.get(h);if(!r||p===null||p.length===0||s&&!m)s?u(null):c();else{const M=s?0:n,x=M*4;let b=g.clippingState||null;l.value=b,b=u(p,f,x,d);for(let C=0;C!==x;++C)b[C]=t[C];g.clippingState=b,this.numIntersection=y?this.numPlanes:0,this.numPlanes+=M}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function u(h,f,d,p){const y=h!==null?h.length:0;let m=null;if(y!==0){if(m=l.value,p!==!0||m===null){const g=d+y*4,M=f.matrixWorldInverse;a.getNormalMatrix(M),(m===null||m.length<g)&&(m=new Float32Array(g));for(let x=0,b=d;x!==y;++x,b+=4)o.copy(h[x]).applyMatrix4(M,a),o.normal.toArray(m,b),m[b+3]=o.constant}l.value=m,l.needsUpdate=!0}return e.numPlanes=y,e.numIntersection=0,m}}function xC(i){let e=new WeakMap;function t(o,a){return a===wa?o.mapping=ji:a===Ta&&(o.mapping=br),o}function n(o){if(o&&o.isTexture){const a=o.mapping;if(a===wa||a===Ta)if(e.has(o)){const l=e.get(o).texture;return t(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=new O_(l.height);return c.fromEquirectangularTexture(i,o),e.set(o,c),o.addEventListener("dispose",r),t(c.texture,o.mapping)}else return null}}return o}function r(o){const a=o.target;a.removeEventListener("dispose",r);const l=e.get(a);l!==void 0&&(e.delete(a),l.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}const Js=4,Sg=[.125,.215,.35,.446,.526,.582],Kr=20,tf=new Gi,wg=new Ee;let nf=null,rf=0,sf=0,of=!1;const $r=(1+Math.sqrt(5))/2,Ws=1/$r,Tg=[new O(-$r,Ws,0),new O($r,Ws,0),new O(-Ws,0,$r),new O(Ws,0,$r),new O(0,$r,-Ws),new O(0,$r,Ws),new O(-1,1,-1),new O(1,1,-1),new O(-1,1,1),new O(1,1,1)],bC=new O;class td{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,r=100,s={}){const{size:o=256,position:a=bC}=s;nf=this._renderer.getRenderTarget(),rf=this._renderer.getActiveCubeFace(),sf=this._renderer.getActiveMipmapLevel(),of=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(o);const l=this._allocateTargets();return l.depthBuffer=!0,this._sceneToCubeUV(e,n,r,l,a),t>0&&this._blur(l,0,0,t),this._applyPMREM(l),this._cleanup(l),l}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Cg(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Ag(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(nf,rf,sf),this._renderer.xr.enabled=of,e.scissorTest=!1,Ql(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===ji||e.mapping===br?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),nf=this._renderer.getRenderTarget(),rf=this._renderer.getActiveCubeFace(),sf=this._renderer.getActiveMipmapLevel(),of=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:Yt,minFilter:Yt,generateMipmaps:!1,type:xs,format:Zt,colorSpace:ps,depthBuffer:!1},r=Eg(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Eg(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=MC(s)),this._blurMaterial=SC(s,e,t)}return r}_compileMaterial(e){const t=new St(this._lodPlanes[0],e);this._renderer.compile(t,tf)}_sceneToCubeUV(e,t,n,r,s){const l=new Mt(90,1,t,n),c=[1,-1,1,1,1,1],u=[1,1,1,-1,-1,-1],h=this._renderer,f=h.autoClear,d=h.toneMapping;h.getClearColor(wg),h.toneMapping=ai,h.autoClear=!1;const p=new Ti({name:"PMREM.Background",side:fn,depthWrite:!1,depthTest:!1}),y=new St(new Tr,p);let m=!1;const g=e.background;g?g.isColor&&(p.color.copy(g),e.background=null,m=!0):(p.color.copy(wg),m=!0);for(let M=0;M<6;M++){const x=M%3;x===0?(l.up.set(0,c[M],0),l.position.set(s.x,s.y,s.z),l.lookAt(s.x+u[M],s.y,s.z)):x===1?(l.up.set(0,0,c[M]),l.position.set(s.x,s.y,s.z),l.lookAt(s.x,s.y+u[M],s.z)):(l.up.set(0,c[M],0),l.position.set(s.x,s.y,s.z),l.lookAt(s.x,s.y,s.z+u[M]));const b=this._cubeSize;Ql(r,x*b,M>2?b:0,b,b),h.setRenderTarget(r),m&&h.render(y,l),h.render(e,l)}y.geometry.dispose(),y.material.dispose(),h.toneMapping=d,h.autoClear=f,e.background=g}_textureToCubeUV(e,t){const n=this._renderer,r=e.mapping===ji||e.mapping===br;r?(this._cubemapMaterial===null&&(this._cubemapMaterial=Cg()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Ag());const s=r?this._cubemapMaterial:this._equirectMaterial,o=new St(this._lodPlanes[0],s),a=s.uniforms;a.envMap.value=e;const l=this._cubeSize;Ql(t,0,0,3*l,2*l),n.setRenderTarget(t),n.render(o,tf)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;const r=this._lodPlanes.length;for(let s=1;s<r;s++){const o=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),a=Tg[(r-s-1)%Tg.length];this._blur(e,s-1,s,o,a)}t.autoClear=n}_blur(e,t,n,r,s){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,n,r,"latitudinal",s),this._halfBlur(o,e,n,n,r,"longitudinal",s)}_halfBlur(e,t,n,r,s,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,h=new St(this._lodPlanes[r],c),f=c.uniforms,d=this._sizeLods[n]-1,p=isFinite(s)?Math.PI/(2*d):2*Math.PI/(2*Kr-1),y=s/p,m=isFinite(s)?1+Math.floor(u*y):Kr;m>Kr&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${Kr}`);const g=[];let M=0;for(let T=0;T<Kr;++T){const S=T/y,_=Math.exp(-S*S/2);g.push(_),T===0?M+=_:T<m&&(M+=2*_)}for(let T=0;T<g.length;T++)g[T]=g[T]/M;f.envMap.value=e.texture,f.samples.value=m,f.weights.value=g,f.latitudinal.value=o==="latitudinal",a&&(f.poleAxis.value=a);const{_lodMax:x}=this;f.dTheta.value=p,f.mipInt.value=x-n;const b=this._sizeLods[r],C=3*b*(r>x-Js?r-x+Js:0),w=4*(this._cubeSize-b);Ql(t,C,w,3*b,2*b),l.setRenderTarget(t),l.render(h,tf)}}function MC(i){const e=[],t=[],n=[];let r=i;const s=i-Js+1+Sg.length;for(let o=0;o<s;o++){const a=Math.pow(2,r);t.push(a);let l=1/a;o>i-Js?l=Sg[o-i+Js-1]:o===0&&(l=0),n.push(l);const c=1/(a-2),u=-c,h=1+c,f=[u,u,h,u,h,h,u,u,h,h,u,h],d=6,p=6,y=3,m=2,g=1,M=new Float32Array(y*p*d),x=new Float32Array(m*p*d),b=new Float32Array(g*p*d);for(let w=0;w<d;w++){const T=w%3*2/3-1,S=w>2?0:-1,_=[T,S,0,T+2/3,S,0,T+2/3,S+1,0,T,S,0,T+2/3,S+1,0,T,S+1,0];M.set(_,y*p*w),x.set(f,m*p*w);const v=[w,w,w,w,w,w];b.set(v,g*p*w)}const C=new tt;C.setAttribute("position",new ft(M,y)),C.setAttribute("uv",new ft(x,m)),C.setAttribute("faceIndex",new ft(b,g)),e.push(C),r>Js&&r--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function Eg(i,e,t){const n=new ui(i,e,t);return n.texture.mapping=Eo,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Ql(i,e,t,n,r){i.viewport.set(e,t,n,r),i.scissor.set(e,t,n,r)}function SC(i,e,t){const n=new Float32Array(Kr),r=new O(0,1,0);return new mn({name:"SphericalGaussianBlur",defines:{n:Kr,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${i}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:wp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Vi,depthTest:!1,depthWrite:!1})}function Ag(){return new mn({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:wp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Vi,depthTest:!1,depthWrite:!1})}function Cg(){return new mn({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:wp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Vi,depthTest:!1,depthWrite:!1})}function wp(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function wC(i){let e=new WeakMap,t=null;function n(a){if(a&&a.isTexture){const l=a.mapping,c=l===wa||l===Ta,u=l===ji||l===br;if(c||u){let h=e.get(a);const f=h!==void 0?h.texture.pmremVersion:0;if(a.isRenderTargetTexture&&a.pmremVersion!==f)return t===null&&(t=new td(i)),h=c?t.fromEquirectangular(a,h):t.fromCubemap(a,h),h.texture.pmremVersion=a.pmremVersion,e.set(a,h),h.texture;if(h!==void 0)return h.texture;{const d=a.image;return c&&d&&d.height>0||u&&d&&r(d)?(t===null&&(t=new td(i)),h=c?t.fromEquirectangular(a):t.fromCubemap(a),h.texture.pmremVersion=a.pmremVersion,e.set(a,h),a.addEventListener("dispose",s),h.texture):null}}}return a}function r(a){let l=0;const c=6;for(let u=0;u<c;u++)a[u]!==void 0&&l++;return l===c}function s(a){const l=a.target;l.removeEventListener("dispose",s);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:o}}function TC(i){const e={};function t(n){if(e[n]!==void 0)return e[n];let r;switch(n){case"WEBGL_depth_texture":r=i.getExtension("WEBGL_depth_texture")||i.getExtension("MOZ_WEBGL_depth_texture")||i.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=i.getExtension("EXT_texture_filter_anisotropic")||i.getExtension("MOZ_EXT_texture_filter_anisotropic")||i.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=i.getExtension("WEBGL_compressed_texture_s3tc")||i.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=i.getExtension("WEBGL_compressed_texture_pvrtc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=i.getExtension(n)}return e[n]=r,r}return{has:function(n){return t(n)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(n){const r=t(n);return r===null&&oo("THREE.WebGLRenderer: "+n+" extension not supported."),r}}}function EC(i,e,t,n){const r={},s=new WeakMap;function o(h){const f=h.target;f.index!==null&&e.remove(f.index);for(const p in f.attributes)e.remove(f.attributes[p]);f.removeEventListener("dispose",o),delete r[f.id];const d=s.get(f);d&&(e.remove(d),s.delete(f)),n.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,t.memory.geometries--}function a(h,f){return r[f.id]===!0||(f.addEventListener("dispose",o),r[f.id]=!0,t.memory.geometries++),f}function l(h){const f=h.attributes;for(const d in f)e.update(f[d],i.ARRAY_BUFFER)}function c(h){const f=[],d=h.index,p=h.attributes.position;let y=0;if(d!==null){const M=d.array;y=d.version;for(let x=0,b=M.length;x<b;x+=3){const C=M[x+0],w=M[x+1],T=M[x+2];f.push(C,w,w,T,T,C)}}else if(p!==void 0){const M=p.array;y=p.version;for(let x=0,b=M.length/3-1;x<b;x+=3){const C=x+0,w=x+1,T=x+2;f.push(C,w,w,T,T,C)}}else return;const m=new(I_(f)?tp:ep)(f,1);m.version=y;const g=s.get(h);g&&e.remove(g),s.set(h,m)}function u(h){const f=s.get(h);if(f){const d=h.index;d!==null&&f.version<d.version&&c(h)}else c(h);return s.get(h)}return{get:a,update:l,getWireframeAttribute:u}}function AC(i,e,t){let n;function r(f){n=f}let s,o;function a(f){s=f.type,o=f.bytesPerElement}function l(f,d){i.drawElements(n,d,s,f*o),t.update(d,n,1)}function c(f,d,p){p!==0&&(i.drawElementsInstanced(n,d,s,f*o,p),t.update(d,n,p))}function u(f,d,p){if(p===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,d,0,s,f,0,p);let m=0;for(let g=0;g<p;g++)m+=d[g];t.update(m,n,1)}function h(f,d,p,y){if(p===0)return;const m=e.get("WEBGL_multi_draw");if(m===null)for(let g=0;g<f.length;g++)c(f[g]/o,d[g],y[g]);else{m.multiDrawElementsInstancedWEBGL(n,d,0,s,f,0,y,0,p);let g=0;for(let M=0;M<p;M++)g+=d[M]*y[M];t.update(g,n,1)}}this.setMode=r,this.setIndex=a,this.render=l,this.renderInstances=c,this.renderMultiDraw=u,this.renderMultiDrawInstances=h}function CC(i){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,o,a){switch(t.calls++,o){case i.TRIANGLES:t.triangles+=a*(s/3);break;case i.LINES:t.lines+=a*(s/2);break;case i.LINE_STRIP:t.lines+=a*(s-1);break;case i.LINE_LOOP:t.lines+=a*s;break;case i.POINTS:t.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function r(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:r,update:n}}function RC(i,e,t){const n=new WeakMap,r=new rt;function s(o,a,l){const c=o.morphTargetInfluences,u=a.morphAttributes.position||a.morphAttributes.normal||a.morphAttributes.color,h=u!==void 0?u.length:0;let f=n.get(a);if(f===void 0||f.count!==h){let v=function(){S.dispose(),n.delete(a),a.removeEventListener("dispose",v)};var d=v;f!==void 0&&f.texture.dispose();const p=a.morphAttributes.position!==void 0,y=a.morphAttributes.normal!==void 0,m=a.morphAttributes.color!==void 0,g=a.morphAttributes.position||[],M=a.morphAttributes.normal||[],x=a.morphAttributes.color||[];let b=0;p===!0&&(b=1),y===!0&&(b=2),m===!0&&(b=3);let C=a.attributes.position.count*b,w=1;C>e.maxTextureSize&&(w=Math.ceil(C/e.maxTextureSize),C=e.maxTextureSize);const T=new Float32Array(C*w*4*h),S=new Du(T,C,w,h);S.type=On,S.needsUpdate=!0;const _=b*4;for(let A=0;A<h;A++){const D=g[A],B=M[A],X=x[A],Y=C*w*4*A;for(let z=0;z<D.count;z++){const Q=z*_;p===!0&&(r.fromBufferAttribute(D,z),T[Y+Q+0]=r.x,T[Y+Q+1]=r.y,T[Y+Q+2]=r.z,T[Y+Q+3]=0),y===!0&&(r.fromBufferAttribute(B,z),T[Y+Q+4]=r.x,T[Y+Q+5]=r.y,T[Y+Q+6]=r.z,T[Y+Q+7]=0),m===!0&&(r.fromBufferAttribute(X,z),T[Y+Q+8]=r.x,T[Y+Q+9]=r.y,T[Y+Q+10]=r.z,T[Y+Q+11]=X.itemSize===4?r.w:1)}}f={count:h,texture:S,size:new de(C,w)},n.set(a,f),a.addEventListener("dispose",v)}if(o.isInstancedMesh===!0&&o.morphTexture!==null)l.getUniforms().setValue(i,"morphTexture",o.morphTexture,t);else{let p=0;for(let m=0;m<c.length;m++)p+=c[m];const y=a.morphTargetsRelative?1:1-p;l.getUniforms().setValue(i,"morphTargetBaseInfluence",y),l.getUniforms().setValue(i,"morphTargetInfluences",c)}l.getUniforms().setValue(i,"morphTargetsTexture",f.texture,t),l.getUniforms().setValue(i,"morphTargetsTextureSize",f.size)}return{update:s}}function IC(i,e,t,n){let r=new WeakMap;function s(l){const c=n.render.frame,u=l.geometry,h=e.get(l,u);if(r.get(h)!==c&&(e.update(h),r.set(h,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),r.get(l)!==c&&(t.update(l.instanceMatrix,i.ARRAY_BUFFER),l.instanceColor!==null&&t.update(l.instanceColor,i.ARRAY_BUFFER),r.set(l,c))),l.isSkinnedMesh){const f=l.skeleton;r.get(f)!==c&&(f.update(),r.set(f,c))}return h}function o(){r=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:s,dispose:o}}const Fy=new Lt,Rg=new sp(1,1),By=new Du,zy=new Uu,ky=new ja,Ig=[],Pg=[],Lg=new Float32Array(16),Dg=new Float32Array(9),Ug=new Float32Array(4);function Co(i,e,t){const n=i[0];if(n<=0||n>0)return i;const r=e*t;let s=Ig[r];if(s===void 0&&(s=new Float32Array(r),Ig[r]=s),e!==0){n.toArray(s,0);for(let o=1,a=0;o!==e;++o)a+=t,i[o].toArray(s,a)}return s}function qt(i,e){if(i.length!==e.length)return!1;for(let t=0,n=i.length;t<n;t++)if(i[t]!==e[t])return!1;return!0}function jt(i,e){for(let t=0,n=e.length;t<n;t++)i[t]=e[t]}function eh(i,e){let t=Pg[e];t===void 0&&(t=new Int32Array(e),Pg[e]=t);for(let n=0;n!==e;++n)t[n]=i.allocateTextureUnit();return t}function PC(i,e){const t=this.cache;t[0]!==e&&(i.uniform1f(this.addr,e),t[0]=e)}function LC(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(i.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(qt(t,e))return;i.uniform2fv(this.addr,e),jt(t,e)}}function DC(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(i.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(i.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(qt(t,e))return;i.uniform3fv(this.addr,e),jt(t,e)}}function UC(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(i.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(qt(t,e))return;i.uniform4fv(this.addr,e),jt(t,e)}}function NC(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(qt(t,e))return;i.uniformMatrix2fv(this.addr,!1,e),jt(t,e)}else{if(qt(t,n))return;Ug.set(n),i.uniformMatrix2fv(this.addr,!1,Ug),jt(t,n)}}function OC(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(qt(t,e))return;i.uniformMatrix3fv(this.addr,!1,e),jt(t,e)}else{if(qt(t,n))return;Dg.set(n),i.uniformMatrix3fv(this.addr,!1,Dg),jt(t,n)}}function FC(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(qt(t,e))return;i.uniformMatrix4fv(this.addr,!1,e),jt(t,e)}else{if(qt(t,n))return;Lg.set(n),i.uniformMatrix4fv(this.addr,!1,Lg),jt(t,n)}}function BC(i,e){const t=this.cache;t[0]!==e&&(i.uniform1i(this.addr,e),t[0]=e)}function zC(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(i.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(qt(t,e))return;i.uniform2iv(this.addr,e),jt(t,e)}}function kC(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(i.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(qt(t,e))return;i.uniform3iv(this.addr,e),jt(t,e)}}function VC(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(i.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(qt(t,e))return;i.uniform4iv(this.addr,e),jt(t,e)}}function HC(i,e){const t=this.cache;t[0]!==e&&(i.uniform1ui(this.addr,e),t[0]=e)}function GC(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(i.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(qt(t,e))return;i.uniform2uiv(this.addr,e),jt(t,e)}}function WC(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(i.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(qt(t,e))return;i.uniform3uiv(this.addr,e),jt(t,e)}}function XC(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(i.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(qt(t,e))return;i.uniform4uiv(this.addr,e),jt(t,e)}}function YC(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r);let s;this.type===i.SAMPLER_2D_SHADOW?(Rg.compareFunction=Kd,s=Rg):s=Fy,t.setTexture2D(e||s,r)}function qC(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.setTexture3D(e||zy,r)}function jC(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.setTextureCube(e||ky,r)}function $C(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.setTexture2DArray(e||By,r)}function ZC(i){switch(i){case 5126:return PC;case 35664:return LC;case 35665:return DC;case 35666:return UC;case 35674:return NC;case 35675:return OC;case 35676:return FC;case 5124:case 35670:return BC;case 35667:case 35671:return zC;case 35668:case 35672:return kC;case 35669:case 35673:return VC;case 5125:return HC;case 36294:return GC;case 36295:return WC;case 36296:return XC;case 35678:case 36198:case 36298:case 36306:case 35682:return YC;case 35679:case 36299:case 36307:return qC;case 35680:case 36300:case 36308:case 36293:return jC;case 36289:case 36303:case 36311:case 36292:return $C}}function KC(i,e){i.uniform1fv(this.addr,e)}function JC(i,e){const t=Co(e,this.size,2);i.uniform2fv(this.addr,t)}function QC(i,e){const t=Co(e,this.size,3);i.uniform3fv(this.addr,t)}function eR(i,e){const t=Co(e,this.size,4);i.uniform4fv(this.addr,t)}function tR(i,e){const t=Co(e,this.size,4);i.uniformMatrix2fv(this.addr,!1,t)}function nR(i,e){const t=Co(e,this.size,9);i.uniformMatrix3fv(this.addr,!1,t)}function iR(i,e){const t=Co(e,this.size,16);i.uniformMatrix4fv(this.addr,!1,t)}function rR(i,e){i.uniform1iv(this.addr,e)}function sR(i,e){i.uniform2iv(this.addr,e)}function oR(i,e){i.uniform3iv(this.addr,e)}function aR(i,e){i.uniform4iv(this.addr,e)}function lR(i,e){i.uniform1uiv(this.addr,e)}function cR(i,e){i.uniform2uiv(this.addr,e)}function uR(i,e){i.uniform3uiv(this.addr,e)}function hR(i,e){i.uniform4uiv(this.addr,e)}function fR(i,e,t){const n=this.cache,r=e.length,s=eh(t,r);qt(n,s)||(i.uniform1iv(this.addr,s),jt(n,s));for(let o=0;o!==r;++o)t.setTexture2D(e[o]||Fy,s[o])}function dR(i,e,t){const n=this.cache,r=e.length,s=eh(t,r);qt(n,s)||(i.uniform1iv(this.addr,s),jt(n,s));for(let o=0;o!==r;++o)t.setTexture3D(e[o]||zy,s[o])}function pR(i,e,t){const n=this.cache,r=e.length,s=eh(t,r);qt(n,s)||(i.uniform1iv(this.addr,s),jt(n,s));for(let o=0;o!==r;++o)t.setTextureCube(e[o]||ky,s[o])}function mR(i,e,t){const n=this.cache,r=e.length,s=eh(t,r);qt(n,s)||(i.uniform1iv(this.addr,s),jt(n,s));for(let o=0;o!==r;++o)t.setTexture2DArray(e[o]||By,s[o])}function gR(i){switch(i){case 5126:return KC;case 35664:return JC;case 35665:return QC;case 35666:return eR;case 35674:return tR;case 35675:return nR;case 35676:return iR;case 5124:case 35670:return rR;case 35667:case 35671:return sR;case 35668:case 35672:return oR;case 35669:case 35673:return aR;case 5125:return lR;case 36294:return cR;case 36295:return uR;case 36296:return hR;case 35678:case 36198:case 36298:case 36306:case 35682:return fR;case 35679:case 36299:case 36307:return dR;case 35680:case 36300:case 36308:case 36293:return pR;case 36289:case 36303:case 36311:case 36292:return mR}}class vR{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=ZC(t.type)}}class _R{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=gR(t.type)}}class yR{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const r=this.seq;for(let s=0,o=r.length;s!==o;++s){const a=r[s];a.setValue(e,t[a.id],n)}}}const af=/(\w+)(\])?(\[|\.)?/g;function Ng(i,e){i.seq.push(e),i.map[e.id]=e}function xR(i,e,t){const n=i.name,r=n.length;for(af.lastIndex=0;;){const s=af.exec(n),o=af.lastIndex;let a=s[1];const l=s[2]==="]",c=s[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===r){Ng(t,c===void 0?new vR(a,i,e):new _R(a,i,e));break}else{let h=t.map[a];h===void 0&&(h=new yR(a),Ng(t,h)),t=h}}}class hc{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let r=0;r<n;++r){const s=e.getActiveUniform(t,r),o=e.getUniformLocation(t,s.name);xR(s,o,this)}}setValue(e,t,n,r){const s=this.map[t];s!==void 0&&s.setValue(e,n,r)}setOptional(e,t,n){const r=t[n];r!==void 0&&this.setValue(e,n,r)}static upload(e,t,n,r){for(let s=0,o=t.length;s!==o;++s){const a=t[s],l=n[a.id];l.needsUpdate!==!1&&a.setValue(e,l.value,r)}}static seqWithValue(e,t){const n=[];for(let r=0,s=e.length;r!==s;++r){const o=e[r];o.id in t&&n.push(o)}return n}}function Og(i,e,t){const n=i.createShader(e);return i.shaderSource(n,t),i.compileShader(n),n}const bR=37297;let MR=0;function SR(i,e){const t=i.split(`
`),n=[],r=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let o=r;o<s;o++){const a=o+1;n.push(`${a===e?">":" "} ${a}: ${t[o]}`)}return n.join(`
`)}const Fg=new et;function wR(i){ct._getMatrix(Fg,ct.workingColorSpace,i);const e=`mat3( ${Fg.elements.map(t=>t.toFixed(4))} )`;switch(ct.getTransfer(i)){case Ca:return[e,"LinearTransferOETF"];case vt:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",i),[e,"LinearTransferOETF"]}}function Bg(i,e,t){const n=i.getShaderParameter(e,i.COMPILE_STATUS),r=i.getShaderInfoLog(e).trim();if(n&&r==="")return"";const s=/ERROR: 0:(\d+)/.exec(r);if(s){const o=parseInt(s[1]);return t.toUpperCase()+`

`+r+`

`+SR(i.getShaderSource(e),o)}else return r}function TR(i,e){const t=wR(e);return[`vec4 ${i}( vec4 value ) {`,`	return ${t[1]}( vec4( value.rgb * ${t[0]}, value.a ) );`,"}"].join(`
`)}function ER(i,e){let t;switch(e){case u_:t="Linear";break;case h_:t="Reinhard";break;case f_:t="Cineon";break;case Su:t="ACESFilmic";break;case p_:t="AgX";break;case m_:t="Neutral";break;case d_:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+i+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}const ec=new O;function AR(){ct.getLuminanceCoefficients(ec);const i=ec.x.toFixed(4),e=ec.y.toFixed(4),t=ec.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${i}, ${e}, ${t} );`,"	return dot( weights, rgb );","}"].join(`
`)}function CR(i){return[i.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",i.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Zo).join(`
`)}function RR(i){const e=[];for(const t in i){const n=i[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function IR(i,e){const t={},n=i.getProgramParameter(e,i.ACTIVE_ATTRIBUTES);for(let r=0;r<n;r++){const s=i.getActiveAttrib(e,r),o=s.name;let a=1;s.type===i.FLOAT_MAT2&&(a=2),s.type===i.FLOAT_MAT3&&(a=3),s.type===i.FLOAT_MAT4&&(a=4),t[o]={type:s.type,location:i.getAttribLocation(e,o),locationSize:a}}return t}function Zo(i){return i!==""}function zg(i,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return i.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function kg(i,e){return i.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const PR=/^[ \t]*#include +<([\w\d./]+)>/gm;function nd(i){return i.replace(PR,DR)}const LR=new Map;function DR(i,e){let t=it[e];if(t===void 0){const n=LR.get(e);if(n!==void 0)t=it[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return nd(t)}const UR=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Vg(i){return i.replace(UR,NR)}function NR(i,e,t,n){let r="";for(let s=parseInt(e);s<parseInt(t);s++)r+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function Hg(i){let e=`precision ${i.precision} float;
	precision ${i.precision} int;
	precision ${i.precision} sampler2D;
	precision ${i.precision} samplerCube;
	precision ${i.precision} sampler3D;
	precision ${i.precision} sampler2DArray;
	precision ${i.precision} sampler2DShadow;
	precision ${i.precision} samplerCubeShadow;
	precision ${i.precision} sampler2DArrayShadow;
	precision ${i.precision} isampler2D;
	precision ${i.precision} isampler3D;
	precision ${i.precision} isamplerCube;
	precision ${i.precision} isampler2DArray;
	precision ${i.precision} usampler2D;
	precision ${i.precision} usampler3D;
	precision ${i.precision} usamplerCube;
	precision ${i.precision} usampler2DArray;
	`;return i.precision==="highp"?e+=`
#define HIGH_PRECISION`:i.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:i.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function OR(i){let e="SHADOWMAP_TYPE_BASIC";return i.shadowMapType===Vd?e="SHADOWMAP_TYPE_PCF":i.shadowMapType===Hd?e="SHADOWMAP_TYPE_PCF_SOFT":i.shadowMapType===vi&&(e="SHADOWMAP_TYPE_VSM"),e}function FR(i){let e="ENVMAP_TYPE_CUBE";if(i.envMap)switch(i.envMapMode){case ji:case br:e="ENVMAP_TYPE_CUBE";break;case Eo:e="ENVMAP_TYPE_CUBE_UV";break}return e}function BR(i){let e="ENVMAP_MODE_REFLECTION";if(i.envMap)switch(i.envMapMode){case br:e="ENVMAP_MODE_REFRACTION";break}return e}function zR(i){let e="ENVMAP_BLENDING_NONE";if(i.envMap)switch(i.combine){case Ga:e="ENVMAP_BLENDING_MULTIPLY";break;case l_:e="ENVMAP_BLENDING_MIX";break;case c_:e="ENVMAP_BLENDING_ADD";break}return e}function kR(i){const e=i.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function VR(i,e,t,n){const r=i.getContext(),s=t.defines;let o=t.vertexShader,a=t.fragmentShader;const l=OR(t),c=FR(t),u=BR(t),h=zR(t),f=kR(t),d=CR(t),p=RR(s),y=r.createProgram();let m,g,M=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(m=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(Zo).join(`
`),m.length>0&&(m+=`
`),g=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(Zo).join(`
`),g.length>0&&(g+=`
`)):(m=[Hg(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Zo).join(`
`),g=[Hg(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+u:"",t.envMap?"#define "+h:"",f?"#define CUBEUV_TEXEL_WIDTH "+f.texelWidth:"",f?"#define CUBEUV_TEXEL_HEIGHT "+f.texelHeight:"",f?"#define CUBEUV_MAX_MIP "+f.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==ai?"#define TONE_MAPPING":"",t.toneMapping!==ai?it.tonemapping_pars_fragment:"",t.toneMapping!==ai?ER("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",it.colorspace_pars_fragment,TR("linearToOutputTexel",t.outputColorSpace),AR(),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Zo).join(`
`)),o=nd(o),o=zg(o,t),o=kg(o,t),a=nd(a),a=zg(a,t),a=kg(a,t),o=Vg(o),a=Vg(a),t.isRawShaderMaterial!==!0&&(M=`#version 300 es
`,m=[d,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,g=["#define varying in",t.glslVersion===Yf?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Yf?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+g);const x=M+m+o,b=M+g+a,C=Og(r,r.VERTEX_SHADER,x),w=Og(r,r.FRAGMENT_SHADER,b);r.attachShader(y,C),r.attachShader(y,w),t.index0AttributeName!==void 0?r.bindAttribLocation(y,0,t.index0AttributeName):t.morphTargets===!0&&r.bindAttribLocation(y,0,"position"),r.linkProgram(y);function T(A){if(i.debug.checkShaderErrors){const D=r.getProgramInfoLog(y).trim(),B=r.getShaderInfoLog(C).trim(),X=r.getShaderInfoLog(w).trim();let Y=!0,z=!0;if(r.getProgramParameter(y,r.LINK_STATUS)===!1)if(Y=!1,typeof i.debug.onShaderError=="function")i.debug.onShaderError(r,y,C,w);else{const Q=Bg(r,C,"vertex"),K=Bg(r,w,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(y,r.VALIDATE_STATUS)+`

Material Name: `+A.name+`
Material Type: `+A.type+`

Program Info Log: `+D+`
`+Q+`
`+K)}else D!==""?console.warn("THREE.WebGLProgram: Program Info Log:",D):(B===""||X==="")&&(z=!1);z&&(A.diagnostics={runnable:Y,programLog:D,vertexShader:{log:B,prefix:m},fragmentShader:{log:X,prefix:g}})}r.deleteShader(C),r.deleteShader(w),S=new hc(r,y),_=IR(r,y)}let S;this.getUniforms=function(){return S===void 0&&T(this),S};let _;this.getAttributes=function(){return _===void 0&&T(this),_};let v=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return v===!1&&(v=r.getProgramParameter(y,bR)),v},this.destroy=function(){n.releaseStatesOfProgram(this),r.deleteProgram(y),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=MR++,this.cacheKey=e,this.usedTimes=1,this.program=y,this.vertexShader=C,this.fragmentShader=w,this}let HR=0;class GR{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,r=this._getShaderStage(t),s=this._getShaderStage(n),o=this._getShaderCacheForMaterial(e);return o.has(r)===!1&&(o.add(r),r.usedTimes++),o.has(s)===!1&&(o.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new WR(e),t.set(e,n)),n}}class WR{constructor(e){this.id=HR++,this.code=e,this.usedTimes=0}}function XR(i,e,t,n,r,s,o){const a=new Xa,l=new GR,c=new Set,u=[],h=r.logarithmicDepthBuffer,f=r.vertexTextures;let d=r.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function y(_){return c.add(_),_===0?"uv":`uv${_}`}function m(_,v,A,D,B){const X=D.fog,Y=B.geometry,z=_.isMeshStandardMaterial?D.environment:null,Q=(_.isMeshStandardMaterial?t:e).get(_.envMap||z),K=Q&&Q.mapping===Eo?Q.image.height:null,fe=p[_.type];_.precision!==null&&(d=r.getMaxPrecision(_.precision),d!==_.precision&&console.warn("THREE.WebGLProgram.getParameters:",_.precision,"not supported, using",d,"instead."));const ge=Y.morphAttributes.position||Y.morphAttributes.normal||Y.morphAttributes.color,oe=ge!==void 0?ge.length:0;let Te=0;Y.morphAttributes.position!==void 0&&(Te=1),Y.morphAttributes.normal!==void 0&&(Te=2),Y.morphAttributes.color!==void 0&&(Te=3);let ke,ae,ve,Re;if(fe){const lt=ni[fe];ke=lt.vertexShader,ae=lt.fragmentShader}else ke=_.vertexShader,ae=_.fragmentShader,l.update(_),ve=l.getVertexShaderID(_),Re=l.getFragmentShaderID(_);const Se=i.getRenderTarget(),le=i.state.buffers.depth.getReversed(),I=B.isInstancedMesh===!0,F=B.isBatchedMesh===!0,q=!!_.map,P=!!_.matcap,L=!!Q,E=!!_.aoMap,G=!!_.lightMap,V=!!_.bumpMap,$=!!_.normalMap,H=!!_.displacementMap,ee=!!_.emissiveMap,Z=!!_.metalnessMap,J=!!_.roughnessMap,pe=_.anisotropy>0,U=_.clearcoat>0,R=_.dispersion>0,j=_.iridescence>0,ie=_.sheen>0,he=_.transmission>0,se=pe&&!!_.anisotropyMap,Ce=U&&!!_.clearcoatMap,xe=U&&!!_.clearcoatNormalMap,Pe=U&&!!_.clearcoatRoughnessMap,Le=j&&!!_.iridescenceMap,_e=j&&!!_.iridescenceThicknessMap,Ue=ie&&!!_.sheenColorMap,Fe=ie&&!!_.sheenRoughnessMap,k=!!_.specularMap,re=!!_.specularColorMap,Me=!!_.specularIntensityMap,W=he&&!!_.transmissionMap,Ae=he&&!!_.thicknessMap,ye=!!_.gradientMap,Oe=!!_.alphaMap,be=_.alphaTest>0,me=!!_.alphaHash,Ne=!!_.extensions;let qe=ai;_.toneMapped&&(Se===null||Se.isXRRenderTarget===!0)&&(qe=i.toneMapping);const mt={shaderID:fe,shaderType:_.type,shaderName:_.name,vertexShader:ke,fragmentShader:ae,defines:_.defines,customVertexShaderID:ve,customFragmentShaderID:Re,isRawShaderMaterial:_.isRawShaderMaterial===!0,glslVersion:_.glslVersion,precision:d,batching:F,batchingColor:F&&B._colorsTexture!==null,instancing:I,instancingColor:I&&B.instanceColor!==null,instancingMorph:I&&B.morphTexture!==null,supportsVertexTextures:f,outputColorSpace:Se===null?i.outputColorSpace:Se.isXRRenderTarget===!0?Se.texture.colorSpace:ps,alphaToCoverage:!!_.alphaToCoverage,map:q,matcap:P,envMap:L,envMapMode:L&&Q.mapping,envMapCubeUVHeight:K,aoMap:E,lightMap:G,bumpMap:V,normalMap:$,displacementMap:f&&H,emissiveMap:ee,normalMapObjectSpace:$&&_.normalMapType===M_,normalMapTangentSpace:$&&_.normalMapType===wr,metalnessMap:Z,roughnessMap:J,anisotropy:pe,anisotropyMap:se,clearcoat:U,clearcoatMap:Ce,clearcoatNormalMap:xe,clearcoatRoughnessMap:Pe,dispersion:R,iridescence:j,iridescenceMap:Le,iridescenceThicknessMap:_e,sheen:ie,sheenColorMap:Ue,sheenRoughnessMap:Fe,specularMap:k,specularColorMap:re,specularIntensityMap:Me,transmission:he,transmissionMap:W,thicknessMap:Ae,gradientMap:ye,opaque:_.transparent===!1&&_.blending===ss&&_.alphaToCoverage===!1,alphaMap:Oe,alphaTest:be,alphaHash:me,combine:_.combine,mapUv:q&&y(_.map.channel),aoMapUv:E&&y(_.aoMap.channel),lightMapUv:G&&y(_.lightMap.channel),bumpMapUv:V&&y(_.bumpMap.channel),normalMapUv:$&&y(_.normalMap.channel),displacementMapUv:H&&y(_.displacementMap.channel),emissiveMapUv:ee&&y(_.emissiveMap.channel),metalnessMapUv:Z&&y(_.metalnessMap.channel),roughnessMapUv:J&&y(_.roughnessMap.channel),anisotropyMapUv:se&&y(_.anisotropyMap.channel),clearcoatMapUv:Ce&&y(_.clearcoatMap.channel),clearcoatNormalMapUv:xe&&y(_.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:Pe&&y(_.clearcoatRoughnessMap.channel),iridescenceMapUv:Le&&y(_.iridescenceMap.channel),iridescenceThicknessMapUv:_e&&y(_.iridescenceThicknessMap.channel),sheenColorMapUv:Ue&&y(_.sheenColorMap.channel),sheenRoughnessMapUv:Fe&&y(_.sheenRoughnessMap.channel),specularMapUv:k&&y(_.specularMap.channel),specularColorMapUv:re&&y(_.specularColorMap.channel),specularIntensityMapUv:Me&&y(_.specularIntensityMap.channel),transmissionMapUv:W&&y(_.transmissionMap.channel),thicknessMapUv:Ae&&y(_.thicknessMap.channel),alphaMapUv:Oe&&y(_.alphaMap.channel),vertexTangents:!!Y.attributes.tangent&&($||pe),vertexColors:_.vertexColors,vertexAlphas:_.vertexColors===!0&&!!Y.attributes.color&&Y.attributes.color.itemSize===4,pointsUvs:B.isPoints===!0&&!!Y.attributes.uv&&(q||Oe),fog:!!X,useFog:_.fog===!0,fogExp2:!!X&&X.isFogExp2,flatShading:_.flatShading===!0&&_.wireframe===!1,sizeAttenuation:_.sizeAttenuation===!0,logarithmicDepthBuffer:h,reverseDepthBuffer:le,skinning:B.isSkinnedMesh===!0,morphTargets:Y.morphAttributes.position!==void 0,morphNormals:Y.morphAttributes.normal!==void 0,morphColors:Y.morphAttributes.color!==void 0,morphTargetsCount:oe,morphTextureStride:Te,numDirLights:v.directional.length,numPointLights:v.point.length,numSpotLights:v.spot.length,numSpotLightMaps:v.spotLightMap.length,numRectAreaLights:v.rectArea.length,numHemiLights:v.hemi.length,numDirLightShadows:v.directionalShadowMap.length,numPointLightShadows:v.pointShadowMap.length,numSpotLightShadows:v.spotShadowMap.length,numSpotLightShadowsWithMaps:v.numSpotLightShadowsWithMaps,numLightProbes:v.numLightProbes,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:_.dithering,shadowMapEnabled:i.shadowMap.enabled&&A.length>0,shadowMapType:i.shadowMap.type,toneMapping:qe,decodeVideoTexture:q&&_.map.isVideoTexture===!0&&ct.getTransfer(_.map.colorSpace)===vt,decodeVideoTextureEmissive:ee&&_.emissiveMap.isVideoTexture===!0&&ct.getTransfer(_.emissiveMap.colorSpace)===vt,premultipliedAlpha:_.premultipliedAlpha,doubleSided:_.side===Dn,flipSided:_.side===fn,useDepthPacking:_.depthPacking>=0,depthPacking:_.depthPacking||0,index0AttributeName:_.index0AttributeName,extensionClipCullDistance:Ne&&_.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(Ne&&_.extensions.multiDraw===!0||F)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:_.customProgramCacheKey()};return mt.vertexUv1s=c.has(1),mt.vertexUv2s=c.has(2),mt.vertexUv3s=c.has(3),c.clear(),mt}function g(_){const v=[];if(_.shaderID?v.push(_.shaderID):(v.push(_.customVertexShaderID),v.push(_.customFragmentShaderID)),_.defines!==void 0)for(const A in _.defines)v.push(A),v.push(_.defines[A]);return _.isRawShaderMaterial===!1&&(M(v,_),x(v,_),v.push(i.outputColorSpace)),v.push(_.customProgramCacheKey),v.join()}function M(_,v){_.push(v.precision),_.push(v.outputColorSpace),_.push(v.envMapMode),_.push(v.envMapCubeUVHeight),_.push(v.mapUv),_.push(v.alphaMapUv),_.push(v.lightMapUv),_.push(v.aoMapUv),_.push(v.bumpMapUv),_.push(v.normalMapUv),_.push(v.displacementMapUv),_.push(v.emissiveMapUv),_.push(v.metalnessMapUv),_.push(v.roughnessMapUv),_.push(v.anisotropyMapUv),_.push(v.clearcoatMapUv),_.push(v.clearcoatNormalMapUv),_.push(v.clearcoatRoughnessMapUv),_.push(v.iridescenceMapUv),_.push(v.iridescenceThicknessMapUv),_.push(v.sheenColorMapUv),_.push(v.sheenRoughnessMapUv),_.push(v.specularMapUv),_.push(v.specularColorMapUv),_.push(v.specularIntensityMapUv),_.push(v.transmissionMapUv),_.push(v.thicknessMapUv),_.push(v.combine),_.push(v.fogExp2),_.push(v.sizeAttenuation),_.push(v.morphTargetsCount),_.push(v.morphAttributeCount),_.push(v.numDirLights),_.push(v.numPointLights),_.push(v.numSpotLights),_.push(v.numSpotLightMaps),_.push(v.numHemiLights),_.push(v.numRectAreaLights),_.push(v.numDirLightShadows),_.push(v.numPointLightShadows),_.push(v.numSpotLightShadows),_.push(v.numSpotLightShadowsWithMaps),_.push(v.numLightProbes),_.push(v.shadowMapType),_.push(v.toneMapping),_.push(v.numClippingPlanes),_.push(v.numClipIntersection),_.push(v.depthPacking)}function x(_,v){a.disableAll(),v.supportsVertexTextures&&a.enable(0),v.instancing&&a.enable(1),v.instancingColor&&a.enable(2),v.instancingMorph&&a.enable(3),v.matcap&&a.enable(4),v.envMap&&a.enable(5),v.normalMapObjectSpace&&a.enable(6),v.normalMapTangentSpace&&a.enable(7),v.clearcoat&&a.enable(8),v.iridescence&&a.enable(9),v.alphaTest&&a.enable(10),v.vertexColors&&a.enable(11),v.vertexAlphas&&a.enable(12),v.vertexUv1s&&a.enable(13),v.vertexUv2s&&a.enable(14),v.vertexUv3s&&a.enable(15),v.vertexTangents&&a.enable(16),v.anisotropy&&a.enable(17),v.alphaHash&&a.enable(18),v.batching&&a.enable(19),v.dispersion&&a.enable(20),v.batchingColor&&a.enable(21),v.gradientMap&&a.enable(22),_.push(a.mask),a.disableAll(),v.fog&&a.enable(0),v.useFog&&a.enable(1),v.flatShading&&a.enable(2),v.logarithmicDepthBuffer&&a.enable(3),v.reverseDepthBuffer&&a.enable(4),v.skinning&&a.enable(5),v.morphTargets&&a.enable(6),v.morphNormals&&a.enable(7),v.morphColors&&a.enable(8),v.premultipliedAlpha&&a.enable(9),v.shadowMapEnabled&&a.enable(10),v.doubleSided&&a.enable(11),v.flipSided&&a.enable(12),v.useDepthPacking&&a.enable(13),v.dithering&&a.enable(14),v.transmission&&a.enable(15),v.sheen&&a.enable(16),v.opaque&&a.enable(17),v.pointsUvs&&a.enable(18),v.decodeVideoTexture&&a.enable(19),v.decodeVideoTextureEmissive&&a.enable(20),v.alphaToCoverage&&a.enable(21),_.push(a.mask)}function b(_){const v=p[_.type];let A;if(v){const D=ni[v];A=Ya.clone(D.uniforms)}else A=_.uniforms;return A}function C(_,v){let A;for(let D=0,B=u.length;D<B;D++){const X=u[D];if(X.cacheKey===v){A=X,++A.usedTimes;break}}return A===void 0&&(A=new VR(i,v,_,s),u.push(A)),A}function w(_){if(--_.usedTimes===0){const v=u.indexOf(_);u[v]=u[u.length-1],u.pop(),_.destroy()}}function T(_){l.remove(_)}function S(){l.dispose()}return{getParameters:m,getProgramCacheKey:g,getUniforms:b,acquireProgram:C,releaseProgram:w,releaseShaderCache:T,programs:u,dispose:S}}function YR(){let i=new WeakMap;function e(o){return i.has(o)}function t(o){let a=i.get(o);return a===void 0&&(a={},i.set(o,a)),a}function n(o){i.delete(o)}function r(o,a,l){i.get(o)[a]=l}function s(){i=new WeakMap}return{has:e,get:t,remove:n,update:r,dispose:s}}function qR(i,e){return i.groupOrder!==e.groupOrder?i.groupOrder-e.groupOrder:i.renderOrder!==e.renderOrder?i.renderOrder-e.renderOrder:i.material.id!==e.material.id?i.material.id-e.material.id:i.z!==e.z?i.z-e.z:i.id-e.id}function Gg(i,e){return i.groupOrder!==e.groupOrder?i.groupOrder-e.groupOrder:i.renderOrder!==e.renderOrder?i.renderOrder-e.renderOrder:i.z!==e.z?e.z-i.z:i.id-e.id}function Wg(){const i=[];let e=0;const t=[],n=[],r=[];function s(){e=0,t.length=0,n.length=0,r.length=0}function o(h,f,d,p,y,m){let g=i[e];return g===void 0?(g={id:h.id,object:h,geometry:f,material:d,groupOrder:p,renderOrder:h.renderOrder,z:y,group:m},i[e]=g):(g.id=h.id,g.object=h,g.geometry=f,g.material=d,g.groupOrder=p,g.renderOrder=h.renderOrder,g.z=y,g.group=m),e++,g}function a(h,f,d,p,y,m){const g=o(h,f,d,p,y,m);d.transmission>0?n.push(g):d.transparent===!0?r.push(g):t.push(g)}function l(h,f,d,p,y,m){const g=o(h,f,d,p,y,m);d.transmission>0?n.unshift(g):d.transparent===!0?r.unshift(g):t.unshift(g)}function c(h,f){t.length>1&&t.sort(h||qR),n.length>1&&n.sort(f||Gg),r.length>1&&r.sort(f||Gg)}function u(){for(let h=e,f=i.length;h<f;h++){const d=i[h];if(d.id===null)break;d.id=null,d.object=null,d.geometry=null,d.material=null,d.group=null}}return{opaque:t,transmissive:n,transparent:r,init:s,push:a,unshift:l,finish:u,sort:c}}function jR(){let i=new WeakMap;function e(n,r){const s=i.get(n);let o;return s===void 0?(o=new Wg,i.set(n,[o])):r>=s.length?(o=new Wg,s.push(o)):o=s[r],o}function t(){i=new WeakMap}return{get:e,dispose:t}}function $R(){const i={};return{get:function(e){if(i[e.id]!==void 0)return i[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new O,color:new Ee};break;case"SpotLight":t={position:new O,direction:new O,color:new Ee,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new O,color:new Ee,distance:0,decay:0};break;case"HemisphereLight":t={direction:new O,skyColor:new Ee,groundColor:new Ee};break;case"RectAreaLight":t={color:new Ee,position:new O,halfWidth:new O,halfHeight:new O};break}return i[e.id]=t,t}}}function ZR(){const i={};return{get:function(e){if(i[e.id]!==void 0)return i[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new de};break;case"SpotLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new de};break;case"PointLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new de,shadowCameraNear:1,shadowCameraFar:1e3};break}return i[e.id]=t,t}}}let KR=0;function JR(i,e){return(e.castShadow?2:0)-(i.castShadow?2:0)+(e.map?1:0)-(i.map?1:0)}function QR(i){const e=new $R,t=ZR(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let c=0;c<9;c++)n.probe.push(new O);const r=new O,s=new Ge,o=new Ge;function a(c){let u=0,h=0,f=0;for(let _=0;_<9;_++)n.probe[_].set(0,0,0);let d=0,p=0,y=0,m=0,g=0,M=0,x=0,b=0,C=0,w=0,T=0;c.sort(JR);for(let _=0,v=c.length;_<v;_++){const A=c[_],D=A.color,B=A.intensity,X=A.distance,Y=A.shadow&&A.shadow.map?A.shadow.map.texture:null;if(A.isAmbientLight)u+=D.r*B,h+=D.g*B,f+=D.b*B;else if(A.isLightProbe){for(let z=0;z<9;z++)n.probe[z].addScaledVector(A.sh.coefficients[z],B);T++}else if(A.isDirectionalLight){const z=e.get(A);if(z.color.copy(A.color).multiplyScalar(A.intensity),A.castShadow){const Q=A.shadow,K=t.get(A);K.shadowIntensity=Q.intensity,K.shadowBias=Q.bias,K.shadowNormalBias=Q.normalBias,K.shadowRadius=Q.radius,K.shadowMapSize=Q.mapSize,n.directionalShadow[d]=K,n.directionalShadowMap[d]=Y,n.directionalShadowMatrix[d]=A.shadow.matrix,M++}n.directional[d]=z,d++}else if(A.isSpotLight){const z=e.get(A);z.position.setFromMatrixPosition(A.matrixWorld),z.color.copy(D).multiplyScalar(B),z.distance=X,z.coneCos=Math.cos(A.angle),z.penumbraCos=Math.cos(A.angle*(1-A.penumbra)),z.decay=A.decay,n.spot[y]=z;const Q=A.shadow;if(A.map&&(n.spotLightMap[C]=A.map,C++,Q.updateMatrices(A),A.castShadow&&w++),n.spotLightMatrix[y]=Q.matrix,A.castShadow){const K=t.get(A);K.shadowIntensity=Q.intensity,K.shadowBias=Q.bias,K.shadowNormalBias=Q.normalBias,K.shadowRadius=Q.radius,K.shadowMapSize=Q.mapSize,n.spotShadow[y]=K,n.spotShadowMap[y]=Y,b++}y++}else if(A.isRectAreaLight){const z=e.get(A);z.color.copy(D).multiplyScalar(B),z.halfWidth.set(A.width*.5,0,0),z.halfHeight.set(0,A.height*.5,0),n.rectArea[m]=z,m++}else if(A.isPointLight){const z=e.get(A);if(z.color.copy(A.color).multiplyScalar(A.intensity),z.distance=A.distance,z.decay=A.decay,A.castShadow){const Q=A.shadow,K=t.get(A);K.shadowIntensity=Q.intensity,K.shadowBias=Q.bias,K.shadowNormalBias=Q.normalBias,K.shadowRadius=Q.radius,K.shadowMapSize=Q.mapSize,K.shadowCameraNear=Q.camera.near,K.shadowCameraFar=Q.camera.far,n.pointShadow[p]=K,n.pointShadowMap[p]=Y,n.pointShadowMatrix[p]=A.shadow.matrix,x++}n.point[p]=z,p++}else if(A.isHemisphereLight){const z=e.get(A);z.skyColor.copy(A.color).multiplyScalar(B),z.groundColor.copy(A.groundColor).multiplyScalar(B),n.hemi[g]=z,g++}}m>0&&(i.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=Ie.LTC_FLOAT_1,n.rectAreaLTC2=Ie.LTC_FLOAT_2):(n.rectAreaLTC1=Ie.LTC_HALF_1,n.rectAreaLTC2=Ie.LTC_HALF_2)),n.ambient[0]=u,n.ambient[1]=h,n.ambient[2]=f;const S=n.hash;(S.directionalLength!==d||S.pointLength!==p||S.spotLength!==y||S.rectAreaLength!==m||S.hemiLength!==g||S.numDirectionalShadows!==M||S.numPointShadows!==x||S.numSpotShadows!==b||S.numSpotMaps!==C||S.numLightProbes!==T)&&(n.directional.length=d,n.spot.length=y,n.rectArea.length=m,n.point.length=p,n.hemi.length=g,n.directionalShadow.length=M,n.directionalShadowMap.length=M,n.pointShadow.length=x,n.pointShadowMap.length=x,n.spotShadow.length=b,n.spotShadowMap.length=b,n.directionalShadowMatrix.length=M,n.pointShadowMatrix.length=x,n.spotLightMatrix.length=b+C-w,n.spotLightMap.length=C,n.numSpotLightShadowsWithMaps=w,n.numLightProbes=T,S.directionalLength=d,S.pointLength=p,S.spotLength=y,S.rectAreaLength=m,S.hemiLength=g,S.numDirectionalShadows=M,S.numPointShadows=x,S.numSpotShadows=b,S.numSpotMaps=C,S.numLightProbes=T,n.version=KR++)}function l(c,u){let h=0,f=0,d=0,p=0,y=0;const m=u.matrixWorldInverse;for(let g=0,M=c.length;g<M;g++){const x=c[g];if(x.isDirectionalLight){const b=n.directional[h];b.direction.setFromMatrixPosition(x.matrixWorld),r.setFromMatrixPosition(x.target.matrixWorld),b.direction.sub(r),b.direction.transformDirection(m),h++}else if(x.isSpotLight){const b=n.spot[d];b.position.setFromMatrixPosition(x.matrixWorld),b.position.applyMatrix4(m),b.direction.setFromMatrixPosition(x.matrixWorld),r.setFromMatrixPosition(x.target.matrixWorld),b.direction.sub(r),b.direction.transformDirection(m),d++}else if(x.isRectAreaLight){const b=n.rectArea[p];b.position.setFromMatrixPosition(x.matrixWorld),b.position.applyMatrix4(m),o.identity(),s.copy(x.matrixWorld),s.premultiply(m),o.extractRotation(s),b.halfWidth.set(x.width*.5,0,0),b.halfHeight.set(0,x.height*.5,0),b.halfWidth.applyMatrix4(o),b.halfHeight.applyMatrix4(o),p++}else if(x.isPointLight){const b=n.point[f];b.position.setFromMatrixPosition(x.matrixWorld),b.position.applyMatrix4(m),f++}else if(x.isHemisphereLight){const b=n.hemi[y];b.direction.setFromMatrixPosition(x.matrixWorld),b.direction.transformDirection(m),y++}}}return{setup:a,setupView:l,state:n}}function Xg(i){const e=new QR(i),t=[],n=[];function r(u){c.camera=u,t.length=0,n.length=0}function s(u){t.push(u)}function o(u){n.push(u)}function a(){e.setup(t)}function l(u){e.setupView(t,u)}const c={lightsArray:t,shadowsArray:n,camera:null,lights:e,transmissionRenderTarget:{}};return{init:r,state:c,setupLights:a,setupLightsView:l,pushLight:s,pushShadow:o}}function eI(i){let e=new WeakMap;function t(r,s=0){const o=e.get(r);let a;return o===void 0?(a=new Xg(i),e.set(r,[a])):s>=o.length?(a=new Xg(i),o.push(a)):a=o[s],a}function n(){e=new WeakMap}return{get:t,dispose:n}}const tI=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,nI=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function iI(i,e,t){let n=new Ao;const r=new de,s=new de,o=new rt,a=new dp({depthPacking:b_}),l=new pp,c={},u=t.maxTextureSize,h={[qi]:fn,[fn]:qi,[Dn]:Dn},f=new mn({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new de},radius:{value:4}},vertexShader:tI,fragmentShader:nI}),d=f.clone();d.defines.HORIZONTAL_PASS=1;const p=new tt;p.setAttribute("position",new ft(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const y=new St(p,f),m=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Vd;let g=this.type;this.render=function(w,T,S){if(m.enabled===!1||m.autoUpdate===!1&&m.needsUpdate===!1||w.length===0)return;const _=i.getRenderTarget(),v=i.getActiveCubeFace(),A=i.getActiveMipmapLevel(),D=i.state;D.setBlending(Vi),D.buffers.color.setClear(1,1,1,1),D.buffers.depth.setTest(!0),D.setScissorTest(!1);const B=g!==vi&&this.type===vi,X=g===vi&&this.type!==vi;for(let Y=0,z=w.length;Y<z;Y++){const Q=w[Y],K=Q.shadow;if(K===void 0){console.warn("THREE.WebGLShadowMap:",Q,"has no shadow.");continue}if(K.autoUpdate===!1&&K.needsUpdate===!1)continue;r.copy(K.mapSize);const fe=K.getFrameExtents();if(r.multiply(fe),s.copy(K.mapSize),(r.x>u||r.y>u)&&(r.x>u&&(s.x=Math.floor(u/fe.x),r.x=s.x*fe.x,K.mapSize.x=s.x),r.y>u&&(s.y=Math.floor(u/fe.y),r.y=s.y*fe.y,K.mapSize.y=s.y)),K.map===null||B===!0||X===!0){const oe=this.type!==vi?{minFilter:Vt,magFilter:Vt}:{};K.map!==null&&K.map.dispose(),K.map=new ui(r.x,r.y,oe),K.map.texture.name=Q.name+".shadowMap",K.camera.updateProjectionMatrix()}i.setRenderTarget(K.map),i.clear();const ge=K.getViewportCount();for(let oe=0;oe<ge;oe++){const Te=K.getViewport(oe);o.set(s.x*Te.x,s.y*Te.y,s.x*Te.z,s.y*Te.w),D.viewport(o),K.updateMatrices(Q,oe),n=K.getFrustum(),b(T,S,K.camera,Q,this.type)}K.isPointLightShadow!==!0&&this.type===vi&&M(K,S),K.needsUpdate=!1}g=this.type,m.needsUpdate=!1,i.setRenderTarget(_,v,A)};function M(w,T){const S=e.update(y);f.defines.VSM_SAMPLES!==w.blurSamples&&(f.defines.VSM_SAMPLES=w.blurSamples,d.defines.VSM_SAMPLES=w.blurSamples,f.needsUpdate=!0,d.needsUpdate=!0),w.mapPass===null&&(w.mapPass=new ui(r.x,r.y)),f.uniforms.shadow_pass.value=w.map.texture,f.uniforms.resolution.value=w.mapSize,f.uniforms.radius.value=w.radius,i.setRenderTarget(w.mapPass),i.clear(),i.renderBufferDirect(T,null,S,f,y,null),d.uniforms.shadow_pass.value=w.mapPass.texture,d.uniforms.resolution.value=w.mapSize,d.uniforms.radius.value=w.radius,i.setRenderTarget(w.map),i.clear(),i.renderBufferDirect(T,null,S,d,y,null)}function x(w,T,S,_){let v=null;const A=S.isPointLight===!0?w.customDistanceMaterial:w.customDepthMaterial;if(A!==void 0)v=A;else if(v=S.isPointLight===!0?l:a,i.localClippingEnabled&&T.clipShadows===!0&&Array.isArray(T.clippingPlanes)&&T.clippingPlanes.length!==0||T.displacementMap&&T.displacementScale!==0||T.alphaMap&&T.alphaTest>0||T.map&&T.alphaTest>0||T.alphaToCoverage===!0){const D=v.uuid,B=T.uuid;let X=c[D];X===void 0&&(X={},c[D]=X);let Y=X[B];Y===void 0&&(Y=v.clone(),X[B]=Y,T.addEventListener("dispose",C)),v=Y}if(v.visible=T.visible,v.wireframe=T.wireframe,_===vi?v.side=T.shadowSide!==null?T.shadowSide:T.side:v.side=T.shadowSide!==null?T.shadowSide:h[T.side],v.alphaMap=T.alphaMap,v.alphaTest=T.alphaToCoverage===!0?.5:T.alphaTest,v.map=T.map,v.clipShadows=T.clipShadows,v.clippingPlanes=T.clippingPlanes,v.clipIntersection=T.clipIntersection,v.displacementMap=T.displacementMap,v.displacementScale=T.displacementScale,v.displacementBias=T.displacementBias,v.wireframeLinewidth=T.wireframeLinewidth,v.linewidth=T.linewidth,S.isPointLight===!0&&v.isMeshDistanceMaterial===!0){const D=i.properties.get(v);D.light=S}return v}function b(w,T,S,_,v){if(w.visible===!1)return;if(w.layers.test(T.layers)&&(w.isMesh||w.isLine||w.isPoints)&&(w.castShadow||w.receiveShadow&&v===vi)&&(!w.frustumCulled||n.intersectsObject(w))){w.modelViewMatrix.multiplyMatrices(S.matrixWorldInverse,w.matrixWorld);const B=e.update(w),X=w.material;if(Array.isArray(X)){const Y=B.groups;for(let z=0,Q=Y.length;z<Q;z++){const K=Y[z],fe=X[K.materialIndex];if(fe&&fe.visible){const ge=x(w,fe,_,v);w.onBeforeShadow(i,w,T,S,B,ge,K),i.renderBufferDirect(S,null,B,ge,w,K),w.onAfterShadow(i,w,T,S,B,ge,K)}}}else if(X.visible){const Y=x(w,X,_,v);w.onBeforeShadow(i,w,T,S,B,Y,null),i.renderBufferDirect(S,null,B,Y,w,null),w.onAfterShadow(i,w,T,S,B,Y,null)}}const D=w.children;for(let B=0,X=D.length;B<X;B++)b(D[B],T,S,_,v)}function C(w){w.target.removeEventListener("dispose",C);for(const S in c){const _=c[S],v=w.target.uuid;v in _&&(_[v].dispose(),delete _[v])}}}const rI={[Ec]:Ac,[Cc]:Pc,[Rc]:Lc,[ds]:Ic,[Ac]:Ec,[Pc]:Cc,[Lc]:Rc,[Ic]:ds};function sI(i,e){function t(){let W=!1;const Ae=new rt;let ye=null;const Oe=new rt(0,0,0,0);return{setMask:function(be){ye!==be&&!W&&(i.colorMask(be,be,be,be),ye=be)},setLocked:function(be){W=be},setClear:function(be,me,Ne,qe,mt){mt===!0&&(be*=qe,me*=qe,Ne*=qe),Ae.set(be,me,Ne,qe),Oe.equals(Ae)===!1&&(i.clearColor(be,me,Ne,qe),Oe.copy(Ae))},reset:function(){W=!1,ye=null,Oe.set(-1,0,0,0)}}}function n(){let W=!1,Ae=!1,ye=null,Oe=null,be=null;return{setReversed:function(me){if(Ae!==me){const Ne=e.get("EXT_clip_control");me?Ne.clipControlEXT(Ne.LOWER_LEFT_EXT,Ne.ZERO_TO_ONE_EXT):Ne.clipControlEXT(Ne.LOWER_LEFT_EXT,Ne.NEGATIVE_ONE_TO_ONE_EXT),Ae=me;const qe=be;be=null,this.setClear(qe)}},getReversed:function(){return Ae},setTest:function(me){me?Se(i.DEPTH_TEST):le(i.DEPTH_TEST)},setMask:function(me){ye!==me&&!W&&(i.depthMask(me),ye=me)},setFunc:function(me){if(Ae&&(me=rI[me]),Oe!==me){switch(me){case Ec:i.depthFunc(i.NEVER);break;case Ac:i.depthFunc(i.ALWAYS);break;case Cc:i.depthFunc(i.LESS);break;case ds:i.depthFunc(i.LEQUAL);break;case Rc:i.depthFunc(i.EQUAL);break;case Ic:i.depthFunc(i.GEQUAL);break;case Pc:i.depthFunc(i.GREATER);break;case Lc:i.depthFunc(i.NOTEQUAL);break;default:i.depthFunc(i.LEQUAL)}Oe=me}},setLocked:function(me){W=me},setClear:function(me){be!==me&&(Ae&&(me=1-me),i.clearDepth(me),be=me)},reset:function(){W=!1,ye=null,Oe=null,be=null,Ae=!1}}}function r(){let W=!1,Ae=null,ye=null,Oe=null,be=null,me=null,Ne=null,qe=null,mt=null;return{setTest:function(lt){W||(lt?Se(i.STENCIL_TEST):le(i.STENCIL_TEST))},setMask:function(lt){Ae!==lt&&!W&&(i.stencilMask(lt),Ae=lt)},setFunc:function(lt,rn,Ci){(ye!==lt||Oe!==rn||be!==Ci)&&(i.stencilFunc(lt,rn,Ci),ye=lt,Oe=rn,be=Ci)},setOp:function(lt,rn,Ci){(me!==lt||Ne!==rn||qe!==Ci)&&(i.stencilOp(lt,rn,Ci),me=lt,Ne=rn,qe=Ci)},setLocked:function(lt){W=lt},setClear:function(lt){mt!==lt&&(i.clearStencil(lt),mt=lt)},reset:function(){W=!1,Ae=null,ye=null,Oe=null,be=null,me=null,Ne=null,qe=null,mt=null}}}const s=new t,o=new n,a=new r,l=new WeakMap,c=new WeakMap;let u={},h={},f=new WeakMap,d=[],p=null,y=!1,m=null,g=null,M=null,x=null,b=null,C=null,w=null,T=new Ee(0,0,0),S=0,_=!1,v=null,A=null,D=null,B=null,X=null;const Y=i.getParameter(i.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let z=!1,Q=0;const K=i.getParameter(i.VERSION);K.indexOf("WebGL")!==-1?(Q=parseFloat(/^WebGL (\d)/.exec(K)[1]),z=Q>=1):K.indexOf("OpenGL ES")!==-1&&(Q=parseFloat(/^OpenGL ES (\d)/.exec(K)[1]),z=Q>=2);let fe=null,ge={};const oe=i.getParameter(i.SCISSOR_BOX),Te=i.getParameter(i.VIEWPORT),ke=new rt().fromArray(oe),ae=new rt().fromArray(Te);function ve(W,Ae,ye,Oe){const be=new Uint8Array(4),me=i.createTexture();i.bindTexture(W,me),i.texParameteri(W,i.TEXTURE_MIN_FILTER,i.NEAREST),i.texParameteri(W,i.TEXTURE_MAG_FILTER,i.NEAREST);for(let Ne=0;Ne<ye;Ne++)W===i.TEXTURE_3D||W===i.TEXTURE_2D_ARRAY?i.texImage3D(Ae,0,i.RGBA,1,1,Oe,0,i.RGBA,i.UNSIGNED_BYTE,be):i.texImage2D(Ae+Ne,0,i.RGBA,1,1,0,i.RGBA,i.UNSIGNED_BYTE,be);return me}const Re={};Re[i.TEXTURE_2D]=ve(i.TEXTURE_2D,i.TEXTURE_2D,1),Re[i.TEXTURE_CUBE_MAP]=ve(i.TEXTURE_CUBE_MAP,i.TEXTURE_CUBE_MAP_POSITIVE_X,6),Re[i.TEXTURE_2D_ARRAY]=ve(i.TEXTURE_2D_ARRAY,i.TEXTURE_2D_ARRAY,1,1),Re[i.TEXTURE_3D]=ve(i.TEXTURE_3D,i.TEXTURE_3D,1,1),s.setClear(0,0,0,1),o.setClear(1),a.setClear(0),Se(i.DEPTH_TEST),o.setFunc(ds),V(!1),$(Vf),Se(i.CULL_FACE),E(Vi);function Se(W){u[W]!==!0&&(i.enable(W),u[W]=!0)}function le(W){u[W]!==!1&&(i.disable(W),u[W]=!1)}function I(W,Ae){return h[W]!==Ae?(i.bindFramebuffer(W,Ae),h[W]=Ae,W===i.DRAW_FRAMEBUFFER&&(h[i.FRAMEBUFFER]=Ae),W===i.FRAMEBUFFER&&(h[i.DRAW_FRAMEBUFFER]=Ae),!0):!1}function F(W,Ae){let ye=d,Oe=!1;if(W){ye=f.get(Ae),ye===void 0&&(ye=[],f.set(Ae,ye));const be=W.textures;if(ye.length!==be.length||ye[0]!==i.COLOR_ATTACHMENT0){for(let me=0,Ne=be.length;me<Ne;me++)ye[me]=i.COLOR_ATTACHMENT0+me;ye.length=be.length,Oe=!0}}else ye[0]!==i.BACK&&(ye[0]=i.BACK,Oe=!0);Oe&&i.drawBuffers(ye)}function q(W){return p!==W?(i.useProgram(W),p=W,!0):!1}const P={[pr]:i.FUNC_ADD,[X0]:i.FUNC_SUBTRACT,[Y0]:i.FUNC_REVERSE_SUBTRACT};P[q0]=i.MIN,P[j0]=i.MAX;const L={[$0]:i.ZERO,[Z0]:i.ONE,[K0]:i.SRC_COLOR,[wc]:i.SRC_ALPHA,[i_]:i.SRC_ALPHA_SATURATE,[t_]:i.DST_COLOR,[Q0]:i.DST_ALPHA,[J0]:i.ONE_MINUS_SRC_COLOR,[Tc]:i.ONE_MINUS_SRC_ALPHA,[n_]:i.ONE_MINUS_DST_COLOR,[e_]:i.ONE_MINUS_DST_ALPHA,[r_]:i.CONSTANT_COLOR,[s_]:i.ONE_MINUS_CONSTANT_COLOR,[o_]:i.CONSTANT_ALPHA,[a_]:i.ONE_MINUS_CONSTANT_ALPHA};function E(W,Ae,ye,Oe,be,me,Ne,qe,mt,lt){if(W===Vi){y===!0&&(le(i.BLEND),y=!1);return}if(y===!1&&(Se(i.BLEND),y=!0),W!==W0){if(W!==m||lt!==_){if((g!==pr||b!==pr)&&(i.blendEquation(i.FUNC_ADD),g=pr,b=pr),lt)switch(W){case ss:i.blendFuncSeparate(i.ONE,i.ONE_MINUS_SRC_ALPHA,i.ONE,i.ONE_MINUS_SRC_ALPHA);break;case Sc:i.blendFunc(i.ONE,i.ONE);break;case Hf:i.blendFuncSeparate(i.ZERO,i.ONE_MINUS_SRC_COLOR,i.ZERO,i.ONE);break;case Gf:i.blendFuncSeparate(i.DST_COLOR,i.ONE_MINUS_SRC_ALPHA,i.ZERO,i.ONE);break;default:console.error("THREE.WebGLState: Invalid blending: ",W);break}else switch(W){case ss:i.blendFuncSeparate(i.SRC_ALPHA,i.ONE_MINUS_SRC_ALPHA,i.ONE,i.ONE_MINUS_SRC_ALPHA);break;case Sc:i.blendFuncSeparate(i.SRC_ALPHA,i.ONE,i.ONE,i.ONE);break;case Hf:console.error("THREE.WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true");break;case Gf:console.error("THREE.WebGLState: MultiplyBlending requires material.premultipliedAlpha = true");break;default:console.error("THREE.WebGLState: Invalid blending: ",W);break}M=null,x=null,C=null,w=null,T.set(0,0,0),S=0,m=W,_=lt}return}be=be||Ae,me=me||ye,Ne=Ne||Oe,(Ae!==g||be!==b)&&(i.blendEquationSeparate(P[Ae],P[be]),g=Ae,b=be),(ye!==M||Oe!==x||me!==C||Ne!==w)&&(i.blendFuncSeparate(L[ye],L[Oe],L[me],L[Ne]),M=ye,x=Oe,C=me,w=Ne),(qe.equals(T)===!1||mt!==S)&&(i.blendColor(qe.r,qe.g,qe.b,mt),T.copy(qe),S=mt),m=W,_=!1}function G(W,Ae){W.side===Dn?le(i.CULL_FACE):Se(i.CULL_FACE);let ye=W.side===fn;Ae&&(ye=!ye),V(ye),W.blending===ss&&W.transparent===!1?E(Vi):E(W.blending,W.blendEquation,W.blendSrc,W.blendDst,W.blendEquationAlpha,W.blendSrcAlpha,W.blendDstAlpha,W.blendColor,W.blendAlpha,W.premultipliedAlpha),o.setFunc(W.depthFunc),o.setTest(W.depthTest),o.setMask(W.depthWrite),s.setMask(W.colorWrite);const Oe=W.stencilWrite;a.setTest(Oe),Oe&&(a.setMask(W.stencilWriteMask),a.setFunc(W.stencilFunc,W.stencilRef,W.stencilFuncMask),a.setOp(W.stencilFail,W.stencilZFail,W.stencilZPass)),ee(W.polygonOffset,W.polygonOffsetFactor,W.polygonOffsetUnits),W.alphaToCoverage===!0?Se(i.SAMPLE_ALPHA_TO_COVERAGE):le(i.SAMPLE_ALPHA_TO_COVERAGE)}function V(W){v!==W&&(W?i.frontFace(i.CW):i.frontFace(i.CCW),v=W)}function $(W){W!==H0?(Se(i.CULL_FACE),W!==A&&(W===Vf?i.cullFace(i.BACK):W===G0?i.cullFace(i.FRONT):i.cullFace(i.FRONT_AND_BACK))):le(i.CULL_FACE),A=W}function H(W){W!==D&&(z&&i.lineWidth(W),D=W)}function ee(W,Ae,ye){W?(Se(i.POLYGON_OFFSET_FILL),(B!==Ae||X!==ye)&&(i.polygonOffset(Ae,ye),B=Ae,X=ye)):le(i.POLYGON_OFFSET_FILL)}function Z(W){W?Se(i.SCISSOR_TEST):le(i.SCISSOR_TEST)}function J(W){W===void 0&&(W=i.TEXTURE0+Y-1),fe!==W&&(i.activeTexture(W),fe=W)}function pe(W,Ae,ye){ye===void 0&&(fe===null?ye=i.TEXTURE0+Y-1:ye=fe);let Oe=ge[ye];Oe===void 0&&(Oe={type:void 0,texture:void 0},ge[ye]=Oe),(Oe.type!==W||Oe.texture!==Ae)&&(fe!==ye&&(i.activeTexture(ye),fe=ye),i.bindTexture(W,Ae||Re[W]),Oe.type=W,Oe.texture=Ae)}function U(){const W=ge[fe];W!==void 0&&W.type!==void 0&&(i.bindTexture(W.type,null),W.type=void 0,W.texture=void 0)}function R(){try{i.compressedTexImage2D(...arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function j(){try{i.compressedTexImage3D(...arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function ie(){try{i.texSubImage2D(...arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function he(){try{i.texSubImage3D(...arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function se(){try{i.compressedTexSubImage2D(...arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function Ce(){try{i.compressedTexSubImage3D(...arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function xe(){try{i.texStorage2D(...arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function Pe(){try{i.texStorage3D(...arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function Le(){try{i.texImage2D(...arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function _e(){try{i.texImage3D(...arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function Ue(W){ke.equals(W)===!1&&(i.scissor(W.x,W.y,W.z,W.w),ke.copy(W))}function Fe(W){ae.equals(W)===!1&&(i.viewport(W.x,W.y,W.z,W.w),ae.copy(W))}function k(W,Ae){let ye=c.get(Ae);ye===void 0&&(ye=new WeakMap,c.set(Ae,ye));let Oe=ye.get(W);Oe===void 0&&(Oe=i.getUniformBlockIndex(Ae,W.name),ye.set(W,Oe))}function re(W,Ae){const Oe=c.get(Ae).get(W);l.get(Ae)!==Oe&&(i.uniformBlockBinding(Ae,Oe,W.__bindingPointIndex),l.set(Ae,Oe))}function Me(){i.disable(i.BLEND),i.disable(i.CULL_FACE),i.disable(i.DEPTH_TEST),i.disable(i.POLYGON_OFFSET_FILL),i.disable(i.SCISSOR_TEST),i.disable(i.STENCIL_TEST),i.disable(i.SAMPLE_ALPHA_TO_COVERAGE),i.blendEquation(i.FUNC_ADD),i.blendFunc(i.ONE,i.ZERO),i.blendFuncSeparate(i.ONE,i.ZERO,i.ONE,i.ZERO),i.blendColor(0,0,0,0),i.colorMask(!0,!0,!0,!0),i.clearColor(0,0,0,0),i.depthMask(!0),i.depthFunc(i.LESS),o.setReversed(!1),i.clearDepth(1),i.stencilMask(4294967295),i.stencilFunc(i.ALWAYS,0,4294967295),i.stencilOp(i.KEEP,i.KEEP,i.KEEP),i.clearStencil(0),i.cullFace(i.BACK),i.frontFace(i.CCW),i.polygonOffset(0,0),i.activeTexture(i.TEXTURE0),i.bindFramebuffer(i.FRAMEBUFFER,null),i.bindFramebuffer(i.DRAW_FRAMEBUFFER,null),i.bindFramebuffer(i.READ_FRAMEBUFFER,null),i.useProgram(null),i.lineWidth(1),i.scissor(0,0,i.canvas.width,i.canvas.height),i.viewport(0,0,i.canvas.width,i.canvas.height),u={},fe=null,ge={},h={},f=new WeakMap,d=[],p=null,y=!1,m=null,g=null,M=null,x=null,b=null,C=null,w=null,T=new Ee(0,0,0),S=0,_=!1,v=null,A=null,D=null,B=null,X=null,ke.set(0,0,i.canvas.width,i.canvas.height),ae.set(0,0,i.canvas.width,i.canvas.height),s.reset(),o.reset(),a.reset()}return{buffers:{color:s,depth:o,stencil:a},enable:Se,disable:le,bindFramebuffer:I,drawBuffers:F,useProgram:q,setBlending:E,setMaterial:G,setFlipSided:V,setCullFace:$,setLineWidth:H,setPolygonOffset:ee,setScissorTest:Z,activeTexture:J,bindTexture:pe,unbindTexture:U,compressedTexImage2D:R,compressedTexImage3D:j,texImage2D:Le,texImage3D:_e,updateUBOMapping:k,uniformBlockBinding:re,texStorage2D:xe,texStorage3D:Pe,texSubImage2D:ie,texSubImage3D:he,compressedTexSubImage2D:se,compressedTexSubImage3D:Ce,scissor:Ue,viewport:Fe,reset:Me}}function oI(i,e,t,n,r,s,o){const a=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,l=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),c=new de,u=new WeakMap;let h;const f=new WeakMap;let d=!1;try{d=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function p(U,R){return d?new OffscreenCanvas(U,R):Pa("canvas")}function y(U,R,j){let ie=1;const he=pe(U);if((he.width>j||he.height>j)&&(ie=j/Math.max(he.width,he.height)),ie<1)if(typeof HTMLImageElement<"u"&&U instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&U instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&U instanceof ImageBitmap||typeof VideoFrame<"u"&&U instanceof VideoFrame){const se=Math.floor(ie*he.width),Ce=Math.floor(ie*he.height);h===void 0&&(h=p(se,Ce));const xe=R?p(se,Ce):h;return xe.width=se,xe.height=Ce,xe.getContext("2d").drawImage(U,0,0,se,Ce),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+he.width+"x"+he.height+") to ("+se+"x"+Ce+")."),xe}else return"data"in U&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+he.width+"x"+he.height+")."),U;return U}function m(U){return U.generateMipmaps}function g(U){i.generateMipmap(U)}function M(U){return U.isWebGLCubeRenderTarget?i.TEXTURE_CUBE_MAP:U.isWebGL3DRenderTarget?i.TEXTURE_3D:U.isWebGLArrayRenderTarget||U.isCompressedArrayTexture?i.TEXTURE_2D_ARRAY:i.TEXTURE_2D}function x(U,R,j,ie,he=!1){if(U!==null){if(i[U]!==void 0)return i[U];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+U+"'")}let se=R;if(R===i.RED&&(j===i.FLOAT&&(se=i.R32F),j===i.HALF_FLOAT&&(se=i.R16F),j===i.UNSIGNED_BYTE&&(se=i.R8)),R===i.RED_INTEGER&&(j===i.UNSIGNED_BYTE&&(se=i.R8UI),j===i.UNSIGNED_SHORT&&(se=i.R16UI),j===i.UNSIGNED_INT&&(se=i.R32UI),j===i.BYTE&&(se=i.R8I),j===i.SHORT&&(se=i.R16I),j===i.INT&&(se=i.R32I)),R===i.RG&&(j===i.FLOAT&&(se=i.RG32F),j===i.HALF_FLOAT&&(se=i.RG16F),j===i.UNSIGNED_BYTE&&(se=i.RG8)),R===i.RG_INTEGER&&(j===i.UNSIGNED_BYTE&&(se=i.RG8UI),j===i.UNSIGNED_SHORT&&(se=i.RG16UI),j===i.UNSIGNED_INT&&(se=i.RG32UI),j===i.BYTE&&(se=i.RG8I),j===i.SHORT&&(se=i.RG16I),j===i.INT&&(se=i.RG32I)),R===i.RGB_INTEGER&&(j===i.UNSIGNED_BYTE&&(se=i.RGB8UI),j===i.UNSIGNED_SHORT&&(se=i.RGB16UI),j===i.UNSIGNED_INT&&(se=i.RGB32UI),j===i.BYTE&&(se=i.RGB8I),j===i.SHORT&&(se=i.RGB16I),j===i.INT&&(se=i.RGB32I)),R===i.RGBA_INTEGER&&(j===i.UNSIGNED_BYTE&&(se=i.RGBA8UI),j===i.UNSIGNED_SHORT&&(se=i.RGBA16UI),j===i.UNSIGNED_INT&&(se=i.RGBA32UI),j===i.BYTE&&(se=i.RGBA8I),j===i.SHORT&&(se=i.RGBA16I),j===i.INT&&(se=i.RGBA32I)),R===i.RGB&&j===i.UNSIGNED_INT_5_9_9_9_REV&&(se=i.RGB9_E5),R===i.RGBA){const Ce=he?Ca:ct.getTransfer(ie);j===i.FLOAT&&(se=i.RGBA32F),j===i.HALF_FLOAT&&(se=i.RGBA16F),j===i.UNSIGNED_BYTE&&(se=Ce===vt?i.SRGB8_ALPHA8:i.RGBA8),j===i.UNSIGNED_SHORT_4_4_4_4&&(se=i.RGBA4),j===i.UNSIGNED_SHORT_5_5_5_1&&(se=i.RGB5_A1)}return(se===i.R16F||se===i.R32F||se===i.RG16F||se===i.RG32F||se===i.RGBA16F||se===i.RGBA32F)&&e.get("EXT_color_buffer_float"),se}function b(U,R){let j;return U?R===null||R===$i||R===mo?j=i.DEPTH24_STENCIL8:R===On?j=i.DEPTH32F_STENCIL8:R===po&&(j=i.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):R===null||R===$i||R===mo?j=i.DEPTH_COMPONENT24:R===On?j=i.DEPTH_COMPONENT32F:R===po&&(j=i.DEPTH_COMPONENT16),j}function C(U,R){return m(U)===!0||U.isFramebufferTexture&&U.minFilter!==Vt&&U.minFilter!==Yt?Math.log2(Math.max(R.width,R.height))+1:U.mipmaps!==void 0&&U.mipmaps.length>0?U.mipmaps.length:U.isCompressedTexture&&Array.isArray(U.image)?R.mipmaps.length:1}function w(U){const R=U.target;R.removeEventListener("dispose",w),S(R),R.isVideoTexture&&u.delete(R)}function T(U){const R=U.target;R.removeEventListener("dispose",T),v(R)}function S(U){const R=n.get(U);if(R.__webglInit===void 0)return;const j=U.source,ie=f.get(j);if(ie){const he=ie[R.__cacheKey];he.usedTimes--,he.usedTimes===0&&_(U),Object.keys(ie).length===0&&f.delete(j)}n.remove(U)}function _(U){const R=n.get(U);i.deleteTexture(R.__webglTexture);const j=U.source,ie=f.get(j);delete ie[R.__cacheKey],o.memory.textures--}function v(U){const R=n.get(U);if(U.depthTexture&&(U.depthTexture.dispose(),n.remove(U.depthTexture)),U.isWebGLCubeRenderTarget)for(let ie=0;ie<6;ie++){if(Array.isArray(R.__webglFramebuffer[ie]))for(let he=0;he<R.__webglFramebuffer[ie].length;he++)i.deleteFramebuffer(R.__webglFramebuffer[ie][he]);else i.deleteFramebuffer(R.__webglFramebuffer[ie]);R.__webglDepthbuffer&&i.deleteRenderbuffer(R.__webglDepthbuffer[ie])}else{if(Array.isArray(R.__webglFramebuffer))for(let ie=0;ie<R.__webglFramebuffer.length;ie++)i.deleteFramebuffer(R.__webglFramebuffer[ie]);else i.deleteFramebuffer(R.__webglFramebuffer);if(R.__webglDepthbuffer&&i.deleteRenderbuffer(R.__webglDepthbuffer),R.__webglMultisampledFramebuffer&&i.deleteFramebuffer(R.__webglMultisampledFramebuffer),R.__webglColorRenderbuffer)for(let ie=0;ie<R.__webglColorRenderbuffer.length;ie++)R.__webglColorRenderbuffer[ie]&&i.deleteRenderbuffer(R.__webglColorRenderbuffer[ie]);R.__webglDepthRenderbuffer&&i.deleteRenderbuffer(R.__webglDepthRenderbuffer)}const j=U.textures;for(let ie=0,he=j.length;ie<he;ie++){const se=n.get(j[ie]);se.__webglTexture&&(i.deleteTexture(se.__webglTexture),o.memory.textures--),n.remove(j[ie])}n.remove(U)}let A=0;function D(){A=0}function B(){const U=A;return U>=r.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+U+" texture units while this GPU supports only "+r.maxTextures),A+=1,U}function X(U){const R=[];return R.push(U.wrapS),R.push(U.wrapT),R.push(U.wrapR||0),R.push(U.magFilter),R.push(U.minFilter),R.push(U.anisotropy),R.push(U.internalFormat),R.push(U.format),R.push(U.type),R.push(U.generateMipmaps),R.push(U.premultiplyAlpha),R.push(U.flipY),R.push(U.unpackAlignment),R.push(U.colorSpace),R.join()}function Y(U,R){const j=n.get(U);if(U.isVideoTexture&&Z(U),U.isRenderTargetTexture===!1&&U.version>0&&j.__version!==U.version){const ie=U.image;if(ie===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(ie.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Re(j,U,R);return}}t.bindTexture(i.TEXTURE_2D,j.__webglTexture,i.TEXTURE0+R)}function z(U,R){const j=n.get(U);if(U.version>0&&j.__version!==U.version){Re(j,U,R);return}t.bindTexture(i.TEXTURE_2D_ARRAY,j.__webglTexture,i.TEXTURE0+R)}function Q(U,R){const j=n.get(U);if(U.version>0&&j.__version!==U.version){Re(j,U,R);return}t.bindTexture(i.TEXTURE_3D,j.__webglTexture,i.TEXTURE0+R)}function K(U,R){const j=n.get(U);if(U.version>0&&j.__version!==U.version){Se(j,U,R);return}t.bindTexture(i.TEXTURE_CUBE_MAP,j.__webglTexture,i.TEXTURE0+R)}const fe={[ho]:i.REPEAT,[nn]:i.CLAMP_TO_EDGE,[fo]:i.MIRRORED_REPEAT},ge={[Vt]:i.NEAREST,[Tu]:i.NEAREST_MIPMAP_NEAREST,[Jr]:i.NEAREST_MIPMAP_LINEAR,[Yt]:i.LINEAR,[so]:i.LINEAR_MIPMAP_NEAREST,[ii]:i.LINEAR_MIPMAP_LINEAR},oe={[S_]:i.NEVER,[R_]:i.ALWAYS,[w_]:i.LESS,[Kd]:i.LEQUAL,[T_]:i.EQUAL,[C_]:i.GEQUAL,[E_]:i.GREATER,[A_]:i.NOTEQUAL};function Te(U,R){if(R.type===On&&e.has("OES_texture_float_linear")===!1&&(R.magFilter===Yt||R.magFilter===so||R.magFilter===Jr||R.magFilter===ii||R.minFilter===Yt||R.minFilter===so||R.minFilter===Jr||R.minFilter===ii)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),i.texParameteri(U,i.TEXTURE_WRAP_S,fe[R.wrapS]),i.texParameteri(U,i.TEXTURE_WRAP_T,fe[R.wrapT]),(U===i.TEXTURE_3D||U===i.TEXTURE_2D_ARRAY)&&i.texParameteri(U,i.TEXTURE_WRAP_R,fe[R.wrapR]),i.texParameteri(U,i.TEXTURE_MAG_FILTER,ge[R.magFilter]),i.texParameteri(U,i.TEXTURE_MIN_FILTER,ge[R.minFilter]),R.compareFunction&&(i.texParameteri(U,i.TEXTURE_COMPARE_MODE,i.COMPARE_REF_TO_TEXTURE),i.texParameteri(U,i.TEXTURE_COMPARE_FUNC,oe[R.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(R.magFilter===Vt||R.minFilter!==Jr&&R.minFilter!==ii||R.type===On&&e.has("OES_texture_float_linear")===!1)return;if(R.anisotropy>1||n.get(R).__currentAnisotropy){const j=e.get("EXT_texture_filter_anisotropic");i.texParameterf(U,j.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(R.anisotropy,r.getMaxAnisotropy())),n.get(R).__currentAnisotropy=R.anisotropy}}}function ke(U,R){let j=!1;U.__webglInit===void 0&&(U.__webglInit=!0,R.addEventListener("dispose",w));const ie=R.source;let he=f.get(ie);he===void 0&&(he={},f.set(ie,he));const se=X(R);if(se!==U.__cacheKey){he[se]===void 0&&(he[se]={texture:i.createTexture(),usedTimes:0},o.memory.textures++,j=!0),he[se].usedTimes++;const Ce=he[U.__cacheKey];Ce!==void 0&&(he[U.__cacheKey].usedTimes--,Ce.usedTimes===0&&_(R)),U.__cacheKey=se,U.__webglTexture=he[se].texture}return j}function ae(U,R,j){return Math.floor(Math.floor(U/j)/R)}function ve(U,R,j,ie){const se=U.updateRanges;if(se.length===0)t.texSubImage2D(i.TEXTURE_2D,0,0,0,R.width,R.height,j,ie,R.data);else{se.sort((_e,Ue)=>_e.start-Ue.start);let Ce=0;for(let _e=1;_e<se.length;_e++){const Ue=se[Ce],Fe=se[_e],k=Ue.start+Ue.count,re=ae(Fe.start,R.width,4),Me=ae(Ue.start,R.width,4);Fe.start<=k+1&&re===Me&&ae(Fe.start+Fe.count-1,R.width,4)===re?Ue.count=Math.max(Ue.count,Fe.start+Fe.count-Ue.start):(++Ce,se[Ce]=Fe)}se.length=Ce+1;const xe=i.getParameter(i.UNPACK_ROW_LENGTH),Pe=i.getParameter(i.UNPACK_SKIP_PIXELS),Le=i.getParameter(i.UNPACK_SKIP_ROWS);i.pixelStorei(i.UNPACK_ROW_LENGTH,R.width);for(let _e=0,Ue=se.length;_e<Ue;_e++){const Fe=se[_e],k=Math.floor(Fe.start/4),re=Math.ceil(Fe.count/4),Me=k%R.width,W=Math.floor(k/R.width),Ae=re,ye=1;i.pixelStorei(i.UNPACK_SKIP_PIXELS,Me),i.pixelStorei(i.UNPACK_SKIP_ROWS,W),t.texSubImage2D(i.TEXTURE_2D,0,Me,W,Ae,ye,j,ie,R.data)}U.clearUpdateRanges(),i.pixelStorei(i.UNPACK_ROW_LENGTH,xe),i.pixelStorei(i.UNPACK_SKIP_PIXELS,Pe),i.pixelStorei(i.UNPACK_SKIP_ROWS,Le)}}function Re(U,R,j){let ie=i.TEXTURE_2D;(R.isDataArrayTexture||R.isCompressedArrayTexture)&&(ie=i.TEXTURE_2D_ARRAY),R.isData3DTexture&&(ie=i.TEXTURE_3D);const he=ke(U,R),se=R.source;t.bindTexture(ie,U.__webglTexture,i.TEXTURE0+j);const Ce=n.get(se);if(se.version!==Ce.__version||he===!0){t.activeTexture(i.TEXTURE0+j);const xe=ct.getPrimaries(ct.workingColorSpace),Pe=R.colorSpace===zi?null:ct.getPrimaries(R.colorSpace),Le=R.colorSpace===zi||xe===Pe?i.NONE:i.BROWSER_DEFAULT_WEBGL;i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,R.flipY),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,R.premultiplyAlpha),i.pixelStorei(i.UNPACK_ALIGNMENT,R.unpackAlignment),i.pixelStorei(i.UNPACK_COLORSPACE_CONVERSION_WEBGL,Le);let _e=y(R.image,!1,r.maxTextureSize);_e=J(R,_e);const Ue=s.convert(R.format,R.colorSpace),Fe=s.convert(R.type);let k=x(R.internalFormat,Ue,Fe,R.colorSpace,R.isVideoTexture);Te(ie,R);let re;const Me=R.mipmaps,W=R.isVideoTexture!==!0,Ae=Ce.__version===void 0||he===!0,ye=se.dataReady,Oe=C(R,_e);if(R.isDepthTexture)k=b(R.format===vo,R.type),Ae&&(W?t.texStorage2D(i.TEXTURE_2D,1,k,_e.width,_e.height):t.texImage2D(i.TEXTURE_2D,0,k,_e.width,_e.height,0,Ue,Fe,null));else if(R.isDataTexture)if(Me.length>0){W&&Ae&&t.texStorage2D(i.TEXTURE_2D,Oe,k,Me[0].width,Me[0].height);for(let be=0,me=Me.length;be<me;be++)re=Me[be],W?ye&&t.texSubImage2D(i.TEXTURE_2D,be,0,0,re.width,re.height,Ue,Fe,re.data):t.texImage2D(i.TEXTURE_2D,be,k,re.width,re.height,0,Ue,Fe,re.data);R.generateMipmaps=!1}else W?(Ae&&t.texStorage2D(i.TEXTURE_2D,Oe,k,_e.width,_e.height),ye&&ve(R,_e,Ue,Fe)):t.texImage2D(i.TEXTURE_2D,0,k,_e.width,_e.height,0,Ue,Fe,_e.data);else if(R.isCompressedTexture)if(R.isCompressedArrayTexture){W&&Ae&&t.texStorage3D(i.TEXTURE_2D_ARRAY,Oe,k,Me[0].width,Me[0].height,_e.depth);for(let be=0,me=Me.length;be<me;be++)if(re=Me[be],R.format!==Zt)if(Ue!==null)if(W){if(ye)if(R.layerUpdates.size>0){const Ne=ed(re.width,re.height,R.format,R.type);for(const qe of R.layerUpdates){const mt=re.data.subarray(qe*Ne/re.data.BYTES_PER_ELEMENT,(qe+1)*Ne/re.data.BYTES_PER_ELEMENT);t.compressedTexSubImage3D(i.TEXTURE_2D_ARRAY,be,0,0,qe,re.width,re.height,1,Ue,mt)}R.clearLayerUpdates()}else t.compressedTexSubImage3D(i.TEXTURE_2D_ARRAY,be,0,0,0,re.width,re.height,_e.depth,Ue,re.data)}else t.compressedTexImage3D(i.TEXTURE_2D_ARRAY,be,k,re.width,re.height,_e.depth,0,re.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else W?ye&&t.texSubImage3D(i.TEXTURE_2D_ARRAY,be,0,0,0,re.width,re.height,_e.depth,Ue,Fe,re.data):t.texImage3D(i.TEXTURE_2D_ARRAY,be,k,re.width,re.height,_e.depth,0,Ue,Fe,re.data)}else{W&&Ae&&t.texStorage2D(i.TEXTURE_2D,Oe,k,Me[0].width,Me[0].height);for(let be=0,me=Me.length;be<me;be++)re=Me[be],R.format!==Zt?Ue!==null?W?ye&&t.compressedTexSubImage2D(i.TEXTURE_2D,be,0,0,re.width,re.height,Ue,re.data):t.compressedTexImage2D(i.TEXTURE_2D,be,k,re.width,re.height,0,re.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):W?ye&&t.texSubImage2D(i.TEXTURE_2D,be,0,0,re.width,re.height,Ue,Fe,re.data):t.texImage2D(i.TEXTURE_2D,be,k,re.width,re.height,0,Ue,Fe,re.data)}else if(R.isDataArrayTexture)if(W){if(Ae&&t.texStorage3D(i.TEXTURE_2D_ARRAY,Oe,k,_e.width,_e.height,_e.depth),ye)if(R.layerUpdates.size>0){const be=ed(_e.width,_e.height,R.format,R.type);for(const me of R.layerUpdates){const Ne=_e.data.subarray(me*be/_e.data.BYTES_PER_ELEMENT,(me+1)*be/_e.data.BYTES_PER_ELEMENT);t.texSubImage3D(i.TEXTURE_2D_ARRAY,0,0,0,me,_e.width,_e.height,1,Ue,Fe,Ne)}R.clearLayerUpdates()}else t.texSubImage3D(i.TEXTURE_2D_ARRAY,0,0,0,0,_e.width,_e.height,_e.depth,Ue,Fe,_e.data)}else t.texImage3D(i.TEXTURE_2D_ARRAY,0,k,_e.width,_e.height,_e.depth,0,Ue,Fe,_e.data);else if(R.isData3DTexture)W?(Ae&&t.texStorage3D(i.TEXTURE_3D,Oe,k,_e.width,_e.height,_e.depth),ye&&t.texSubImage3D(i.TEXTURE_3D,0,0,0,0,_e.width,_e.height,_e.depth,Ue,Fe,_e.data)):t.texImage3D(i.TEXTURE_3D,0,k,_e.width,_e.height,_e.depth,0,Ue,Fe,_e.data);else if(R.isFramebufferTexture){if(Ae)if(W)t.texStorage2D(i.TEXTURE_2D,Oe,k,_e.width,_e.height);else{let be=_e.width,me=_e.height;for(let Ne=0;Ne<Oe;Ne++)t.texImage2D(i.TEXTURE_2D,Ne,k,be,me,0,Ue,Fe,null),be>>=1,me>>=1}}else if(Me.length>0){if(W&&Ae){const be=pe(Me[0]);t.texStorage2D(i.TEXTURE_2D,Oe,k,be.width,be.height)}for(let be=0,me=Me.length;be<me;be++)re=Me[be],W?ye&&t.texSubImage2D(i.TEXTURE_2D,be,0,0,Ue,Fe,re):t.texImage2D(i.TEXTURE_2D,be,k,Ue,Fe,re);R.generateMipmaps=!1}else if(W){if(Ae){const be=pe(_e);t.texStorage2D(i.TEXTURE_2D,Oe,k,be.width,be.height)}ye&&t.texSubImage2D(i.TEXTURE_2D,0,0,0,Ue,Fe,_e)}else t.texImage2D(i.TEXTURE_2D,0,k,Ue,Fe,_e);m(R)&&g(ie),Ce.__version=se.version,R.onUpdate&&R.onUpdate(R)}U.__version=R.version}function Se(U,R,j){if(R.image.length!==6)return;const ie=ke(U,R),he=R.source;t.bindTexture(i.TEXTURE_CUBE_MAP,U.__webglTexture,i.TEXTURE0+j);const se=n.get(he);if(he.version!==se.__version||ie===!0){t.activeTexture(i.TEXTURE0+j);const Ce=ct.getPrimaries(ct.workingColorSpace),xe=R.colorSpace===zi?null:ct.getPrimaries(R.colorSpace),Pe=R.colorSpace===zi||Ce===xe?i.NONE:i.BROWSER_DEFAULT_WEBGL;i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,R.flipY),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,R.premultiplyAlpha),i.pixelStorei(i.UNPACK_ALIGNMENT,R.unpackAlignment),i.pixelStorei(i.UNPACK_COLORSPACE_CONVERSION_WEBGL,Pe);const Le=R.isCompressedTexture||R.image[0].isCompressedTexture,_e=R.image[0]&&R.image[0].isDataTexture,Ue=[];for(let me=0;me<6;me++)!Le&&!_e?Ue[me]=y(R.image[me],!0,r.maxCubemapSize):Ue[me]=_e?R.image[me].image:R.image[me],Ue[me]=J(R,Ue[me]);const Fe=Ue[0],k=s.convert(R.format,R.colorSpace),re=s.convert(R.type),Me=x(R.internalFormat,k,re,R.colorSpace),W=R.isVideoTexture!==!0,Ae=se.__version===void 0||ie===!0,ye=he.dataReady;let Oe=C(R,Fe);Te(i.TEXTURE_CUBE_MAP,R);let be;if(Le){W&&Ae&&t.texStorage2D(i.TEXTURE_CUBE_MAP,Oe,Me,Fe.width,Fe.height);for(let me=0;me<6;me++){be=Ue[me].mipmaps;for(let Ne=0;Ne<be.length;Ne++){const qe=be[Ne];R.format!==Zt?k!==null?W?ye&&t.compressedTexSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+me,Ne,0,0,qe.width,qe.height,k,qe.data):t.compressedTexImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+me,Ne,Me,qe.width,qe.height,0,qe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):W?ye&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+me,Ne,0,0,qe.width,qe.height,k,re,qe.data):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+me,Ne,Me,qe.width,qe.height,0,k,re,qe.data)}}}else{if(be=R.mipmaps,W&&Ae){be.length>0&&Oe++;const me=pe(Ue[0]);t.texStorage2D(i.TEXTURE_CUBE_MAP,Oe,Me,me.width,me.height)}for(let me=0;me<6;me++)if(_e){W?ye&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+me,0,0,0,Ue[me].width,Ue[me].height,k,re,Ue[me].data):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+me,0,Me,Ue[me].width,Ue[me].height,0,k,re,Ue[me].data);for(let Ne=0;Ne<be.length;Ne++){const mt=be[Ne].image[me].image;W?ye&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+me,Ne+1,0,0,mt.width,mt.height,k,re,mt.data):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+me,Ne+1,Me,mt.width,mt.height,0,k,re,mt.data)}}else{W?ye&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+me,0,0,0,k,re,Ue[me]):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+me,0,Me,k,re,Ue[me]);for(let Ne=0;Ne<be.length;Ne++){const qe=be[Ne];W?ye&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+me,Ne+1,0,0,k,re,qe.image[me]):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+me,Ne+1,Me,k,re,qe.image[me])}}}m(R)&&g(i.TEXTURE_CUBE_MAP),se.__version=he.version,R.onUpdate&&R.onUpdate(R)}U.__version=R.version}function le(U,R,j,ie,he,se){const Ce=s.convert(j.format,j.colorSpace),xe=s.convert(j.type),Pe=x(j.internalFormat,Ce,xe,j.colorSpace),Le=n.get(R),_e=n.get(j);if(_e.__renderTarget=R,!Le.__hasExternalTextures){const Ue=Math.max(1,R.width>>se),Fe=Math.max(1,R.height>>se);he===i.TEXTURE_3D||he===i.TEXTURE_2D_ARRAY?t.texImage3D(he,se,Pe,Ue,Fe,R.depth,0,Ce,xe,null):t.texImage2D(he,se,Pe,Ue,Fe,0,Ce,xe,null)}t.bindFramebuffer(i.FRAMEBUFFER,U),ee(R)?a.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,ie,he,_e.__webglTexture,0,H(R)):(he===i.TEXTURE_2D||he>=i.TEXTURE_CUBE_MAP_POSITIVE_X&&he<=i.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&i.framebufferTexture2D(i.FRAMEBUFFER,ie,he,_e.__webglTexture,se),t.bindFramebuffer(i.FRAMEBUFFER,null)}function I(U,R,j){if(i.bindRenderbuffer(i.RENDERBUFFER,U),R.depthBuffer){const ie=R.depthTexture,he=ie&&ie.isDepthTexture?ie.type:null,se=b(R.stencilBuffer,he),Ce=R.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,xe=H(R);ee(R)?a.renderbufferStorageMultisampleEXT(i.RENDERBUFFER,xe,se,R.width,R.height):j?i.renderbufferStorageMultisample(i.RENDERBUFFER,xe,se,R.width,R.height):i.renderbufferStorage(i.RENDERBUFFER,se,R.width,R.height),i.framebufferRenderbuffer(i.FRAMEBUFFER,Ce,i.RENDERBUFFER,U)}else{const ie=R.textures;for(let he=0;he<ie.length;he++){const se=ie[he],Ce=s.convert(se.format,se.colorSpace),xe=s.convert(se.type),Pe=x(se.internalFormat,Ce,xe,se.colorSpace),Le=H(R);j&&ee(R)===!1?i.renderbufferStorageMultisample(i.RENDERBUFFER,Le,Pe,R.width,R.height):ee(R)?a.renderbufferStorageMultisampleEXT(i.RENDERBUFFER,Le,Pe,R.width,R.height):i.renderbufferStorage(i.RENDERBUFFER,Pe,R.width,R.height)}}i.bindRenderbuffer(i.RENDERBUFFER,null)}function F(U,R){if(R&&R.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(i.FRAMEBUFFER,U),!(R.depthTexture&&R.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const ie=n.get(R.depthTexture);ie.__renderTarget=R,(!ie.__webglTexture||R.depthTexture.image.width!==R.width||R.depthTexture.image.height!==R.height)&&(R.depthTexture.image.width=R.width,R.depthTexture.image.height=R.height,R.depthTexture.needsUpdate=!0),Y(R.depthTexture,0);const he=ie.__webglTexture,se=H(R);if(R.depthTexture.format===go)ee(R)?a.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.TEXTURE_2D,he,0,se):i.framebufferTexture2D(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.TEXTURE_2D,he,0);else if(R.depthTexture.format===vo)ee(R)?a.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.TEXTURE_2D,he,0,se):i.framebufferTexture2D(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.TEXTURE_2D,he,0);else throw new Error("Unknown depthTexture format")}function q(U){const R=n.get(U),j=U.isWebGLCubeRenderTarget===!0;if(R.__boundDepthTexture!==U.depthTexture){const ie=U.depthTexture;if(R.__depthDisposeCallback&&R.__depthDisposeCallback(),ie){const he=()=>{delete R.__boundDepthTexture,delete R.__depthDisposeCallback,ie.removeEventListener("dispose",he)};ie.addEventListener("dispose",he),R.__depthDisposeCallback=he}R.__boundDepthTexture=ie}if(U.depthTexture&&!R.__autoAllocateDepthBuffer){if(j)throw new Error("target.depthTexture not supported in Cube render targets");const ie=U.texture.mipmaps;ie&&ie.length>0?F(R.__webglFramebuffer[0],U):F(R.__webglFramebuffer,U)}else if(j){R.__webglDepthbuffer=[];for(let ie=0;ie<6;ie++)if(t.bindFramebuffer(i.FRAMEBUFFER,R.__webglFramebuffer[ie]),R.__webglDepthbuffer[ie]===void 0)R.__webglDepthbuffer[ie]=i.createRenderbuffer(),I(R.__webglDepthbuffer[ie],U,!1);else{const he=U.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,se=R.__webglDepthbuffer[ie];i.bindRenderbuffer(i.RENDERBUFFER,se),i.framebufferRenderbuffer(i.FRAMEBUFFER,he,i.RENDERBUFFER,se)}}else{const ie=U.texture.mipmaps;if(ie&&ie.length>0?t.bindFramebuffer(i.FRAMEBUFFER,R.__webglFramebuffer[0]):t.bindFramebuffer(i.FRAMEBUFFER,R.__webglFramebuffer),R.__webglDepthbuffer===void 0)R.__webglDepthbuffer=i.createRenderbuffer(),I(R.__webglDepthbuffer,U,!1);else{const he=U.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,se=R.__webglDepthbuffer;i.bindRenderbuffer(i.RENDERBUFFER,se),i.framebufferRenderbuffer(i.FRAMEBUFFER,he,i.RENDERBUFFER,se)}}t.bindFramebuffer(i.FRAMEBUFFER,null)}function P(U,R,j){const ie=n.get(U);R!==void 0&&le(ie.__webglFramebuffer,U,U.texture,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,0),j!==void 0&&q(U)}function L(U){const R=U.texture,j=n.get(U),ie=n.get(R);U.addEventListener("dispose",T);const he=U.textures,se=U.isWebGLCubeRenderTarget===!0,Ce=he.length>1;if(Ce||(ie.__webglTexture===void 0&&(ie.__webglTexture=i.createTexture()),ie.__version=R.version,o.memory.textures++),se){j.__webglFramebuffer=[];for(let xe=0;xe<6;xe++)if(R.mipmaps&&R.mipmaps.length>0){j.__webglFramebuffer[xe]=[];for(let Pe=0;Pe<R.mipmaps.length;Pe++)j.__webglFramebuffer[xe][Pe]=i.createFramebuffer()}else j.__webglFramebuffer[xe]=i.createFramebuffer()}else{if(R.mipmaps&&R.mipmaps.length>0){j.__webglFramebuffer=[];for(let xe=0;xe<R.mipmaps.length;xe++)j.__webglFramebuffer[xe]=i.createFramebuffer()}else j.__webglFramebuffer=i.createFramebuffer();if(Ce)for(let xe=0,Pe=he.length;xe<Pe;xe++){const Le=n.get(he[xe]);Le.__webglTexture===void 0&&(Le.__webglTexture=i.createTexture(),o.memory.textures++)}if(U.samples>0&&ee(U)===!1){j.__webglMultisampledFramebuffer=i.createFramebuffer(),j.__webglColorRenderbuffer=[],t.bindFramebuffer(i.FRAMEBUFFER,j.__webglMultisampledFramebuffer);for(let xe=0;xe<he.length;xe++){const Pe=he[xe];j.__webglColorRenderbuffer[xe]=i.createRenderbuffer(),i.bindRenderbuffer(i.RENDERBUFFER,j.__webglColorRenderbuffer[xe]);const Le=s.convert(Pe.format,Pe.colorSpace),_e=s.convert(Pe.type),Ue=x(Pe.internalFormat,Le,_e,Pe.colorSpace,U.isXRRenderTarget===!0),Fe=H(U);i.renderbufferStorageMultisample(i.RENDERBUFFER,Fe,Ue,U.width,U.height),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+xe,i.RENDERBUFFER,j.__webglColorRenderbuffer[xe])}i.bindRenderbuffer(i.RENDERBUFFER,null),U.depthBuffer&&(j.__webglDepthRenderbuffer=i.createRenderbuffer(),I(j.__webglDepthRenderbuffer,U,!0)),t.bindFramebuffer(i.FRAMEBUFFER,null)}}if(se){t.bindTexture(i.TEXTURE_CUBE_MAP,ie.__webglTexture),Te(i.TEXTURE_CUBE_MAP,R);for(let xe=0;xe<6;xe++)if(R.mipmaps&&R.mipmaps.length>0)for(let Pe=0;Pe<R.mipmaps.length;Pe++)le(j.__webglFramebuffer[xe][Pe],U,R,i.COLOR_ATTACHMENT0,i.TEXTURE_CUBE_MAP_POSITIVE_X+xe,Pe);else le(j.__webglFramebuffer[xe],U,R,i.COLOR_ATTACHMENT0,i.TEXTURE_CUBE_MAP_POSITIVE_X+xe,0);m(R)&&g(i.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(Ce){for(let xe=0,Pe=he.length;xe<Pe;xe++){const Le=he[xe],_e=n.get(Le);t.bindTexture(i.TEXTURE_2D,_e.__webglTexture),Te(i.TEXTURE_2D,Le),le(j.__webglFramebuffer,U,Le,i.COLOR_ATTACHMENT0+xe,i.TEXTURE_2D,0),m(Le)&&g(i.TEXTURE_2D)}t.unbindTexture()}else{let xe=i.TEXTURE_2D;if((U.isWebGL3DRenderTarget||U.isWebGLArrayRenderTarget)&&(xe=U.isWebGL3DRenderTarget?i.TEXTURE_3D:i.TEXTURE_2D_ARRAY),t.bindTexture(xe,ie.__webglTexture),Te(xe,R),R.mipmaps&&R.mipmaps.length>0)for(let Pe=0;Pe<R.mipmaps.length;Pe++)le(j.__webglFramebuffer[Pe],U,R,i.COLOR_ATTACHMENT0,xe,Pe);else le(j.__webglFramebuffer,U,R,i.COLOR_ATTACHMENT0,xe,0);m(R)&&g(xe),t.unbindTexture()}U.depthBuffer&&q(U)}function E(U){const R=U.textures;for(let j=0,ie=R.length;j<ie;j++){const he=R[j];if(m(he)){const se=M(U),Ce=n.get(he).__webglTexture;t.bindTexture(se,Ce),g(se),t.unbindTexture()}}}const G=[],V=[];function $(U){if(U.samples>0){if(ee(U)===!1){const R=U.textures,j=U.width,ie=U.height;let he=i.COLOR_BUFFER_BIT;const se=U.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,Ce=n.get(U),xe=R.length>1;if(xe)for(let Le=0;Le<R.length;Le++)t.bindFramebuffer(i.FRAMEBUFFER,Ce.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+Le,i.RENDERBUFFER,null),t.bindFramebuffer(i.FRAMEBUFFER,Ce.__webglFramebuffer),i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0+Le,i.TEXTURE_2D,null,0);t.bindFramebuffer(i.READ_FRAMEBUFFER,Ce.__webglMultisampledFramebuffer);const Pe=U.texture.mipmaps;Pe&&Pe.length>0?t.bindFramebuffer(i.DRAW_FRAMEBUFFER,Ce.__webglFramebuffer[0]):t.bindFramebuffer(i.DRAW_FRAMEBUFFER,Ce.__webglFramebuffer);for(let Le=0;Le<R.length;Le++){if(U.resolveDepthBuffer&&(U.depthBuffer&&(he|=i.DEPTH_BUFFER_BIT),U.stencilBuffer&&U.resolveStencilBuffer&&(he|=i.STENCIL_BUFFER_BIT)),xe){i.framebufferRenderbuffer(i.READ_FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.RENDERBUFFER,Ce.__webglColorRenderbuffer[Le]);const _e=n.get(R[Le]).__webglTexture;i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,_e,0)}i.blitFramebuffer(0,0,j,ie,0,0,j,ie,he,i.NEAREST),l===!0&&(G.length=0,V.length=0,G.push(i.COLOR_ATTACHMENT0+Le),U.depthBuffer&&U.resolveDepthBuffer===!1&&(G.push(se),V.push(se),i.invalidateFramebuffer(i.DRAW_FRAMEBUFFER,V)),i.invalidateFramebuffer(i.READ_FRAMEBUFFER,G))}if(t.bindFramebuffer(i.READ_FRAMEBUFFER,null),t.bindFramebuffer(i.DRAW_FRAMEBUFFER,null),xe)for(let Le=0;Le<R.length;Le++){t.bindFramebuffer(i.FRAMEBUFFER,Ce.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+Le,i.RENDERBUFFER,Ce.__webglColorRenderbuffer[Le]);const _e=n.get(R[Le]).__webglTexture;t.bindFramebuffer(i.FRAMEBUFFER,Ce.__webglFramebuffer),i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0+Le,i.TEXTURE_2D,_e,0)}t.bindFramebuffer(i.DRAW_FRAMEBUFFER,Ce.__webglMultisampledFramebuffer)}else if(U.depthBuffer&&U.resolveDepthBuffer===!1&&l){const R=U.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT;i.invalidateFramebuffer(i.DRAW_FRAMEBUFFER,[R])}}}function H(U){return Math.min(r.maxSamples,U.samples)}function ee(U){const R=n.get(U);return U.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&R.__useRenderToTexture!==!1}function Z(U){const R=o.render.frame;u.get(U)!==R&&(u.set(U,R),U.update())}function J(U,R){const j=U.colorSpace,ie=U.format,he=U.type;return U.isCompressedTexture===!0||U.isVideoTexture===!0||j!==ps&&j!==zi&&(ct.getTransfer(j)===vt?(ie!==Zt||he!==ci)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",j)),R}function pe(U){return typeof HTMLImageElement<"u"&&U instanceof HTMLImageElement?(c.width=U.naturalWidth||U.width,c.height=U.naturalHeight||U.height):typeof VideoFrame<"u"&&U instanceof VideoFrame?(c.width=U.displayWidth,c.height=U.displayHeight):(c.width=U.width,c.height=U.height),c}this.allocateTextureUnit=B,this.resetTextureUnits=D,this.setTexture2D=Y,this.setTexture2DArray=z,this.setTexture3D=Q,this.setTextureCube=K,this.rebindTextures=P,this.setupRenderTarget=L,this.updateRenderTargetMipmap=E,this.updateMultisampleRenderTarget=$,this.setupDepthRenderbuffer=q,this.setupFrameBufferTexture=le,this.useMultisampledRTT=ee}function Vy(i,e){function t(n,r=zi){let s;const o=ct.getTransfer(r);if(n===ci)return i.UNSIGNED_BYTE;if(n===Au)return i.UNSIGNED_SHORT_4_4_4_4;if(n===Cu)return i.UNSIGNED_SHORT_5_5_5_1;if(n===Xd)return i.UNSIGNED_INT_5_9_9_9_REV;if(n===Gd)return i.BYTE;if(n===Wd)return i.SHORT;if(n===po)return i.UNSIGNED_SHORT;if(n===Eu)return i.INT;if(n===$i)return i.UNSIGNED_INT;if(n===On)return i.FLOAT;if(n===xs)return i.HALF_FLOAT;if(n===Yd)return i.ALPHA;if(n===qd)return i.RGB;if(n===Zt)return i.RGBA;if(n===go)return i.DEPTH_COMPONENT;if(n===vo)return i.DEPTH_STENCIL;if(n===Ru)return i.RED;if(n===Wa)return i.RED_INTEGER;if(n===jd)return i.RG;if(n===Iu)return i.RG_INTEGER;if(n===Pu)return i.RGBA_INTEGER;if(n===sa||n===oa||n===aa||n===la)if(o===vt)if(s=e.get("WEBGL_compressed_texture_s3tc_srgb"),s!==null){if(n===sa)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===oa)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===aa)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===la)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(s=e.get("WEBGL_compressed_texture_s3tc"),s!==null){if(n===sa)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===oa)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===aa)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===la)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===Dc||n===Uc||n===Nc||n===Oc)if(s=e.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(n===Dc)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===Uc)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===Nc)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===Oc)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===Fc||n===Bc||n===zc)if(s=e.get("WEBGL_compressed_texture_etc"),s!==null){if(n===Fc||n===Bc)return o===vt?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(n===zc)return o===vt?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===kc||n===Vc||n===Hc||n===Gc||n===Wc||n===Xc||n===Yc||n===qc||n===jc||n===$c||n===Zc||n===Kc||n===Jc||n===Qc)if(s=e.get("WEBGL_compressed_texture_astc"),s!==null){if(n===kc)return o===vt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===Vc)return o===vt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===Hc)return o===vt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===Gc)return o===vt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===Wc)return o===vt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===Xc)return o===vt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===Yc)return o===vt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===qc)return o===vt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===jc)return o===vt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===$c)return o===vt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===Zc)return o===vt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===Kc)return o===vt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===Jc)return o===vt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===Qc)return o===vt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===ca||n===eu||n===tu)if(s=e.get("EXT_texture_compression_bptc"),s!==null){if(n===ca)return o===vt?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===eu)return s.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===tu)return s.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===$d||n===nu||n===iu||n===ru)if(s=e.get("EXT_texture_compression_rgtc"),s!==null){if(n===ca)return s.COMPRESSED_RED_RGTC1_EXT;if(n===nu)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===iu)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===ru)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===mo?i.UNSIGNED_INT_24_8:i[n]!==void 0?i[n]:null}return{convert:t}}const aI=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,lI=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class cI{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,n){if(this.texture===null){const r=new Lt,s=e.properties.get(r);s.__webglTexture=t.texture,(t.depthNear!==n.depthNear||t.depthFar!==n.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=r}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,n=new mn({vertexShader:aI,fragmentShader:lI,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new St(new Ar(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class uI extends hi{constructor(e,t){super();const n=this;let r=null,s=1,o=null,a="local-floor",l=1,c=null,u=null,h=null,f=null,d=null,p=null;const y=new cI,m=t.getContextAttributes();let g=null,M=null;const x=[],b=[],C=new de;let w=null;const T=new Mt;T.viewport=new rt;const S=new Mt;S.viewport=new rt;const _=[T,S],v=new Ay;let A=null,D=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(ae){let ve=x[ae];return ve===void 0&&(ve=new uc,x[ae]=ve),ve.getTargetRaySpace()},this.getControllerGrip=function(ae){let ve=x[ae];return ve===void 0&&(ve=new uc,x[ae]=ve),ve.getGripSpace()},this.getHand=function(ae){let ve=x[ae];return ve===void 0&&(ve=new uc,x[ae]=ve),ve.getHandSpace()};function B(ae){const ve=b.indexOf(ae.inputSource);if(ve===-1)return;const Re=x[ve];Re!==void 0&&(Re.update(ae.inputSource,ae.frame,c||o),Re.dispatchEvent({type:ae.type,data:ae.inputSource}))}function X(){r.removeEventListener("select",B),r.removeEventListener("selectstart",B),r.removeEventListener("selectend",B),r.removeEventListener("squeeze",B),r.removeEventListener("squeezestart",B),r.removeEventListener("squeezeend",B),r.removeEventListener("end",X),r.removeEventListener("inputsourceschange",Y);for(let ae=0;ae<x.length;ae++){const ve=b[ae];ve!==null&&(b[ae]=null,x[ae].disconnect(ve))}A=null,D=null,y.reset(),e.setRenderTarget(g),d=null,f=null,h=null,r=null,M=null,ke.stop(),n.isPresenting=!1,e.setPixelRatio(w),e.setSize(C.width,C.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(ae){s=ae,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(ae){a=ae,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||o},this.setReferenceSpace=function(ae){c=ae},this.getBaseLayer=function(){return f!==null?f:d},this.getBinding=function(){return h},this.getFrame=function(){return p},this.getSession=function(){return r},this.setSession=async function(ae){if(r=ae,r!==null){if(g=e.getRenderTarget(),r.addEventListener("select",B),r.addEventListener("selectstart",B),r.addEventListener("selectend",B),r.addEventListener("squeeze",B),r.addEventListener("squeezestart",B),r.addEventListener("squeezeend",B),r.addEventListener("end",X),r.addEventListener("inputsourceschange",Y),m.xrCompatible!==!0&&await t.makeXRCompatible(),w=e.getPixelRatio(),e.getSize(C),typeof XRWebGLBinding<"u"&&"createProjectionLayer"in XRWebGLBinding.prototype){let Re=null,Se=null,le=null;m.depth&&(le=m.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,Re=m.stencil?vo:go,Se=m.stencil?mo:$i);const I={colorFormat:t.RGBA8,depthFormat:le,scaleFactor:s};h=new XRWebGLBinding(r,t),f=h.createProjectionLayer(I),r.updateRenderState({layers:[f]}),e.setPixelRatio(1),e.setSize(f.textureWidth,f.textureHeight,!1),M=new ui(f.textureWidth,f.textureHeight,{format:Zt,type:ci,depthTexture:new sp(f.textureWidth,f.textureHeight,Se,void 0,void 0,void 0,void 0,void 0,void 0,Re),stencilBuffer:m.stencil,colorSpace:e.outputColorSpace,samples:m.antialias?4:0,resolveDepthBuffer:f.ignoreDepthValues===!1,resolveStencilBuffer:f.ignoreDepthValues===!1})}else{const Re={antialias:m.antialias,alpha:!0,depth:m.depth,stencil:m.stencil,framebufferScaleFactor:s};d=new XRWebGLLayer(r,t,Re),r.updateRenderState({baseLayer:d}),e.setPixelRatio(1),e.setSize(d.framebufferWidth,d.framebufferHeight,!1),M=new ui(d.framebufferWidth,d.framebufferHeight,{format:Zt,type:ci,colorSpace:e.outputColorSpace,stencilBuffer:m.stencil,resolveDepthBuffer:d.ignoreDepthValues===!1,resolveStencilBuffer:d.ignoreDepthValues===!1})}M.isXRRenderTarget=!0,this.setFoveation(l),c=null,o=await r.requestReferenceSpace(a),ke.setContext(r),ke.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(r!==null)return r.environmentBlendMode},this.getDepthTexture=function(){return y.getDepthTexture()};function Y(ae){for(let ve=0;ve<ae.removed.length;ve++){const Re=ae.removed[ve],Se=b.indexOf(Re);Se>=0&&(b[Se]=null,x[Se].disconnect(Re))}for(let ve=0;ve<ae.added.length;ve++){const Re=ae.added[ve];let Se=b.indexOf(Re);if(Se===-1){for(let I=0;I<x.length;I++)if(I>=b.length){b.push(Re),Se=I;break}else if(b[I]===null){b[I]=Re,Se=I;break}if(Se===-1)break}const le=x[Se];le&&le.connect(Re)}}const z=new O,Q=new O;function K(ae,ve,Re){z.setFromMatrixPosition(ve.matrixWorld),Q.setFromMatrixPosition(Re.matrixWorld);const Se=z.distanceTo(Q),le=ve.projectionMatrix.elements,I=Re.projectionMatrix.elements,F=le[14]/(le[10]-1),q=le[14]/(le[10]+1),P=(le[9]+1)/le[5],L=(le[9]-1)/le[5],E=(le[8]-1)/le[0],G=(I[8]+1)/I[0],V=F*E,$=F*G,H=Se/(-E+G),ee=H*-E;if(ve.matrixWorld.decompose(ae.position,ae.quaternion,ae.scale),ae.translateX(ee),ae.translateZ(H),ae.matrixWorld.compose(ae.position,ae.quaternion,ae.scale),ae.matrixWorldInverse.copy(ae.matrixWorld).invert(),le[10]===-1)ae.projectionMatrix.copy(ve.projectionMatrix),ae.projectionMatrixInverse.copy(ve.projectionMatrixInverse);else{const Z=F+H,J=q+H,pe=V-ee,U=$+(Se-ee),R=P*q/J*Z,j=L*q/J*Z;ae.projectionMatrix.makePerspective(pe,U,R,j,Z,J),ae.projectionMatrixInverse.copy(ae.projectionMatrix).invert()}}function fe(ae,ve){ve===null?ae.matrixWorld.copy(ae.matrix):ae.matrixWorld.multiplyMatrices(ve.matrixWorld,ae.matrix),ae.matrixWorldInverse.copy(ae.matrixWorld).invert()}this.updateCamera=function(ae){if(r===null)return;let ve=ae.near,Re=ae.far;y.texture!==null&&(y.depthNear>0&&(ve=y.depthNear),y.depthFar>0&&(Re=y.depthFar)),v.near=S.near=T.near=ve,v.far=S.far=T.far=Re,(A!==v.near||D!==v.far)&&(r.updateRenderState({depthNear:v.near,depthFar:v.far}),A=v.near,D=v.far),T.layers.mask=ae.layers.mask|2,S.layers.mask=ae.layers.mask|4,v.layers.mask=T.layers.mask|S.layers.mask;const Se=ae.parent,le=v.cameras;fe(v,Se);for(let I=0;I<le.length;I++)fe(le[I],Se);le.length===2?K(v,T,S):v.projectionMatrix.copy(T.projectionMatrix),ge(ae,v,Se)};function ge(ae,ve,Re){Re===null?ae.matrix.copy(ve.matrixWorld):(ae.matrix.copy(Re.matrixWorld),ae.matrix.invert(),ae.matrix.multiply(ve.matrixWorld)),ae.matrix.decompose(ae.position,ae.quaternion,ae.scale),ae.updateMatrixWorld(!0),ae.projectionMatrix.copy(ve.projectionMatrix),ae.projectionMatrixInverse.copy(ve.projectionMatrixInverse),ae.isPerspectiveCamera&&(ae.fov=yo*2*Math.atan(1/ae.projectionMatrix.elements[5]),ae.zoom=1)}this.getCamera=function(){return v},this.getFoveation=function(){if(!(f===null&&d===null))return l},this.setFoveation=function(ae){l=ae,f!==null&&(f.fixedFoveation=ae),d!==null&&d.fixedFoveation!==void 0&&(d.fixedFoveation=ae)},this.hasDepthSensing=function(){return y.texture!==null},this.getDepthSensingMesh=function(){return y.getMesh(v)};let oe=null;function Te(ae,ve){if(u=ve.getViewerPose(c||o),p=ve,u!==null){const Re=u.views;d!==null&&(e.setRenderTargetFramebuffer(M,d.framebuffer),e.setRenderTarget(M));let Se=!1;Re.length!==v.cameras.length&&(v.cameras.length=0,Se=!0);for(let F=0;F<Re.length;F++){const q=Re[F];let P=null;if(d!==null)P=d.getViewport(q);else{const E=h.getViewSubImage(f,q);P=E.viewport,F===0&&(e.setRenderTargetTextures(M,E.colorTexture,E.depthStencilTexture),e.setRenderTarget(M))}let L=_[F];L===void 0&&(L=new Mt,L.layers.enable(F),L.viewport=new rt,_[F]=L),L.matrix.fromArray(q.transform.matrix),L.matrix.decompose(L.position,L.quaternion,L.scale),L.projectionMatrix.fromArray(q.projectionMatrix),L.projectionMatrixInverse.copy(L.projectionMatrix).invert(),L.viewport.set(P.x,P.y,P.width,P.height),F===0&&(v.matrix.copy(L.matrix),v.matrix.decompose(v.position,v.quaternion,v.scale)),Se===!0&&v.cameras.push(L)}const le=r.enabledFeatures;if(le&&le.includes("depth-sensing")&&r.depthUsage=="gpu-optimized"&&h){const F=h.getDepthInformation(Re[0]);F&&F.isValid&&F.texture&&y.init(e,F,r.renderState)}}for(let Re=0;Re<x.length;Re++){const Se=b[Re],le=x[Re];Se!==null&&le!==void 0&&le.update(Se,ve,c||o)}oe&&oe(ae,ve),ve.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:ve}),p=null}const ke=new Oy;ke.setAnimationLoop(Te),this.setAnimationLoop=function(ae){oe=ae},this.dispose=function(){}}}const Yr=new Tn,hI=new Ge;function fI(i,e){function t(m,g){m.matrixAutoUpdate===!0&&m.updateMatrix(),g.value.copy(m.matrix)}function n(m,g){g.color.getRGB(m.fogColor.value,U_(i)),g.isFog?(m.fogNear.value=g.near,m.fogFar.value=g.far):g.isFogExp2&&(m.fogDensity.value=g.density)}function r(m,g,M,x,b){g.isMeshBasicMaterial||g.isMeshLambertMaterial?s(m,g):g.isMeshToonMaterial?(s(m,g),h(m,g)):g.isMeshPhongMaterial?(s(m,g),u(m,g)):g.isMeshStandardMaterial?(s(m,g),f(m,g),g.isMeshPhysicalMaterial&&d(m,g,b)):g.isMeshMatcapMaterial?(s(m,g),p(m,g)):g.isMeshDepthMaterial?s(m,g):g.isMeshDistanceMaterial?(s(m,g),y(m,g)):g.isMeshNormalMaterial?s(m,g):g.isLineBasicMaterial?(o(m,g),g.isLineDashedMaterial&&a(m,g)):g.isPointsMaterial?l(m,g,M,x):g.isSpriteMaterial?c(m,g):g.isShadowMaterial?(m.color.value.copy(g.color),m.opacity.value=g.opacity):g.isShaderMaterial&&(g.uniformsNeedUpdate=!1)}function s(m,g){m.opacity.value=g.opacity,g.color&&m.diffuse.value.copy(g.color),g.emissive&&m.emissive.value.copy(g.emissive).multiplyScalar(g.emissiveIntensity),g.map&&(m.map.value=g.map,t(g.map,m.mapTransform)),g.alphaMap&&(m.alphaMap.value=g.alphaMap,t(g.alphaMap,m.alphaMapTransform)),g.bumpMap&&(m.bumpMap.value=g.bumpMap,t(g.bumpMap,m.bumpMapTransform),m.bumpScale.value=g.bumpScale,g.side===fn&&(m.bumpScale.value*=-1)),g.normalMap&&(m.normalMap.value=g.normalMap,t(g.normalMap,m.normalMapTransform),m.normalScale.value.copy(g.normalScale),g.side===fn&&m.normalScale.value.negate()),g.displacementMap&&(m.displacementMap.value=g.displacementMap,t(g.displacementMap,m.displacementMapTransform),m.displacementScale.value=g.displacementScale,m.displacementBias.value=g.displacementBias),g.emissiveMap&&(m.emissiveMap.value=g.emissiveMap,t(g.emissiveMap,m.emissiveMapTransform)),g.specularMap&&(m.specularMap.value=g.specularMap,t(g.specularMap,m.specularMapTransform)),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest);const M=e.get(g),x=M.envMap,b=M.envMapRotation;x&&(m.envMap.value=x,Yr.copy(b),Yr.x*=-1,Yr.y*=-1,Yr.z*=-1,x.isCubeTexture&&x.isRenderTargetTexture===!1&&(Yr.y*=-1,Yr.z*=-1),m.envMapRotation.value.setFromMatrix4(hI.makeRotationFromEuler(Yr)),m.flipEnvMap.value=x.isCubeTexture&&x.isRenderTargetTexture===!1?-1:1,m.reflectivity.value=g.reflectivity,m.ior.value=g.ior,m.refractionRatio.value=g.refractionRatio),g.lightMap&&(m.lightMap.value=g.lightMap,m.lightMapIntensity.value=g.lightMapIntensity,t(g.lightMap,m.lightMapTransform)),g.aoMap&&(m.aoMap.value=g.aoMap,m.aoMapIntensity.value=g.aoMapIntensity,t(g.aoMap,m.aoMapTransform))}function o(m,g){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,g.map&&(m.map.value=g.map,t(g.map,m.mapTransform))}function a(m,g){m.dashSize.value=g.dashSize,m.totalSize.value=g.dashSize+g.gapSize,m.scale.value=g.scale}function l(m,g,M,x){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,m.size.value=g.size*M,m.scale.value=x*.5,g.map&&(m.map.value=g.map,t(g.map,m.uvTransform)),g.alphaMap&&(m.alphaMap.value=g.alphaMap,t(g.alphaMap,m.alphaMapTransform)),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest)}function c(m,g){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,m.rotation.value=g.rotation,g.map&&(m.map.value=g.map,t(g.map,m.mapTransform)),g.alphaMap&&(m.alphaMap.value=g.alphaMap,t(g.alphaMap,m.alphaMapTransform)),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest)}function u(m,g){m.specular.value.copy(g.specular),m.shininess.value=Math.max(g.shininess,1e-4)}function h(m,g){g.gradientMap&&(m.gradientMap.value=g.gradientMap)}function f(m,g){m.metalness.value=g.metalness,g.metalnessMap&&(m.metalnessMap.value=g.metalnessMap,t(g.metalnessMap,m.metalnessMapTransform)),m.roughness.value=g.roughness,g.roughnessMap&&(m.roughnessMap.value=g.roughnessMap,t(g.roughnessMap,m.roughnessMapTransform)),g.envMap&&(m.envMapIntensity.value=g.envMapIntensity)}function d(m,g,M){m.ior.value=g.ior,g.sheen>0&&(m.sheenColor.value.copy(g.sheenColor).multiplyScalar(g.sheen),m.sheenRoughness.value=g.sheenRoughness,g.sheenColorMap&&(m.sheenColorMap.value=g.sheenColorMap,t(g.sheenColorMap,m.sheenColorMapTransform)),g.sheenRoughnessMap&&(m.sheenRoughnessMap.value=g.sheenRoughnessMap,t(g.sheenRoughnessMap,m.sheenRoughnessMapTransform))),g.clearcoat>0&&(m.clearcoat.value=g.clearcoat,m.clearcoatRoughness.value=g.clearcoatRoughness,g.clearcoatMap&&(m.clearcoatMap.value=g.clearcoatMap,t(g.clearcoatMap,m.clearcoatMapTransform)),g.clearcoatRoughnessMap&&(m.clearcoatRoughnessMap.value=g.clearcoatRoughnessMap,t(g.clearcoatRoughnessMap,m.clearcoatRoughnessMapTransform)),g.clearcoatNormalMap&&(m.clearcoatNormalMap.value=g.clearcoatNormalMap,t(g.clearcoatNormalMap,m.clearcoatNormalMapTransform),m.clearcoatNormalScale.value.copy(g.clearcoatNormalScale),g.side===fn&&m.clearcoatNormalScale.value.negate())),g.dispersion>0&&(m.dispersion.value=g.dispersion),g.iridescence>0&&(m.iridescence.value=g.iridescence,m.iridescenceIOR.value=g.iridescenceIOR,m.iridescenceThicknessMinimum.value=g.iridescenceThicknessRange[0],m.iridescenceThicknessMaximum.value=g.iridescenceThicknessRange[1],g.iridescenceMap&&(m.iridescenceMap.value=g.iridescenceMap,t(g.iridescenceMap,m.iridescenceMapTransform)),g.iridescenceThicknessMap&&(m.iridescenceThicknessMap.value=g.iridescenceThicknessMap,t(g.iridescenceThicknessMap,m.iridescenceThicknessMapTransform))),g.transmission>0&&(m.transmission.value=g.transmission,m.transmissionSamplerMap.value=M.texture,m.transmissionSamplerSize.value.set(M.width,M.height),g.transmissionMap&&(m.transmissionMap.value=g.transmissionMap,t(g.transmissionMap,m.transmissionMapTransform)),m.thickness.value=g.thickness,g.thicknessMap&&(m.thicknessMap.value=g.thicknessMap,t(g.thicknessMap,m.thicknessMapTransform)),m.attenuationDistance.value=g.attenuationDistance,m.attenuationColor.value.copy(g.attenuationColor)),g.anisotropy>0&&(m.anisotropyVector.value.set(g.anisotropy*Math.cos(g.anisotropyRotation),g.anisotropy*Math.sin(g.anisotropyRotation)),g.anisotropyMap&&(m.anisotropyMap.value=g.anisotropyMap,t(g.anisotropyMap,m.anisotropyMapTransform))),m.specularIntensity.value=g.specularIntensity,m.specularColor.value.copy(g.specularColor),g.specularColorMap&&(m.specularColorMap.value=g.specularColorMap,t(g.specularColorMap,m.specularColorMapTransform)),g.specularIntensityMap&&(m.specularIntensityMap.value=g.specularIntensityMap,t(g.specularIntensityMap,m.specularIntensityMapTransform))}function p(m,g){g.matcap&&(m.matcap.value=g.matcap)}function y(m,g){const M=e.get(g).light;m.referencePosition.value.setFromMatrixPosition(M.matrixWorld),m.nearDistance.value=M.shadow.camera.near,m.farDistance.value=M.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:r}}function dI(i,e,t,n){let r={},s={},o=[];const a=i.getParameter(i.MAX_UNIFORM_BUFFER_BINDINGS);function l(M,x){const b=x.program;n.uniformBlockBinding(M,b)}function c(M,x){let b=r[M.id];b===void 0&&(p(M),b=u(M),r[M.id]=b,M.addEventListener("dispose",m));const C=x.program;n.updateUBOMapping(M,C);const w=e.render.frame;s[M.id]!==w&&(f(M),s[M.id]=w)}function u(M){const x=h();M.__bindingPointIndex=x;const b=i.createBuffer(),C=M.__size,w=M.usage;return i.bindBuffer(i.UNIFORM_BUFFER,b),i.bufferData(i.UNIFORM_BUFFER,C,w),i.bindBuffer(i.UNIFORM_BUFFER,null),i.bindBufferBase(i.UNIFORM_BUFFER,x,b),b}function h(){for(let M=0;M<a;M++)if(o.indexOf(M)===-1)return o.push(M),M;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function f(M){const x=r[M.id],b=M.uniforms,C=M.__cache;i.bindBuffer(i.UNIFORM_BUFFER,x);for(let w=0,T=b.length;w<T;w++){const S=Array.isArray(b[w])?b[w]:[b[w]];for(let _=0,v=S.length;_<v;_++){const A=S[_];if(d(A,w,_,C)===!0){const D=A.__offset,B=Array.isArray(A.value)?A.value:[A.value];let X=0;for(let Y=0;Y<B.length;Y++){const z=B[Y],Q=y(z);typeof z=="number"||typeof z=="boolean"?(A.__data[0]=z,i.bufferSubData(i.UNIFORM_BUFFER,D+X,A.__data)):z.isMatrix3?(A.__data[0]=z.elements[0],A.__data[1]=z.elements[1],A.__data[2]=z.elements[2],A.__data[3]=0,A.__data[4]=z.elements[3],A.__data[5]=z.elements[4],A.__data[6]=z.elements[5],A.__data[7]=0,A.__data[8]=z.elements[6],A.__data[9]=z.elements[7],A.__data[10]=z.elements[8],A.__data[11]=0):(z.toArray(A.__data,X),X+=Q.storage/Float32Array.BYTES_PER_ELEMENT)}i.bufferSubData(i.UNIFORM_BUFFER,D,A.__data)}}}i.bindBuffer(i.UNIFORM_BUFFER,null)}function d(M,x,b,C){const w=M.value,T=x+"_"+b;if(C[T]===void 0)return typeof w=="number"||typeof w=="boolean"?C[T]=w:C[T]=w.clone(),!0;{const S=C[T];if(typeof w=="number"||typeof w=="boolean"){if(S!==w)return C[T]=w,!0}else if(S.equals(w)===!1)return S.copy(w),!0}return!1}function p(M){const x=M.uniforms;let b=0;const C=16;for(let T=0,S=x.length;T<S;T++){const _=Array.isArray(x[T])?x[T]:[x[T]];for(let v=0,A=_.length;v<A;v++){const D=_[v],B=Array.isArray(D.value)?D.value:[D.value];for(let X=0,Y=B.length;X<Y;X++){const z=B[X],Q=y(z),K=b%C,fe=K%Q.boundary,ge=K+fe;b+=fe,ge!==0&&C-ge<Q.storage&&(b+=C-ge),D.__data=new Float32Array(Q.storage/Float32Array.BYTES_PER_ELEMENT),D.__offset=b,b+=Q.storage}}}const w=b%C;return w>0&&(b+=C-w),M.__size=b,M.__cache={},this}function y(M){const x={boundary:0,storage:0};return typeof M=="number"||typeof M=="boolean"?(x.boundary=4,x.storage=4):M.isVector2?(x.boundary=8,x.storage=8):M.isVector3||M.isColor?(x.boundary=16,x.storage=12):M.isVector4?(x.boundary=16,x.storage=16):M.isMatrix3?(x.boundary=48,x.storage=48):M.isMatrix4?(x.boundary=64,x.storage=64):M.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",M),x}function m(M){const x=M.target;x.removeEventListener("dispose",m);const b=o.indexOf(x.__bindingPointIndex);o.splice(b,1),i.deleteBuffer(r[x.id]),delete r[x.id],delete s[x.id]}function g(){for(const M in r)i.deleteBuffer(r[M]);o=[],r={},s={}}return{bind:l,update:c,dispose:g}}class pa{constructor(e={}){const{canvas:t=P_(),context:n=null,depth:r=!0,stencil:s=!1,alpha:o=!1,antialias:a=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:c=!1,powerPreference:u="default",failIfMajorPerformanceCaveat:h=!1,reverseDepthBuffer:f=!1}=e;this.isWebGLRenderer=!0;let d;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");d=n.getContextAttributes().alpha}else d=o;const p=new Uint32Array(4),y=new Int32Array(4);let m=null,g=null;const M=[],x=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=ai,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const b=this;let C=!1;this._outputColorSpace=bn;let w=0,T=0,S=null,_=-1,v=null;const A=new rt,D=new rt;let B=null;const X=new Ee(0);let Y=0,z=t.width,Q=t.height,K=1,fe=null,ge=null;const oe=new rt(0,0,z,Q),Te=new rt(0,0,z,Q);let ke=!1;const ae=new Ao;let ve=!1,Re=!1;const Se=new Ge,le=new Ge,I=new O,F=new rt,q={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let P=!1;function L(){return S===null?K:1}let E=n;function G(N,te){return t.getContext(N,te)}try{const N={alpha:!0,depth:r,stencil:s,antialias:a,premultipliedAlpha:l,preserveDrawingBuffer:c,powerPreference:u,failIfMajorPerformanceCaveat:h};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${To}`),t.addEventListener("webglcontextlost",Oe,!1),t.addEventListener("webglcontextrestored",be,!1),t.addEventListener("webglcontextcreationerror",me,!1),E===null){const te="webgl2";if(E=G(te,N),E===null)throw G(te)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(N){throw console.error("THREE.WebGLRenderer: "+N.message),N}let V,$,H,ee,Z,J,pe,U,R,j,ie,he,se,Ce,xe,Pe,Le,_e,Ue,Fe,k,re,Me,W;function Ae(){V=new TC(E),V.init(),re=new Vy(E,V),$=new _C(E,V,e,re),H=new sI(E,V),$.reverseDepthBuffer&&f&&H.buffers.depth.setReversed(!0),ee=new CC(E),Z=new YR,J=new oI(E,V,H,Z,$,re,ee),pe=new xC(b),U=new wC(b),R=new UT(E),Me=new gC(E,R),j=new EC(E,R,ee,Me),ie=new IC(E,j,R,ee),Ue=new RC(E,$,J),Pe=new yC(Z),he=new XR(b,pe,U,V,$,Me,Pe),se=new fI(b,Z),Ce=new jR,xe=new eI(V),_e=new mC(b,pe,U,H,ie,d,l),Le=new iI(b,ie,$),W=new dI(E,ee,$,H),Fe=new vC(E,V,ee),k=new AC(E,V,ee),ee.programs=he.programs,b.capabilities=$,b.extensions=V,b.properties=Z,b.renderLists=Ce,b.shadowMap=Le,b.state=H,b.info=ee}Ae();const ye=new uI(b,E);this.xr=ye,this.getContext=function(){return E},this.getContextAttributes=function(){return E.getContextAttributes()},this.forceContextLoss=function(){const N=V.get("WEBGL_lose_context");N&&N.loseContext()},this.forceContextRestore=function(){const N=V.get("WEBGL_lose_context");N&&N.restoreContext()},this.getPixelRatio=function(){return K},this.setPixelRatio=function(N){N!==void 0&&(K=N,this.setSize(z,Q,!1))},this.getSize=function(N){return N.set(z,Q)},this.setSize=function(N,te,ce=!0){if(ye.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}z=N,Q=te,t.width=Math.floor(N*K),t.height=Math.floor(te*K),ce===!0&&(t.style.width=N+"px",t.style.height=te+"px"),this.setViewport(0,0,N,te)},this.getDrawingBufferSize=function(N){return N.set(z*K,Q*K).floor()},this.setDrawingBufferSize=function(N,te,ce){z=N,Q=te,K=ce,t.width=Math.floor(N*ce),t.height=Math.floor(te*ce),this.setViewport(0,0,N,te)},this.getCurrentViewport=function(N){return N.copy(A)},this.getViewport=function(N){return N.copy(oe)},this.setViewport=function(N,te,ce,ue){N.isVector4?oe.set(N.x,N.y,N.z,N.w):oe.set(N,te,ce,ue),H.viewport(A.copy(oe).multiplyScalar(K).round())},this.getScissor=function(N){return N.copy(Te)},this.setScissor=function(N,te,ce,ue){N.isVector4?Te.set(N.x,N.y,N.z,N.w):Te.set(N,te,ce,ue),H.scissor(D.copy(Te).multiplyScalar(K).round())},this.getScissorTest=function(){return ke},this.setScissorTest=function(N){H.setScissorTest(ke=N)},this.setOpaqueSort=function(N){fe=N},this.setTransparentSort=function(N){ge=N},this.getClearColor=function(N){return N.copy(_e.getClearColor())},this.setClearColor=function(){_e.setClearColor(...arguments)},this.getClearAlpha=function(){return _e.getClearAlpha()},this.setClearAlpha=function(){_e.setClearAlpha(...arguments)},this.clear=function(N=!0,te=!0,ce=!0){let ue=0;if(N){let ne=!1;if(S!==null){const we=S.texture.format;ne=we===Pu||we===Iu||we===Wa}if(ne){const we=S.texture.type,De=we===ci||we===$i||we===po||we===mo||we===Au||we===Cu,Ve=_e.getClearColor(),Be=_e.getClearAlpha(),$e=Ve.r,Ke=Ve.g,We=Ve.b;De?(p[0]=$e,p[1]=Ke,p[2]=We,p[3]=Be,E.clearBufferuiv(E.COLOR,0,p)):(y[0]=$e,y[1]=Ke,y[2]=We,y[3]=Be,E.clearBufferiv(E.COLOR,0,y))}else ue|=E.COLOR_BUFFER_BIT}te&&(ue|=E.DEPTH_BUFFER_BIT),ce&&(ue|=E.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),E.clear(ue)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Oe,!1),t.removeEventListener("webglcontextrestored",be,!1),t.removeEventListener("webglcontextcreationerror",me,!1),_e.dispose(),Ce.dispose(),xe.dispose(),Z.dispose(),pe.dispose(),U.dispose(),ie.dispose(),Me.dispose(),W.dispose(),he.dispose(),ye.dispose(),ye.removeEventListener("sessionstart",Up),ye.removeEventListener("sessionend",Np),Rr.stop()};function Oe(N){N.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),C=!0}function be(){console.log("THREE.WebGLRenderer: Context Restored."),C=!1;const N=ee.autoReset,te=Le.enabled,ce=Le.autoUpdate,ue=Le.needsUpdate,ne=Le.type;Ae(),ee.autoReset=N,Le.enabled=te,Le.autoUpdate=ce,Le.needsUpdate=ue,Le.type=ne}function me(N){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",N.statusMessage)}function Ne(N){const te=N.target;te.removeEventListener("dispose",Ne),qe(te)}function qe(N){mt(N),Z.remove(N)}function mt(N){const te=Z.get(N).programs;te!==void 0&&(te.forEach(function(ce){he.releaseProgram(ce)}),N.isShaderMaterial&&he.releaseShaderCache(N))}this.renderBufferDirect=function(N,te,ce,ue,ne,we){te===null&&(te=q);const De=ne.isMesh&&ne.matrixWorld.determinant()<0,Ve=Cx(N,te,ce,ue,ne);H.setMaterial(ue,De);let Be=ce.index,$e=1;if(ue.wireframe===!0){if(Be=j.getWireframeAttribute(ce),Be===void 0)return;$e=2}const Ke=ce.drawRange,We=ce.attributes.position;let ot=Ke.start*$e,_t=(Ke.start+Ke.count)*$e;we!==null&&(ot=Math.max(ot,we.start*$e),_t=Math.min(_t,(we.start+we.count)*$e)),Be!==null?(ot=Math.max(ot,0),_t=Math.min(_t,Be.count)):We!=null&&(ot=Math.max(ot,0),_t=Math.min(_t,We.count));const Bt=_t-ot;if(Bt<0||Bt===1/0)return;Me.setup(ne,ue,Ve,ce,Be);let At,xt=Fe;if(Be!==null&&(At=R.get(Be),xt=k,xt.setIndex(At)),ne.isMesh)ue.wireframe===!0?(H.setLineWidth(ue.wireframeLinewidth*L()),xt.setMode(E.LINES)):xt.setMode(E.TRIANGLES);else if(ne.isLine){let Ye=ue.linewidth;Ye===void 0&&(Ye=1),H.setLineWidth(Ye*L()),ne.isLineSegments?xt.setMode(E.LINES):ne.isLineLoop?xt.setMode(E.LINE_LOOP):xt.setMode(E.LINE_STRIP)}else ne.isPoints?xt.setMode(E.POINTS):ne.isSprite&&xt.setMode(E.TRIANGLES);if(ne.isBatchedMesh)if(ne._multiDrawInstances!==null)oo("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),xt.renderMultiDrawInstances(ne._multiDrawStarts,ne._multiDrawCounts,ne._multiDrawCount,ne._multiDrawInstances);else if(V.get("WEBGL_multi_draw"))xt.renderMultiDraw(ne._multiDrawStarts,ne._multiDrawCounts,ne._multiDrawCount);else{const Ye=ne._multiDrawStarts,Ut=ne._multiDrawCounts,dt=ne._multiDrawCount,Fn=Be?R.get(Be).bytesPerElement:1,ws=Z.get(ue).currentProgram.getUniforms();for(let Bn=0;Bn<dt;Bn++)ws.setValue(E,"_gl_DrawID",Bn),xt.render(Ye[Bn]/Fn,Ut[Bn])}else if(ne.isInstancedMesh)xt.renderInstances(ot,Bt,ne.count);else if(ce.isInstancedBufferGeometry){const Ye=ce._maxInstanceCount!==void 0?ce._maxInstanceCount:1/0,Ut=Math.min(ce.instanceCount,Ye);xt.renderInstances(ot,Bt,Ut)}else xt.render(ot,Bt)};function lt(N,te,ce){N.transparent===!0&&N.side===Dn&&N.forceSinglePass===!1?(N.side=fn,N.needsUpdate=!0,ol(N,te,ce),N.side=qi,N.needsUpdate=!0,ol(N,te,ce),N.side=Dn):ol(N,te,ce)}this.compile=function(N,te,ce=null){ce===null&&(ce=N),g=xe.get(ce),g.init(te),x.push(g),ce.traverseVisible(function(ne){ne.isLight&&ne.layers.test(te.layers)&&(g.pushLight(ne),ne.castShadow&&g.pushShadow(ne))}),N!==ce&&N.traverseVisible(function(ne){ne.isLight&&ne.layers.test(te.layers)&&(g.pushLight(ne),ne.castShadow&&g.pushShadow(ne))}),g.setupLights();const ue=new Set;return N.traverse(function(ne){if(!(ne.isMesh||ne.isPoints||ne.isLine||ne.isSprite))return;const we=ne.material;if(we)if(Array.isArray(we))for(let De=0;De<we.length;De++){const Ve=we[De];lt(Ve,ce,ne),ue.add(Ve)}else lt(we,ce,ne),ue.add(we)}),g=x.pop(),ue},this.compileAsync=function(N,te,ce=null){const ue=this.compile(N,te,ce);return new Promise(ne=>{function we(){if(ue.forEach(function(De){Z.get(De).currentProgram.isReady()&&ue.delete(De)}),ue.size===0){ne(N);return}setTimeout(we,10)}V.get("KHR_parallel_shader_compile")!==null?we():setTimeout(we,10)})};let rn=null;function Ci(N){rn&&rn(N)}function Up(){Rr.stop()}function Np(){Rr.start()}const Rr=new Oy;Rr.setAnimationLoop(Ci),typeof self<"u"&&Rr.setContext(self),this.setAnimationLoop=function(N){rn=N,ye.setAnimationLoop(N),N===null?Rr.stop():Rr.start()},ye.addEventListener("sessionstart",Up),ye.addEventListener("sessionend",Np),this.render=function(N,te){if(te!==void 0&&te.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(C===!0)return;if(N.matrixWorldAutoUpdate===!0&&N.updateMatrixWorld(),te.parent===null&&te.matrixWorldAutoUpdate===!0&&te.updateMatrixWorld(),ye.enabled===!0&&ye.isPresenting===!0&&(ye.cameraAutoUpdate===!0&&ye.updateCamera(te),te=ye.getCamera()),N.isScene===!0&&N.onBeforeRender(b,N,te,S),g=xe.get(N,x.length),g.init(te),x.push(g),le.multiplyMatrices(te.projectionMatrix,te.matrixWorldInverse),ae.setFromProjectionMatrix(le),Re=this.localClippingEnabled,ve=Pe.init(this.clippingPlanes,Re),m=Ce.get(N,M.length),m.init(),M.push(m),ye.enabled===!0&&ye.isPresenting===!0){const we=b.xr.getDepthSensingMesh();we!==null&&sh(we,te,-1/0,b.sortObjects)}sh(N,te,0,b.sortObjects),m.finish(),b.sortObjects===!0&&m.sort(fe,ge),P=ye.enabled===!1||ye.isPresenting===!1||ye.hasDepthSensing()===!1,P&&_e.addToRenderList(m,N),this.info.render.frame++,ve===!0&&Pe.beginShadows();const ce=g.state.shadowsArray;Le.render(ce,N,te),ve===!0&&Pe.endShadows(),this.info.autoReset===!0&&this.info.reset();const ue=m.opaque,ne=m.transmissive;if(g.setupLights(),te.isArrayCamera){const we=te.cameras;if(ne.length>0)for(let De=0,Ve=we.length;De<Ve;De++){const Be=we[De];Fp(ue,ne,N,Be)}P&&_e.render(N);for(let De=0,Ve=we.length;De<Ve;De++){const Be=we[De];Op(m,N,Be,Be.viewport)}}else ne.length>0&&Fp(ue,ne,N,te),P&&_e.render(N),Op(m,N,te);S!==null&&T===0&&(J.updateMultisampleRenderTarget(S),J.updateRenderTargetMipmap(S)),N.isScene===!0&&N.onAfterRender(b,N,te),Me.resetDefaultState(),_=-1,v=null,x.pop(),x.length>0?(g=x[x.length-1],ve===!0&&Pe.setGlobalState(b.clippingPlanes,g.state.camera)):g=null,M.pop(),M.length>0?m=M[M.length-1]:m=null};function sh(N,te,ce,ue){if(N.visible===!1)return;if(N.layers.test(te.layers)){if(N.isGroup)ce=N.renderOrder;else if(N.isLOD)N.autoUpdate===!0&&N.update(te);else if(N.isLight)g.pushLight(N),N.castShadow&&g.pushShadow(N);else if(N.isSprite){if(!N.frustumCulled||ae.intersectsSprite(N)){ue&&F.setFromMatrixPosition(N.matrixWorld).applyMatrix4(le);const De=ie.update(N),Ve=N.material;Ve.visible&&m.push(N,De,Ve,ce,F.z,null)}}else if((N.isMesh||N.isLine||N.isPoints)&&(!N.frustumCulled||ae.intersectsObject(N))){const De=ie.update(N),Ve=N.material;if(ue&&(N.boundingSphere!==void 0?(N.boundingSphere===null&&N.computeBoundingSphere(),F.copy(N.boundingSphere.center)):(De.boundingSphere===null&&De.computeBoundingSphere(),F.copy(De.boundingSphere.center)),F.applyMatrix4(N.matrixWorld).applyMatrix4(le)),Array.isArray(Ve)){const Be=De.groups;for(let $e=0,Ke=Be.length;$e<Ke;$e++){const We=Be[$e],ot=Ve[We.materialIndex];ot&&ot.visible&&m.push(N,De,ot,ce,F.z,We)}}else Ve.visible&&m.push(N,De,Ve,ce,F.z,null)}}const we=N.children;for(let De=0,Ve=we.length;De<Ve;De++)sh(we[De],te,ce,ue)}function Op(N,te,ce,ue){const ne=N.opaque,we=N.transmissive,De=N.transparent;g.setupLightsView(ce),ve===!0&&Pe.setGlobalState(b.clippingPlanes,ce),ue&&H.viewport(A.copy(ue)),ne.length>0&&sl(ne,te,ce),we.length>0&&sl(we,te,ce),De.length>0&&sl(De,te,ce),H.buffers.depth.setTest(!0),H.buffers.depth.setMask(!0),H.buffers.color.setMask(!0),H.setPolygonOffset(!1)}function Fp(N,te,ce,ue){if((ce.isScene===!0?ce.overrideMaterial:null)!==null)return;g.state.transmissionRenderTarget[ue.id]===void 0&&(g.state.transmissionRenderTarget[ue.id]=new ui(1,1,{generateMipmaps:!0,type:V.has("EXT_color_buffer_half_float")||V.has("EXT_color_buffer_float")?xs:ci,minFilter:ii,samples:4,stencilBuffer:s,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:ct.workingColorSpace}));const we=g.state.transmissionRenderTarget[ue.id],De=ue.viewport||A;we.setSize(De.z*b.transmissionResolutionScale,De.w*b.transmissionResolutionScale);const Ve=b.getRenderTarget(),Be=b.getActiveCubeFace(),$e=b.getActiveMipmapLevel();b.setRenderTarget(we),b.getClearColor(X),Y=b.getClearAlpha(),Y<1&&b.setClearColor(16777215,.5),b.clear(),P&&_e.render(ce);const Ke=b.toneMapping;b.toneMapping=ai;const We=ue.viewport;if(ue.viewport!==void 0&&(ue.viewport=void 0),g.setupLightsView(ue),ve===!0&&Pe.setGlobalState(b.clippingPlanes,ue),sl(N,ce,ue),J.updateMultisampleRenderTarget(we),J.updateRenderTargetMipmap(we),V.has("WEBGL_multisampled_render_to_texture")===!1){let ot=!1;for(let _t=0,Bt=te.length;_t<Bt;_t++){const At=te[_t],xt=At.object,Ye=At.geometry,Ut=At.material,dt=At.group;if(Ut.side===Dn&&xt.layers.test(ue.layers)){const Fn=Ut.side;Ut.side=fn,Ut.needsUpdate=!0,Bp(xt,ce,ue,Ye,Ut,dt),Ut.side=Fn,Ut.needsUpdate=!0,ot=!0}}ot===!0&&(J.updateMultisampleRenderTarget(we),J.updateRenderTargetMipmap(we))}b.setRenderTarget(Ve,Be,$e),b.setClearColor(X,Y),We!==void 0&&(ue.viewport=We),b.toneMapping=Ke}function sl(N,te,ce){const ue=te.isScene===!0?te.overrideMaterial:null;for(let ne=0,we=N.length;ne<we;ne++){const De=N[ne],Ve=De.object,Be=De.geometry,$e=De.group;let Ke=De.material;Ke.allowOverride===!0&&ue!==null&&(Ke=ue),Ve.layers.test(ce.layers)&&Bp(Ve,te,ce,Be,Ke,$e)}}function Bp(N,te,ce,ue,ne,we){N.onBeforeRender(b,te,ce,ue,ne,we),N.modelViewMatrix.multiplyMatrices(ce.matrixWorldInverse,N.matrixWorld),N.normalMatrix.getNormalMatrix(N.modelViewMatrix),ne.onBeforeRender(b,te,ce,ue,N,we),ne.transparent===!0&&ne.side===Dn&&ne.forceSinglePass===!1?(ne.side=fn,ne.needsUpdate=!0,b.renderBufferDirect(ce,te,ue,ne,N,we),ne.side=qi,ne.needsUpdate=!0,b.renderBufferDirect(ce,te,ue,ne,N,we),ne.side=Dn):b.renderBufferDirect(ce,te,ue,ne,N,we),N.onAfterRender(b,te,ce,ue,ne,we)}function ol(N,te,ce){te.isScene!==!0&&(te=q);const ue=Z.get(N),ne=g.state.lights,we=g.state.shadowsArray,De=ne.state.version,Ve=he.getParameters(N,ne.state,we,te,ce),Be=he.getProgramCacheKey(Ve);let $e=ue.programs;ue.environment=N.isMeshStandardMaterial?te.environment:null,ue.fog=te.fog,ue.envMap=(N.isMeshStandardMaterial?U:pe).get(N.envMap||ue.environment),ue.envMapRotation=ue.environment!==null&&N.envMap===null?te.environmentRotation:N.envMapRotation,$e===void 0&&(N.addEventListener("dispose",Ne),$e=new Map,ue.programs=$e);let Ke=$e.get(Be);if(Ke!==void 0){if(ue.currentProgram===Ke&&ue.lightsStateVersion===De)return kp(N,Ve),Ke}else Ve.uniforms=he.getUniforms(N),N.onBeforeCompile(Ve,b),Ke=he.acquireProgram(Ve,Be),$e.set(Be,Ke),ue.uniforms=Ve.uniforms;const We=ue.uniforms;return(!N.isShaderMaterial&&!N.isRawShaderMaterial||N.clipping===!0)&&(We.clippingPlanes=Pe.uniform),kp(N,Ve),ue.needsLights=Ix(N),ue.lightsStateVersion=De,ue.needsLights&&(We.ambientLightColor.value=ne.state.ambient,We.lightProbe.value=ne.state.probe,We.directionalLights.value=ne.state.directional,We.directionalLightShadows.value=ne.state.directionalShadow,We.spotLights.value=ne.state.spot,We.spotLightShadows.value=ne.state.spotShadow,We.rectAreaLights.value=ne.state.rectArea,We.ltc_1.value=ne.state.rectAreaLTC1,We.ltc_2.value=ne.state.rectAreaLTC2,We.pointLights.value=ne.state.point,We.pointLightShadows.value=ne.state.pointShadow,We.hemisphereLights.value=ne.state.hemi,We.directionalShadowMap.value=ne.state.directionalShadowMap,We.directionalShadowMatrix.value=ne.state.directionalShadowMatrix,We.spotShadowMap.value=ne.state.spotShadowMap,We.spotLightMatrix.value=ne.state.spotLightMatrix,We.spotLightMap.value=ne.state.spotLightMap,We.pointShadowMap.value=ne.state.pointShadowMap,We.pointShadowMatrix.value=ne.state.pointShadowMatrix),ue.currentProgram=Ke,ue.uniformsList=null,Ke}function zp(N){if(N.uniformsList===null){const te=N.currentProgram.getUniforms();N.uniformsList=hc.seqWithValue(te.seq,N.uniforms)}return N.uniformsList}function kp(N,te){const ce=Z.get(N);ce.outputColorSpace=te.outputColorSpace,ce.batching=te.batching,ce.batchingColor=te.batchingColor,ce.instancing=te.instancing,ce.instancingColor=te.instancingColor,ce.instancingMorph=te.instancingMorph,ce.skinning=te.skinning,ce.morphTargets=te.morphTargets,ce.morphNormals=te.morphNormals,ce.morphColors=te.morphColors,ce.morphTargetsCount=te.morphTargetsCount,ce.numClippingPlanes=te.numClippingPlanes,ce.numIntersection=te.numClipIntersection,ce.vertexAlphas=te.vertexAlphas,ce.vertexTangents=te.vertexTangents,ce.toneMapping=te.toneMapping}function Cx(N,te,ce,ue,ne){te.isScene!==!0&&(te=q),J.resetTextureUnits();const we=te.fog,De=ue.isMeshStandardMaterial?te.environment:null,Ve=S===null?b.outputColorSpace:S.isXRRenderTarget===!0?S.texture.colorSpace:ps,Be=(ue.isMeshStandardMaterial?U:pe).get(ue.envMap||De),$e=ue.vertexColors===!0&&!!ce.attributes.color&&ce.attributes.color.itemSize===4,Ke=!!ce.attributes.tangent&&(!!ue.normalMap||ue.anisotropy>0),We=!!ce.morphAttributes.position,ot=!!ce.morphAttributes.normal,_t=!!ce.morphAttributes.color;let Bt=ai;ue.toneMapped&&(S===null||S.isXRRenderTarget===!0)&&(Bt=b.toneMapping);const At=ce.morphAttributes.position||ce.morphAttributes.normal||ce.morphAttributes.color,xt=At!==void 0?At.length:0,Ye=Z.get(ue),Ut=g.state.lights;if(ve===!0&&(Re===!0||N!==v)){const vn=N===v&&ue.id===_;Pe.setState(ue,N,vn)}let dt=!1;ue.version===Ye.__version?(Ye.needsLights&&Ye.lightsStateVersion!==Ut.state.version||Ye.outputColorSpace!==Ve||ne.isBatchedMesh&&Ye.batching===!1||!ne.isBatchedMesh&&Ye.batching===!0||ne.isBatchedMesh&&Ye.batchingColor===!0&&ne.colorTexture===null||ne.isBatchedMesh&&Ye.batchingColor===!1&&ne.colorTexture!==null||ne.isInstancedMesh&&Ye.instancing===!1||!ne.isInstancedMesh&&Ye.instancing===!0||ne.isSkinnedMesh&&Ye.skinning===!1||!ne.isSkinnedMesh&&Ye.skinning===!0||ne.isInstancedMesh&&Ye.instancingColor===!0&&ne.instanceColor===null||ne.isInstancedMesh&&Ye.instancingColor===!1&&ne.instanceColor!==null||ne.isInstancedMesh&&Ye.instancingMorph===!0&&ne.morphTexture===null||ne.isInstancedMesh&&Ye.instancingMorph===!1&&ne.morphTexture!==null||Ye.envMap!==Be||ue.fog===!0&&Ye.fog!==we||Ye.numClippingPlanes!==void 0&&(Ye.numClippingPlanes!==Pe.numPlanes||Ye.numIntersection!==Pe.numIntersection)||Ye.vertexAlphas!==$e||Ye.vertexTangents!==Ke||Ye.morphTargets!==We||Ye.morphNormals!==ot||Ye.morphColors!==_t||Ye.toneMapping!==Bt||Ye.morphTargetsCount!==xt)&&(dt=!0):(dt=!0,Ye.__version=ue.version);let Fn=Ye.currentProgram;dt===!0&&(Fn=ol(ue,te,ne));let ws=!1,Bn=!1,Io=!1;const It=Fn.getUniforms(),Wn=Ye.uniforms;if(H.useProgram(Fn.program)&&(ws=!0,Bn=!0,Io=!0),ue.id!==_&&(_=ue.id,Bn=!0),ws||v!==N){H.buffers.depth.getReversed()?(Se.copy(N.projectionMatrix),rw(Se),sw(Se),It.setValue(E,"projectionMatrix",Se)):It.setValue(E,"projectionMatrix",N.projectionMatrix),It.setValue(E,"viewMatrix",N.matrixWorldInverse);const Cn=It.map.cameraPosition;Cn!==void 0&&Cn.setValue(E,I.setFromMatrixPosition(N.matrixWorld)),$.logarithmicDepthBuffer&&It.setValue(E,"logDepthBufFC",2/(Math.log(N.far+1)/Math.LN2)),(ue.isMeshPhongMaterial||ue.isMeshToonMaterial||ue.isMeshLambertMaterial||ue.isMeshBasicMaterial||ue.isMeshStandardMaterial||ue.isShaderMaterial)&&It.setValue(E,"isOrthographic",N.isOrthographicCamera===!0),v!==N&&(v=N,Bn=!0,Io=!0)}if(ne.isSkinnedMesh){It.setOptional(E,ne,"bindMatrix"),It.setOptional(E,ne,"bindMatrixInverse");const vn=ne.skeleton;vn&&(vn.boneTexture===null&&vn.computeBoneTexture(),It.setValue(E,"boneTexture",vn.boneTexture,J))}ne.isBatchedMesh&&(It.setOptional(E,ne,"batchingTexture"),It.setValue(E,"batchingTexture",ne._matricesTexture,J),It.setOptional(E,ne,"batchingIdTexture"),It.setValue(E,"batchingIdTexture",ne._indirectTexture,J),It.setOptional(E,ne,"batchingColorTexture"),ne._colorsTexture!==null&&It.setValue(E,"batchingColorTexture",ne._colorsTexture,J));const Xn=ce.morphAttributes;if((Xn.position!==void 0||Xn.normal!==void 0||Xn.color!==void 0)&&Ue.update(ne,ce,Fn),(Bn||Ye.receiveShadow!==ne.receiveShadow)&&(Ye.receiveShadow=ne.receiveShadow,It.setValue(E,"receiveShadow",ne.receiveShadow)),ue.isMeshGouraudMaterial&&ue.envMap!==null&&(Wn.envMap.value=Be,Wn.flipEnvMap.value=Be.isCubeTexture&&Be.isRenderTargetTexture===!1?-1:1),ue.isMeshStandardMaterial&&ue.envMap===null&&te.environment!==null&&(Wn.envMapIntensity.value=te.environmentIntensity),Bn&&(It.setValue(E,"toneMappingExposure",b.toneMappingExposure),Ye.needsLights&&Rx(Wn,Io),we&&ue.fog===!0&&se.refreshFogUniforms(Wn,we),se.refreshMaterialUniforms(Wn,ue,K,Q,g.state.transmissionRenderTarget[N.id]),hc.upload(E,zp(Ye),Wn,J)),ue.isShaderMaterial&&ue.uniformsNeedUpdate===!0&&(hc.upload(E,zp(Ye),Wn,J),ue.uniformsNeedUpdate=!1),ue.isSpriteMaterial&&It.setValue(E,"center",ne.center),It.setValue(E,"modelViewMatrix",ne.modelViewMatrix),It.setValue(E,"normalMatrix",ne.normalMatrix),It.setValue(E,"modelMatrix",ne.matrixWorld),ue.isShaderMaterial||ue.isRawShaderMaterial){const vn=ue.uniformsGroups;for(let Cn=0,oh=vn.length;Cn<oh;Cn++){const Ir=vn[Cn];W.update(Ir,Fn),W.bind(Ir,Fn)}}return Fn}function Rx(N,te){N.ambientLightColor.needsUpdate=te,N.lightProbe.needsUpdate=te,N.directionalLights.needsUpdate=te,N.directionalLightShadows.needsUpdate=te,N.pointLights.needsUpdate=te,N.pointLightShadows.needsUpdate=te,N.spotLights.needsUpdate=te,N.spotLightShadows.needsUpdate=te,N.rectAreaLights.needsUpdate=te,N.hemisphereLights.needsUpdate=te}function Ix(N){return N.isMeshLambertMaterial||N.isMeshToonMaterial||N.isMeshPhongMaterial||N.isMeshStandardMaterial||N.isShadowMaterial||N.isShaderMaterial&&N.lights===!0}this.getActiveCubeFace=function(){return w},this.getActiveMipmapLevel=function(){return T},this.getRenderTarget=function(){return S},this.setRenderTargetTextures=function(N,te,ce){const ue=Z.get(N);ue.__autoAllocateDepthBuffer=N.resolveDepthBuffer===!1,ue.__autoAllocateDepthBuffer===!1&&(ue.__useRenderToTexture=!1),Z.get(N.texture).__webglTexture=te,Z.get(N.depthTexture).__webglTexture=ue.__autoAllocateDepthBuffer?void 0:ce,ue.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(N,te){const ce=Z.get(N);ce.__webglFramebuffer=te,ce.__useDefaultFramebuffer=te===void 0};const Px=E.createFramebuffer();this.setRenderTarget=function(N,te=0,ce=0){S=N,w=te,T=ce;let ue=!0,ne=null,we=!1,De=!1;if(N){const Be=Z.get(N);if(Be.__useDefaultFramebuffer!==void 0)H.bindFramebuffer(E.FRAMEBUFFER,null),ue=!1;else if(Be.__webglFramebuffer===void 0)J.setupRenderTarget(N);else if(Be.__hasExternalTextures)J.rebindTextures(N,Z.get(N.texture).__webglTexture,Z.get(N.depthTexture).__webglTexture);else if(N.depthBuffer){const We=N.depthTexture;if(Be.__boundDepthTexture!==We){if(We!==null&&Z.has(We)&&(N.width!==We.image.width||N.height!==We.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");J.setupDepthRenderbuffer(N)}}const $e=N.texture;($e.isData3DTexture||$e.isDataArrayTexture||$e.isCompressedArrayTexture)&&(De=!0);const Ke=Z.get(N).__webglFramebuffer;N.isWebGLCubeRenderTarget?(Array.isArray(Ke[te])?ne=Ke[te][ce]:ne=Ke[te],we=!0):N.samples>0&&J.useMultisampledRTT(N)===!1?ne=Z.get(N).__webglMultisampledFramebuffer:Array.isArray(Ke)?ne=Ke[ce]:ne=Ke,A.copy(N.viewport),D.copy(N.scissor),B=N.scissorTest}else A.copy(oe).multiplyScalar(K).floor(),D.copy(Te).multiplyScalar(K).floor(),B=ke;if(ce!==0&&(ne=Px),H.bindFramebuffer(E.FRAMEBUFFER,ne)&&ue&&H.drawBuffers(N,ne),H.viewport(A),H.scissor(D),H.setScissorTest(B),we){const Be=Z.get(N.texture);E.framebufferTexture2D(E.FRAMEBUFFER,E.COLOR_ATTACHMENT0,E.TEXTURE_CUBE_MAP_POSITIVE_X+te,Be.__webglTexture,ce)}else if(De){const Be=Z.get(N.texture),$e=te;E.framebufferTextureLayer(E.FRAMEBUFFER,E.COLOR_ATTACHMENT0,Be.__webglTexture,ce,$e)}else if(N!==null&&ce!==0){const Be=Z.get(N.texture);E.framebufferTexture2D(E.FRAMEBUFFER,E.COLOR_ATTACHMENT0,E.TEXTURE_2D,Be.__webglTexture,ce)}_=-1},this.readRenderTargetPixels=function(N,te,ce,ue,ne,we,De,Ve=0){if(!(N&&N.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Be=Z.get(N).__webglFramebuffer;if(N.isWebGLCubeRenderTarget&&De!==void 0&&(Be=Be[De]),Be){H.bindFramebuffer(E.FRAMEBUFFER,Be);try{const $e=N.textures[Ve],Ke=$e.format,We=$e.type;if(!$.textureFormatReadable(Ke)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!$.textureTypeReadable(We)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}te>=0&&te<=N.width-ue&&ce>=0&&ce<=N.height-ne&&(N.textures.length>1&&E.readBuffer(E.COLOR_ATTACHMENT0+Ve),E.readPixels(te,ce,ue,ne,re.convert(Ke),re.convert(We),we))}finally{const $e=S!==null?Z.get(S).__webglFramebuffer:null;H.bindFramebuffer(E.FRAMEBUFFER,$e)}}},this.readRenderTargetPixelsAsync=async function(N,te,ce,ue,ne,we,De,Ve=0){if(!(N&&N.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Be=Z.get(N).__webglFramebuffer;if(N.isWebGLCubeRenderTarget&&De!==void 0&&(Be=Be[De]),Be)if(te>=0&&te<=N.width-ue&&ce>=0&&ce<=N.height-ne){H.bindFramebuffer(E.FRAMEBUFFER,Be);const $e=N.textures[Ve],Ke=$e.format,We=$e.type;if(!$.textureFormatReadable(Ke))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!$.textureTypeReadable(We))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const ot=E.createBuffer();E.bindBuffer(E.PIXEL_PACK_BUFFER,ot),E.bufferData(E.PIXEL_PACK_BUFFER,we.byteLength,E.STREAM_READ),N.textures.length>1&&E.readBuffer(E.COLOR_ATTACHMENT0+Ve),E.readPixels(te,ce,ue,ne,re.convert(Ke),re.convert(We),0);const _t=S!==null?Z.get(S).__webglFramebuffer:null;H.bindFramebuffer(E.FRAMEBUFFER,_t);const Bt=E.fenceSync(E.SYNC_GPU_COMMANDS_COMPLETE,0);return E.flush(),await iw(E,Bt,4),E.bindBuffer(E.PIXEL_PACK_BUFFER,ot),E.getBufferSubData(E.PIXEL_PACK_BUFFER,0,we),E.deleteBuffer(ot),E.deleteSync(Bt),we}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(N,te=null,ce=0){const ue=Math.pow(2,-ce),ne=Math.floor(N.image.width*ue),we=Math.floor(N.image.height*ue),De=te!==null?te.x:0,Ve=te!==null?te.y:0;J.setTexture2D(N,0),E.copyTexSubImage2D(E.TEXTURE_2D,ce,0,0,De,Ve,ne,we),H.unbindTexture()};const Lx=E.createFramebuffer(),Dx=E.createFramebuffer();this.copyTextureToTexture=function(N,te,ce=null,ue=null,ne=0,we=null){we===null&&(ne!==0?(oo("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),we=ne,ne=0):we=0);let De,Ve,Be,$e,Ke,We,ot,_t,Bt;const At=N.isCompressedTexture?N.mipmaps[we]:N.image;if(ce!==null)De=ce.max.x-ce.min.x,Ve=ce.max.y-ce.min.y,Be=ce.isBox3?ce.max.z-ce.min.z:1,$e=ce.min.x,Ke=ce.min.y,We=ce.isBox3?ce.min.z:0;else{const Xn=Math.pow(2,-ne);De=Math.floor(At.width*Xn),Ve=Math.floor(At.height*Xn),N.isDataArrayTexture?Be=At.depth:N.isData3DTexture?Be=Math.floor(At.depth*Xn):Be=1,$e=0,Ke=0,We=0}ue!==null?(ot=ue.x,_t=ue.y,Bt=ue.z):(ot=0,_t=0,Bt=0);const xt=re.convert(te.format),Ye=re.convert(te.type);let Ut;te.isData3DTexture?(J.setTexture3D(te,0),Ut=E.TEXTURE_3D):te.isDataArrayTexture||te.isCompressedArrayTexture?(J.setTexture2DArray(te,0),Ut=E.TEXTURE_2D_ARRAY):(J.setTexture2D(te,0),Ut=E.TEXTURE_2D),E.pixelStorei(E.UNPACK_FLIP_Y_WEBGL,te.flipY),E.pixelStorei(E.UNPACK_PREMULTIPLY_ALPHA_WEBGL,te.premultiplyAlpha),E.pixelStorei(E.UNPACK_ALIGNMENT,te.unpackAlignment);const dt=E.getParameter(E.UNPACK_ROW_LENGTH),Fn=E.getParameter(E.UNPACK_IMAGE_HEIGHT),ws=E.getParameter(E.UNPACK_SKIP_PIXELS),Bn=E.getParameter(E.UNPACK_SKIP_ROWS),Io=E.getParameter(E.UNPACK_SKIP_IMAGES);E.pixelStorei(E.UNPACK_ROW_LENGTH,At.width),E.pixelStorei(E.UNPACK_IMAGE_HEIGHT,At.height),E.pixelStorei(E.UNPACK_SKIP_PIXELS,$e),E.pixelStorei(E.UNPACK_SKIP_ROWS,Ke),E.pixelStorei(E.UNPACK_SKIP_IMAGES,We);const It=N.isDataArrayTexture||N.isData3DTexture,Wn=te.isDataArrayTexture||te.isData3DTexture;if(N.isDepthTexture){const Xn=Z.get(N),vn=Z.get(te),Cn=Z.get(Xn.__renderTarget),oh=Z.get(vn.__renderTarget);H.bindFramebuffer(E.READ_FRAMEBUFFER,Cn.__webglFramebuffer),H.bindFramebuffer(E.DRAW_FRAMEBUFFER,oh.__webglFramebuffer);for(let Ir=0;Ir<Be;Ir++)It&&(E.framebufferTextureLayer(E.READ_FRAMEBUFFER,E.COLOR_ATTACHMENT0,Z.get(N).__webglTexture,ne,We+Ir),E.framebufferTextureLayer(E.DRAW_FRAMEBUFFER,E.COLOR_ATTACHMENT0,Z.get(te).__webglTexture,we,Bt+Ir)),E.blitFramebuffer($e,Ke,De,Ve,ot,_t,De,Ve,E.DEPTH_BUFFER_BIT,E.NEAREST);H.bindFramebuffer(E.READ_FRAMEBUFFER,null),H.bindFramebuffer(E.DRAW_FRAMEBUFFER,null)}else if(ne!==0||N.isRenderTargetTexture||Z.has(N)){const Xn=Z.get(N),vn=Z.get(te);H.bindFramebuffer(E.READ_FRAMEBUFFER,Lx),H.bindFramebuffer(E.DRAW_FRAMEBUFFER,Dx);for(let Cn=0;Cn<Be;Cn++)It?E.framebufferTextureLayer(E.READ_FRAMEBUFFER,E.COLOR_ATTACHMENT0,Xn.__webglTexture,ne,We+Cn):E.framebufferTexture2D(E.READ_FRAMEBUFFER,E.COLOR_ATTACHMENT0,E.TEXTURE_2D,Xn.__webglTexture,ne),Wn?E.framebufferTextureLayer(E.DRAW_FRAMEBUFFER,E.COLOR_ATTACHMENT0,vn.__webglTexture,we,Bt+Cn):E.framebufferTexture2D(E.DRAW_FRAMEBUFFER,E.COLOR_ATTACHMENT0,E.TEXTURE_2D,vn.__webglTexture,we),ne!==0?E.blitFramebuffer($e,Ke,De,Ve,ot,_t,De,Ve,E.COLOR_BUFFER_BIT,E.NEAREST):Wn?E.copyTexSubImage3D(Ut,we,ot,_t,Bt+Cn,$e,Ke,De,Ve):E.copyTexSubImage2D(Ut,we,ot,_t,$e,Ke,De,Ve);H.bindFramebuffer(E.READ_FRAMEBUFFER,null),H.bindFramebuffer(E.DRAW_FRAMEBUFFER,null)}else Wn?N.isDataTexture||N.isData3DTexture?E.texSubImage3D(Ut,we,ot,_t,Bt,De,Ve,Be,xt,Ye,At.data):te.isCompressedArrayTexture?E.compressedTexSubImage3D(Ut,we,ot,_t,Bt,De,Ve,Be,xt,At.data):E.texSubImage3D(Ut,we,ot,_t,Bt,De,Ve,Be,xt,Ye,At):N.isDataTexture?E.texSubImage2D(E.TEXTURE_2D,we,ot,_t,De,Ve,xt,Ye,At.data):N.isCompressedTexture?E.compressedTexSubImage2D(E.TEXTURE_2D,we,ot,_t,At.width,At.height,xt,At.data):E.texSubImage2D(E.TEXTURE_2D,we,ot,_t,De,Ve,xt,Ye,At);E.pixelStorei(E.UNPACK_ROW_LENGTH,dt),E.pixelStorei(E.UNPACK_IMAGE_HEIGHT,Fn),E.pixelStorei(E.UNPACK_SKIP_PIXELS,ws),E.pixelStorei(E.UNPACK_SKIP_ROWS,Bn),E.pixelStorei(E.UNPACK_SKIP_IMAGES,Io),we===0&&te.generateMipmaps&&E.generateMipmap(Ut),H.unbindTexture()},this.copyTextureToTexture3D=function(N,te,ce=null,ue=null,ne=0){return oo('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(N,te,ce,ue,ne)},this.initRenderTarget=function(N){Z.get(N).__webglFramebuffer===void 0&&J.setupRenderTarget(N)},this.initTexture=function(N){N.isCubeTexture?J.setTextureCube(N,0):N.isData3DTexture?J.setTexture3D(N,0):N.isDataArrayTexture||N.isCompressedArrayTexture?J.setTexture2DArray(N,0):J.setTexture2D(N,0),H.unbindTexture()},this.resetState=function(){w=0,T=0,S=null,H.reset(),Me.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return jn}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=ct._getDrawingBufferColorSpace(e),t.unpackColorSpace=ct._getUnpackColorSpace()}}const pI=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:Su,AddEquation:pr,AddOperation:c_,AdditiveAnimationBlendMode:Zd,AdditiveBlending:Sc,AgXToneMapping:p_,AlphaFormat:Yd,AlwaysCompare:R_,AlwaysDepth:Ac,AlwaysStencilFunc:Xf,AmbientLight:by,AnimationAction:Iy,AnimationClip:Fa,AnimationLoader:L1,AnimationMixer:aT,AnimationObjectGroup:sT,AnimationUtils:C1,ArcCurve:q_,ArrayCamera:Ay,ArrowHelper:ET,AttachedBindMode:Wf,Audio:Cy,AudioAnalyser:$1,AudioContext:xp,AudioListener:Y1,AudioLoader:G1,AxesHelper:AT,BackSide:fn,BasicDepthPacking:x_,BasicShadowMap:iS,BatchedMesh:H_,Bone:ip,BooleanKeyframeTrack:Ms,Box2:Ly,Box3:Kt,Box3Helper:wT,BoxGeometry:Tr,BoxHelper:ST,BufferAttribute:ft,BufferGeometry:tt,BufferGeometryLoader:Ey,ByteType:Gd,Cache:xi,Camera:qa,CameraHelper:MT,CanvasTexture:Kw,CapsuleGeometry:zu,CatmullRomCurve3:j_,CineonToneMapping:f_,CircleGeometry:ku,ClampToEdgeWrapping:nn,Clock:Ju,Color:Ee,ColorKeyframeTrack:vp,ColorManagement:ct,CompressedArrayTexture:$w,CompressedCubeTexture:Zw,CompressedTexture:as,CompressedTextureLoader:D1,ConeGeometry:Ka,ConstantAlphaFactor:o_,ConstantColorFactor:r_,Controls:CT,CubeCamera:N_,CubeReflectionMapping:ji,CubeRefractionMapping:br,CubeTexture:ja,CubeTextureLoader:U1,CubeUVReflectionMapping:Eo,CubicBezierCurve:ap,CubicBezierCurve3:$_,CubicInterpolant:dy,CullFaceBack:Vf,CullFaceFront:G0,CullFaceFrontBack:nS,CullFaceNone:H0,Curve:fi,CurvePath:K_,CustomBlending:W0,CustomToneMapping:d_,CylinderGeometry:Za,Cylindrical:dT,Data3DTexture:Uu,DataArrayTexture:Du,DataTexture:Zn,DataTextureLoader:N1,DataUtils:xw,DecrementStencilOp:vS,DecrementWrapStencilOp:yS,DefaultLoadingManager:gy,DepthFormat:go,DepthStencilFormat:vo,DepthTexture:sp,DetachedBindMode:g_,DirectionalLight:xy,DirectionalLightHelper:bT,DiscreteInterpolant:py,DodecahedronGeometry:Vu,DoubleSide:Dn,DstAlphaFactor:Q0,DstColorFactor:t_,DynamicCopyUsage:US,DynamicDrawUsage:CS,DynamicReadUsage:PS,EdgesGeometry:Y_,EllipseCurve:Hu,EqualCompare:T_,EqualDepth:Rc,EqualStencilFunc:SS,EquirectangularReflectionMapping:wa,EquirectangularRefractionMapping:Ta,Euler:Tn,EventDispatcher:hi,ExtrudeGeometry:Ja,FileLoader:wi,Float16BufferAttribute:Aw,Float32BufferAttribute:ze,FloatType:On,Fog:Ou,FogExp2:Nu,FramebufferTexture:jw,FrontSide:qi,Frustum:Ao,FrustumArray:Bu,GLBufferAttribute:fT,GLSL1:OS,GLSL3:Yf,GreaterCompare:E_,GreaterDepth:Pc,GreaterEqualCompare:C_,GreaterEqualDepth:Ic,GreaterEqualStencilFunc:AS,GreaterStencilFunc:TS,GridHelper:yT,Group:Ks,HalfFloatType:xs,HemisphereLight:vy,HemisphereLightHelper:_T,IcosahedronGeometry:Gu,ImageBitmapLoader:H1,ImageLoader:Ba,ImageUtils:L_,IncrementStencilOp:gS,IncrementWrapStencilOp:_S,InstancedBufferAttribute:bo,InstancedBufferGeometry:Ty,InstancedInterleavedBuffer:hT,InstancedMesh:V_,Int16BufferAttribute:Tw,Int32BufferAttribute:Ew,Int8BufferAttribute:Mw,IntType:Eu,InterleavedBuffer:$a,InterleavedBufferAttribute:Ki,Interpolant:tl,InterpolateDiscrete:_o,InterpolateLinear:Ea,InterpolateSmooth:cc,InterpolationSamplingMode:zS,InterpolationSamplingType:BS,InvertStencilOp:xS,KeepStencilOp:jr,KeyframeTrack:Kn,LOD:z_,LatheGeometry:Wu,Layers:Xa,LessCompare:w_,LessDepth:Cc,LessEqualCompare:Kd,LessEqualDepth:ds,LessEqualStencilFunc:wS,LessStencilFunc:MS,Light:Cr,LightProbe:wy,Line:Mr,Line3:Dy,LineBasicMaterial:En,LineCurve:lp,LineCurve3:Z_,LineDashedMaterial:uy,LineLoop:G_,LineSegments:Ei,LinearFilter:Yt,LinearInterpolant:gp,LinearMipMapLinearFilter:aS,LinearMipMapNearestFilter:oS,LinearMipmapLinearFilter:ii,LinearMipmapNearestFilter:so,LinearSRGBColorSpace:ps,LinearToneMapping:u_,LinearTransfer:Ca,Loader:An,LoaderUtils:Kf,LoadingManager:_p,LoopOnce:v_,LoopPingPong:y_,LoopRepeat:__,MOUSE:_i,Material:gn,MaterialLoader:Ku,MathUtils:Zi,Matrix2:Sp,Matrix3:et,Matrix4:Ge,MaxEquation:j0,Mesh:St,MeshBasicMaterial:Ti,MeshDepthMaterial:dp,MeshDistanceMaterial:pp,MeshLambertMaterial:ly,MeshMatcapMaterial:cy,MeshNormalMaterial:ay,MeshPhongMaterial:sy,MeshPhysicalMaterial:ry,MeshStandardMaterial:fp,MeshToonMaterial:oy,MinEquation:q0,MirroredRepeatWrapping:fo,MixOperation:l_,MultiplyBlending:Gf,MultiplyOperation:Ga,NearestFilter:Vt,NearestMipMapLinearFilter:sS,NearestMipMapNearestFilter:rS,NearestMipmapLinearFilter:Jr,NearestMipmapNearestFilter:Tu,NeutralToneMapping:m_,NeverCompare:S_,NeverDepth:Ec,NeverStencilFunc:bS,NoBlending:Vi,NoColorSpace:zi,NoToneMapping:ai,NormalAnimationBlendMode:Lu,NormalBlending:ss,NotEqualCompare:A_,NotEqualDepth:Lc,NotEqualStencilFunc:ES,NumberKeyframeTrack:Na,Object3D:ht,ObjectLoader:k1,ObjectSpaceNormalMap:M_,OctahedronGeometry:Qa,OneFactor:Z0,OneMinusConstantAlphaFactor:a_,OneMinusConstantColorFactor:s_,OneMinusDstAlphaFactor:e_,OneMinusDstColorFactor:n_,OneMinusSrcAlphaFactor:Tc,OneMinusSrcColorFactor:J0,OrthographicCamera:Gi,PCFShadowMap:Vd,PCFSoftShadowMap:Hd,PMREMGenerator:td,Path:lu,PerspectiveCamera:Mt,Plane:yi,PlaneGeometry:Ar,PlaneHelper:TT,PointLight:yy,PointLightHelper:gT,Points:W_,PointsMaterial:rp,PolarGridHelper:xT,PolyhedronGeometry:Er,PositionalAudio:j1,PropertyBinding:st,PropertyMixer:Ry,QuadraticBezierCurve:cp,QuadraticBezierCurve3:up,Quaternion:dn,QuaternionKeyframeTrack:nl,QuaternionLinearInterpolant:my,RED_GREEN_RGTC2_Format:iu,RED_RGTC1_Format:$d,REVISION:To,RGBADepthPacking:b_,RGBAFormat:Zt,RGBAIntegerFormat:Pu,RGBA_ASTC_10x10_Format:Kc,RGBA_ASTC_10x5_Format:jc,RGBA_ASTC_10x6_Format:$c,RGBA_ASTC_10x8_Format:Zc,RGBA_ASTC_12x10_Format:Jc,RGBA_ASTC_12x12_Format:Qc,RGBA_ASTC_4x4_Format:kc,RGBA_ASTC_5x4_Format:Vc,RGBA_ASTC_5x5_Format:Hc,RGBA_ASTC_6x5_Format:Gc,RGBA_ASTC_6x6_Format:Wc,RGBA_ASTC_8x5_Format:Xc,RGBA_ASTC_8x6_Format:Yc,RGBA_ASTC_8x8_Format:qc,RGBA_BPTC_Format:ca,RGBA_ETC2_EAC_Format:zc,RGBA_PVRTC_2BPPV1_Format:Oc,RGBA_PVRTC_4BPPV1_Format:Nc,RGBA_S3TC_DXT1_Format:oa,RGBA_S3TC_DXT3_Format:aa,RGBA_S3TC_DXT5_Format:la,RGBDepthPacking:fS,RGBFormat:qd,RGBIntegerFormat:lS,RGB_BPTC_SIGNED_Format:eu,RGB_BPTC_UNSIGNED_Format:tu,RGB_ETC1_Format:Fc,RGB_ETC2_Format:Bc,RGB_PVRTC_2BPPV1_Format:Uc,RGB_PVRTC_4BPPV1_Format:Dc,RGB_S3TC_DXT1_Format:sa,RGDepthPacking:dS,RGFormat:jd,RGIntegerFormat:Iu,RawShaderMaterial:da,Ray:bs,Raycaster:Py,RectAreaLight:My,RedFormat:Ru,RedIntegerFormat:Wa,ReinhardToneMapping:h_,RenderTarget:Qd,RenderTarget3D:lT,RepeatWrapping:ho,ReplaceStencilOp:mS,ReverseSubtractEquation:Y0,RingGeometry:Xu,SIGNED_RED_GREEN_RGTC2_Format:ru,SIGNED_RED_RGTC1_Format:nu,SRGBColorSpace:bn,SRGBTransfer:vt,Scene:ms,ShaderChunk:it,ShaderLib:ni,ShaderMaterial:mn,ShadowMaterial:iy,Shape:ls,ShapeGeometry:Yu,ShapePath:Ny,ShapeUtils:ri,ShortType:Wd,Skeleton:Fu,SkeletonHelper:mT,SkinnedMesh:k_,Source:mr,Sphere:Jt,SphereGeometry:el,Spherical:Qf,SphericalHarmonics3:Sy,SplineCurve:hp,SpotLight:_y,SpotLightHelper:pT,Sprite:B_,SpriteMaterial:np,SrcAlphaFactor:wc,SrcAlphaSaturateFactor:i_,SrcColorFactor:K0,StaticCopyUsage:DS,StaticDrawUsage:Ra,StaticReadUsage:IS,StereoCamera:W1,StreamCopyUsage:NS,StreamDrawUsage:RS,StreamReadUsage:LS,StringKeyframeTrack:Ss,SubtractEquation:X0,SubtractiveBlending:Hf,TOUCH:Fi,TangentSpaceNormalMap:wr,TetrahedronGeometry:qu,Texture:Lt,TextureLoader:O1,TextureUtils:DT,TimestampQuery:FS,TorusGeometry:ju,TorusKnotGeometry:$u,Triangle:wn,TriangleFanDrawMode:hS,TriangleStripDrawMode:uS,TrianglesDrawMode:cS,TubeGeometry:Zu,UVMapping:wu,Uint16BufferAttribute:ep,Uint32BufferAttribute:tp,Uint8BufferAttribute:Sw,Uint8ClampedBufferAttribute:ww,Uniform:Qu,UniformsGroup:uT,UniformsLib:Ie,UniformsUtils:Ya,UnsignedByteType:ci,UnsignedInt248Type:mo,UnsignedInt5999Type:Xd,UnsignedIntType:$i,UnsignedShort4444Type:Au,UnsignedShort5551Type:Cu,UnsignedShortType:po,VSMShadowMap:vi,Vector2:de,Vector3:O,Vector4:rt,VectorKeyframeTrack:Oa,VideoFrameTexture:qw,VideoTexture:X_,WebGL3DRenderTarget:uw,WebGLArrayRenderTarget:cw,WebGLCoordinateSystem:jn,WebGLCubeRenderTarget:O_,WebGLRenderTarget:ui,WebGLRenderer:pa,WebGLUtils:Vy,WebGPUCoordinateSystem:Ia,WebXRController:uc,WireframeGeometry:ny,WrapAroundEnding:Aa,ZeroCurvatureEnding:Qr,ZeroFactor:$0,ZeroSlopeEnding:es,ZeroStencilOp:pS,createCanvasElement:P_},Symbol.toStringTag,{value:"Module"}));function Sr(i){return za()?(gu(i),!0):!1}function qn(){const i=new Set,e=s=>{i.delete(s)};return{on:s=>{i.add(s);const o=()=>e(s);return Sr(o),{off:o}},off:e,trigger:(...s)=>Promise.all(Array.from(i).map(o=>o(...s))),clear:()=>{i.clear()}}}const lf=new WeakMap,mI=(...i)=>{var e;const t=i[0],n=(e=hs())==null?void 0:e.proxy;if(n==null&&!Ud())throw new Error("injectLocal must be called in setup");return n&&lf.has(n)&&t in lf.get(n)?lf.get(n)[t]:rs(...i)},id=typeof window<"u"&&typeof document<"u";typeof WorkerGlobalScope<"u"&&globalThis instanceof WorkerGlobalScope;const gI=i=>i!=null,vI=Object.prototype.toString,_I=i=>vI.call(i)==="[object Object]",rd=()=>{};function yI(i,e){function t(...n){return new Promise((r,s)=>{Promise.resolve(i(()=>e.apply(this,n),{fn:e,thisArg:this,args:n})).then(r).catch(s)})}return t}function xI(i,e={}){let t,n,r=rd;const s=l=>{clearTimeout(l),r(),r=rd};let o;return l=>{const c=Et(i),u=Et(e.maxWait);return t&&s(t),c<=0||u!==void 0&&u<=0?(n&&(s(n),n=null),Promise.resolve(l())):new Promise((h,f)=>{r=e.rejectOnCancel?f:h,o=l,u&&!n&&(n=setTimeout(()=>{t&&s(t),n=null,h(o())},u)),t=setTimeout(()=>{n&&s(n),n=null,h(l())},c)})}}function Yg(i){return i.endsWith("rem")?Number.parseFloat(i)*16:Number.parseFloat(i)}function bI(i,e,t=!1){return e.reduce((n,r)=>(r in i&&(!t||i[r]!==void 0)&&(n[r]=i[r]),n),{})}function MI(i){return hs()}function ma(i){return Array.isArray(i)?i:[i]}function SI(i,e=200,t={}){return yI(xI(e,t),i)}function qg(i,e=200,t={}){const n=bt(i.value),r=SI(()=>{n.value=i.value},e,t);return Ft(i,()=>r()),n}function wI(i,e={}){if(!Rt(i))return wo(i);const t=Array.isArray(i.value)?Array.from({length:i.value.length}):{};for(const n in i.value)t[n]=gb(()=>({get(){return i.value[n]},set(r){var s;if((s=Et(e.replaceRef))!=null?s:!0)if(Array.isArray(i.value)){const a=[...i.value];a[n]=r,i.value=a}else{const a={...i.value,[n]:r};Object.setPrototypeOf(a,Object.getPrototypeOf(i.value)),i.value=a}else i.value[n]=r}}));return t}const Qt=Et;function Tp(i,e=!0,t){MI()?xu(i,t):e?i():Id(i)}function TI(i,e=1e3,t={}){const{immediate:n=!0,immediateCallback:r=!1}=t;let s=null;const o=ut(!1);function a(){s&&(clearInterval(s),s=null)}function l(){o.value=!1,a()}function c(){const u=Et(e);u<=0||(o.value=!0,r&&i(),a(),o.value&&(s=setInterval(i,u)))}if(n&&id&&c(),Rt(e)||typeof e=="function"){const u=Ft(e,()=>{o.value&&id&&c()});Sr(u)}return Sr(l),{isActive:o,pause:l,resume:c}}function Hy(i,e,t){return Ft(i,e,{...t,immediate:!0})}const er=id?window:void 0;function si(i){var e;const t=Et(i);return(e=t?.$el)!=null?e:t}function vs(...i){const e=[],t=()=>{e.forEach(a=>a()),e.length=0},n=(a,l,c,u)=>(a.addEventListener(l,c,u),()=>a.removeEventListener(l,c,u)),r=Pt(()=>{const a=ma(Et(i[0])).filter(l=>l!=null);return a.every(l=>typeof l!="string")?a:void 0}),s=Hy(()=>{var a,l;return[(l=(a=r.value)==null?void 0:a.map(c=>si(c)))!=null?l:[er].filter(c=>c!=null),ma(Et(r.value?i[1]:i[0])),ma(He(r.value?i[2]:i[1])),Et(r.value?i[3]:i[2])]},([a,l,c,u])=>{if(t(),!a?.length||!l?.length||!c?.length)return;const h=_I(u)?{...u}:u;e.push(...a.flatMap(f=>l.flatMap(d=>c.map(p=>n(f,d,p,h)))))},{flush:"post"}),o=()=>{s(),t()};return Sr(t),o}function EI(){const i=ut(!1),e=hs();return e&&xu(()=>{i.value=!0},e),i}function th(i){const e=EI();return Pt(()=>(e.value,!!i()))}function AI(i,e,t={}){const{window:n=er,...r}=t;let s;const o=th(()=>n&&"MutationObserver"in n),a=()=>{s&&(s.disconnect(),s=void 0)},l=Pt(()=>{const f=Et(i),d=ma(f).map(si).filter(gI);return new Set(d)}),c=Ft(()=>l.value,f=>{a(),o.value&&f.size&&(s=new MutationObserver(e),f.forEach(d=>s.observe(d,r)))},{immediate:!0,flush:"post"}),u=()=>s?.takeRecords(),h=()=>{c(),a()};return Sr(h),{isSupported:o,stop:h,takeRecords:u}}function Ep(i,e={}){const{immediate:t=!0,fpsLimit:n=void 0,window:r=er,once:s=!1}=e,o=ut(!1),a=Pt(()=>n?1e3/Et(n):null);let l=0,c=null;function u(d){if(!o.value||!r)return;l||(l=d);const p=d-l;if(a.value&&p<a.value){c=r.requestAnimationFrame(u);return}if(l=d,i({delta:p,timestamp:d}),s){o.value=!1,c=null;return}c=r.requestAnimationFrame(u)}function h(){!o.value&&r&&(o.value=!0,l=0,c=r.requestAnimationFrame(u))}function f(){o.value=!1,c!=null&&r&&(r.cancelAnimationFrame(c),c=null)}return t&&h(),Sr(f),{isActive:cs(o),pause:f,resume:h}}const CI=Symbol("vueuse-ssr-width");function RI(){const i=Ud()?mI(CI,null):null;return typeof i=="number"?i:void 0}function Gy(i,e={}){const{window:t=er,ssrWidth:n=RI()}=e,r=th(()=>t&&"matchMedia"in t&&typeof t.matchMedia=="function"),s=ut(typeof n=="number"),o=ut(),a=ut(!1),l=c=>{a.value=c.matches};return ys(()=>{if(s.value){s.value=!r.value;const c=Et(i).split(",");a.value=c.some(u=>{const h=u.includes("not all"),f=u.match(/\(\s*min-width:\s*(-?\d+(?:\.\d*)?[a-z]+\s*)\)/),d=u.match(/\(\s*max-width:\s*(-?\d+(?:\.\d*)?[a-z]+\s*)\)/);let p=!!(f||d);return f&&p&&(p=n>=Yg(f[1])),d&&p&&(p=n<=Yg(d[1])),h?!p:p});return}r.value&&(o.value=t.matchMedia(Et(i)),a.value=o.value.matches)}),vs(o,"change",l,{passive:!0}),Pt(()=>a.value)}function II(i={}){const{window:e=er}=i,t=ut(1),n=Gy(()=>`(resolution: ${t.value}dppx)`,i);let r=rd;return e&&(r=Hy(n,()=>t.value=e.devicePixelRatio)),{pixelRatio:cs(t),stop:r}}function Wy(i,e,t={}){const{window:n=er,...r}=t;let s;const o=th(()=>n&&"ResizeObserver"in n),a=()=>{s&&(s.disconnect(),s=void 0)},l=Pt(()=>{const h=Et(i);return Array.isArray(h)?h.map(f=>si(f)):[si(h)]}),c=Ft(l,h=>{if(a(),o.value&&n){s=new ResizeObserver(e);for(const f of h)f&&s.observe(f,r)}},{immediate:!0,flush:"post"}),u=()=>{a(),c()};return Sr(u),{isSupported:o,stop:u}}function PI(i,e={}){const{reset:t=!0,windowResize:n=!0,windowScroll:r=!0,immediate:s=!0,updateTiming:o="sync"}=e,a=ut(0),l=ut(0),c=ut(0),u=ut(0),h=ut(0),f=ut(0),d=ut(0),p=ut(0);function y(){const g=si(i);if(!g){t&&(a.value=0,l.value=0,c.value=0,u.value=0,h.value=0,f.value=0,d.value=0,p.value=0);return}const M=g.getBoundingClientRect();a.value=M.height,l.value=M.bottom,c.value=M.left,u.value=M.right,h.value=M.top,f.value=M.width,d.value=M.x,p.value=M.y}function m(){o==="sync"?y():o==="next-frame"&&requestAnimationFrame(()=>y())}return Wy(i,m),Ft(()=>si(i),g=>!g&&m()),AI(i,m,{attributeFilter:["style","class"]}),r&&vs("scroll",m,{capture:!0,passive:!0}),n&&vs("resize",m,{passive:!0}),Tp(()=>{s&&m()}),{height:a,bottom:l,left:c,right:u,top:h,width:f,x:d,y:p,update:m}}function LI(i,e={width:0,height:0},t={}){const{window:n=er,box:r="content-box"}=t,s=Pt(()=>{var h,f;return(f=(h=si(i))==null?void 0:h.namespaceURI)==null?void 0:f.includes("svg")}),o=ut(e.width),a=ut(e.height),{stop:l}=Wy(i,([h])=>{const f=r==="border-box"?h.borderBoxSize:r==="content-box"?h.contentBoxSize:h.devicePixelContentBoxSize;if(n&&s.value){const d=si(i);if(d){const p=d.getBoundingClientRect();o.value=p.width,a.value=p.height}}else if(f){const d=ma(f);o.value=d.reduce((p,{inlineSize:y})=>p+y,0),a.value=d.reduce((p,{blockSize:y})=>p+y,0)}else o.value=h.contentRect.width,a.value=h.contentRect.height},t);Tp(()=>{const h=si(i);h&&(o.value="offsetWidth"in h?h.offsetWidth:e.width,a.value="offsetHeight"in h?h.offsetHeight:e.height)});const c=Ft(()=>si(i),h=>{o.value=h?e.width:0,a.value=h?e.height:0});function u(){l(),c()}return{width:o,height:a,stop:u}}function DI(i){var e;const t=ut(0);if(typeof performance>"u")return t;const n=(e=i?.every)!=null?e:10;let r=performance.now(),s=0;return Ep(()=>{if(s+=1,s>=n){const o=performance.now(),a=o-r;t.value=Math.round(1e3/(a/s)),r=o,s=0}}),t}function UI(i={}){const e=bt(),t=th(()=>typeof performance<"u"&&"memory"in performance);if(t.value){const{interval:n=1e3}=i;TI(()=>{e.value=performance.memory},n,{immediate:i.immediate,immediateCallback:i.immediateCallback})}return{isSupported:t,memory:e}}const Xy={x:0,y:0,pointerId:0,pressure:0,tiltX:0,tiltY:0,width:0,height:0,twist:0,pointerType:null},NI=Object.keys(Xy);function OI(i={}){const{target:e=er}=i,t=ut(!1),n=bt(i.initialValue||{});Object.assign(n.value,Xy,n.value);const r=s=>{t.value=!0,!(i.pointerTypes&&!i.pointerTypes.includes(s.pointerType))&&(n.value=bI(s,NI,!1))};if(e){const s={passive:!0};vs(e,["pointerdown","pointermove","pointerup"],r,s),vs(e,"pointerleave",()=>t.value=!1,s)}return{...wI(n),isInside:t}}function FI(i={}){const{window:e=er,initialWidth:t=Number.POSITIVE_INFINITY,initialHeight:n=Number.POSITIVE_INFINITY,listenOrientation:r=!0,includeScrollbar:s=!0,type:o="inner"}=i,a=ut(t),l=ut(n),c=()=>{if(e)if(o==="outer")a.value=e.outerWidth,l.value=e.outerHeight;else if(o==="visual"&&e.visualViewport){const{width:h,height:f,scale:d}=e.visualViewport;a.value=Math.round(h*d),l.value=Math.round(f*d)}else s?(a.value=e.innerWidth,l.value=e.innerHeight):(a.value=e.document.documentElement.clientWidth,l.value=e.document.documentElement.clientHeight)};c(),Tp(c);const u={passive:!0};if(vs("resize",c,u),e&&o==="visual"&&e.visualViewport&&vs(e.visualViewport,"resize",c,u),r){const h=Gy("(orientation: portrait)");Ft(h,()=>c())}return{width:a,height:l}}var BI=Object.defineProperty,zI=(i,e,t)=>e in i?BI(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t,jg=(i,e,t)=>zI(i,typeof e!="symbol"?e+"":e,t);const kI="@tresjs/core",VI="module",HI="4.3.6",GI="pnpm@10.6.3",WI="Declarative ThreeJS using Vue Components",XI="Alvaro Saburido <hola@alvarosaburido.dev> (https://github.com/alvarosabu/)",YI="MIT",qI={type:"git",url:"git+https://github.com/Tresjs/tres.git"},jI=["vue","3d","threejs","three","threejs-vue"],$I=!1,ZI={".":{types:"./dist/index.d.ts",import:"./dist/tres.js",require:"./dist/tres.umd.cjs"},"./components":{types:"./dist/src/components/index.d.ts"},"./composables":{types:"./dist/src/composables/index.d.ts"},"./types":{types:"./dist/src/types/index.d.ts"},"./utils":{types:"./dist/src/utils/index.d.ts"},"./*":"./*"},KI="./dist/tres.js",JI="./dist/tres.js",QI="./dist/index.d.ts",e2=["*.d.ts","dist"],t2={access:"public"},n2={dev:"pnpm --filter='./playground/vue' dev","dev:nuxt":"pnpm --filter='./playground/nuxt' dev",build:"vite build",test:"vitest","test:ci":"vitest run","test:ui":"vitest --ui --coverage.enabled=true",release:"release-it",coverage:"vitest run --coverage",lint:"eslint .","lint:fix":"eslint . --fix","docs:dev":"vitepress dev docs","docs:build":"vitepress build docs","docs:serve":"vitepress serve docs","docs:preview":"vitepress preview docs","docs:contributors":"esno scripts/update-contributors.ts"},i2={three:">=0.133",vue:">=3.4"},r2={"@alvarosabu/utils":"^3.2.0","@vue/devtools-api":"^6.6.3","@vueuse/core":"^12.5.0"},s2={"@release-it/conventional-changelog":"^10.0.0","@stackblitz/sdk":"^1.11.0","@tresjs/cientos":"4.1.0","@tresjs/eslint-config":"^1.4.0","@types/three":"^0.173.0","@typescript-eslint/eslint-plugin":"^8.23.0","@typescript-eslint/parser":"^8.23.0","@vitejs/plugin-vue":"^5.2.1","@vitest/coverage-c8":"^0.33.0","@vitest/coverage-v8":"^3.0.5","@vitest/ui":"^3.0.5","@vue/test-utils":"^2.4.6",eslint:"^9.19.0","eslint-plugin-vue":"^9.32.0",esno:"^4.8.0",gsap:"^3.12.7",jsdom:"^26.0.0",kolorist:"^1.8.0",ohmyfetch:"^0.4.21",pathe:"^2.0.2","release-it":"^18.1.2","rollup-plugin-analyzer":"^4.0.0","rollup-plugin-copy":"^3.5.0","rollup-plugin-visualizer":"^5.14.0",sponsorkit:"^16.3.0",three:"^0.173.0",unocss:"^65.4.3",unplugin:"^2.1.2","unplugin-vue-components":"^28.0.0",vite:"^6.1.0","vite-plugin-banner":"^0.8.0","vite-plugin-dts":"4.5.0","vite-plugin-inspect":"^10.1.0","vite-plugin-require-transform":"^1.0.21","vite-svg-loader":"^5.1.0",vitepress:"1.6.3",vitest:"3.0.5",vue:"3.5.13","vue-demi":"^0.14.10"},o2={name:kI,type:VI,version:HI,packageManager:GI,description:WI,author:XI,license:YI,repository:qI,keywords:jI,sideEffects:$I,exports:ZI,main:KI,module:JI,types:QI,files:e2,publishConfig:t2,scripts:n2,peerDependencies:i2,dependencies:r2,devDependencies:s2};let a2=class extends St{constructor(...e){super(...e),jg(this,"type","HightlightMesh"),jg(this,"createTime"),this.createTime=Date.now()}onBeforeRender(){const e=(Date.now()-this.createTime)/1e3,t=1+.07*Math.sin(2.5*e);this.scale.set(t,t,t)}};function sd(i){return typeof i>"u"}function Ap(i){return Array.isArray(i)}function l2(i){return typeof i=="number"}function Yy(i){return typeof i=="string"}function Qs(i){return typeof i=="function"}function Ai(i){return i===Object(i)&&!Ap(i)&&!Qs(i)}function gr(i){return Ai(i)&&!!i.isObject3D}function qy(i){return Ai(i)&&!!i.isColor}function c2(i){return i!=null&&(typeof i=="string"||typeof i=="number"||qy(i))}function od(i){return i!==null&&typeof i=="object"&&"set"in i&&typeof i.set=="function"}function u2(i){return od(i)&&"copy"in i&&typeof i.copy=="function"}function h2(i){return!!(i!=null&&i.constructor)}function $g(i){return i instanceof Xa}function Zg(i){return Ai(i)&&!!i.isCamera}function f2(i){return Ai(i)&&!!i.isBufferGeometry}function d2(i){return Ai(i)&&!!i.isMaterial}function p2(i){return Ai(i)&&!!i.isLight}function m2(i){return Ai(i)&&!!i.isFog}function g2(i){return Ai(i)&&!!i.isScene}function tc(i){return gr(i)||f2(i)||d2(i)||m2(i)}function v2(i){return Ai(i)&&!!i.isPrimitive}const jy=(i,e)=>{for(const t of Object.keys(e))e[t]instanceof Object&&Object.assign(e[t],jy(i[t],e[t]));return Object.assign(i||{},e),i},_2="html,body,base,head,link,meta,style,title,address,article,aside,footer,header,hgroup,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,summary,template,blockquote,iframe,tfoot",y2=M2(_2);function Kg(i){return i&&i.nodeType===1}function cf(i){return i.replace(/-([a-z])/g,(e,t)=>t.toUpperCase())}const x2=/\B([A-Z])/g;function b2(i){return i.replace(x2,"-$1").toLowerCase()}function M2(i,e){const t=Object.create(null),n=i.split(",");for(let r=0;r<n.length;r++)t[n[r]]=!0;return e?r=>!!t[r.toLowerCase()]:r=>!!t[r]}const Jg=(i,e)=>{if(!e)return;const t=Array.isArray(e)?e:e.match(/([^[.\]])+/g);return t?.reduce((n,r)=>n&&n[r],i)},S2=(i,e,t)=>{const n=Array.isArray(e)?e:e.match(/([^[.\]])+/g);n&&n.reduce((r,s,o)=>(r[s]===void 0&&(r[s]={}),o===n.length-1&&(r[s]=t),r[s]),i)};function $y(i,e){if(Kg(i)&&Kg(e)){const r=i.attributes,s=e.attributes;return r.length!==s.length?!1:Array.from(r).every(({name:o,value:a})=>e.getAttribute(o)===a)}if(i===e)return!0;if(i===null||typeof i!="object"||e===null||typeof e!="object")return!1;const t=Object.keys(i),n=Object.keys(e);if(t.length!==n.length)return!1;for(const r of t)if(!n.includes(r)||!$y(i[r],e[r]))return!1;return!0}function w2(i,e){if(!Array.isArray(i)||!Array.isArray(e)||i.length!==e.length)return!1;for(let t=0;t<i.length;t++)if(!$y(i[t],e[t]))return!1;return!0}function T2(i,e,t,n){const r=l=>{if(l.uuid===e)return l;for(const c of l.children){const u=r(c);if(u)return u}},s=r(i);if(!s){console.warn("Object with UUID not found in the scene.");return}let o=s;for(let l=0;l<t.length-1;l++)if(o[t[l]]!==void 0)o=o[t[l]];else{console.warn(`Property path is not valid: ${t.join(".")}`);return}const a=t[t.length-1];o[a]!==void 0?o[a]=n:console.warn(`Property path is not valid: ${t.join(".")}`)}function E2(i){const e=new Ti({color:11003607,transparent:!0,opacity:.2,depthTest:!1,side:Dn});return new a2(i.geometry.clone(),e)}function A2(i){return"map"in i}function Qg(i){A2(i)&&i.map&&i.map.dispose(),i.dispose()}function Zy(i){var e,t;if(i.parent&&((e=i.removeFromParent)==null||e.call(i)),delete i.__tres,[...i.children].forEach(n=>Zy(n)),!(i instanceof ms)){const n=i;i&&((t=i.dispose)==null||t.call(i)),n.geometry&&n.geometry.dispose(),Array.isArray(n.material)?n.material.forEach(r=>Qg(r)):n.material&&Qg(n.material)}}function C2(i,e){let t=0;for(let n=0;n<i.length;n++)e(i[n],n)&&(i[t]=i[n],t++);return i.length=t,i}function ad(i,e){let t=i;if(e.includes("-")){const n=e.split("-");let r=n.shift();for(;t&&n.length;)r in t?(t=t[r],r=n.shift()):r=ev(r,n.shift());return{target:t,key:ev(r,...n)}}else return{target:t,key:e}}function ev(...i){return i.map((e,t)=>t===0?e:e.charAt(0).toUpperCase()+e.slice(1)).join("")}const tv=/-\d+$/;function R2(i,e,t){if(Yy(t)){if(tv.test(t)){const s=t.replace(tv,""),{target:o,key:a}=ad(i,s);if(!Array.isArray(o[a])){const l=o[a],c=[];c.__tresDetach=()=>{c.every(u=>sd(u))&&(o[a]=l)},o[a]=c}}const{target:n,key:r}=ad(i,t);e.__tres.previousAttach=n[r],n[r]=So(e)}else e.__tres.previousAttach=t(i,e)}function I2(i,e,t){var n,r,s;if(Yy(t)){const{target:o,key:a}=ad(i,t),l=e.__tres.previousAttach;l===void 0?delete o[a]:o[a]=l,"__tresDetach"in o&&o.__tresDetach()}else(r=(n=e.__tres)==null?void 0:n.previousAttach)==null||r.call(n,i,e);(s=e.__tres)==null||delete s.previousAttach}function Zr(i,e,t){const n=i;return n.__tres={type:"unknown",eventCount:0,root:t,handlers:{},memoizedProps:{},objects:[],parent:null,previousAttach:null,...e},n.__tres.attach||(n.isMaterial?n.__tres.attach="material":n.isBufferGeometry?n.__tres.attach="geometry":n.isFog&&(n.__tres.attach="fog")),n}function Ky(i){var e;const t=(e=i?.__tres)==null?void 0:e.root;t&&t.render&&t.render.canBeInvalidated.value&&t.invalidate()}function P2(i,e,t){var n;if(!Qs(i.setPixelRatio))return;let r=0;if(t&&Ap(t)&&t.length>=2){const[s,o]=t;r=Zi.clamp(e,s,o)}else l2(t)?r=t:r=e;r!==((n=i.getPixelRatio)==null?void 0:n.call(i))&&i.setPixelRatio(r)}function L2(i,e,t,n,r){const s=[...e.__tres.objects],o=So(e);if(i=So(i),o===i)return!0;const a=Zr(i,e.__tres??{},r),l=e.parent??e.__tres.parent??null,c={...e.__tres.memoizedProps};delete c.object;for(const u of s)Jy(u,r),Qy(u,r);o.__tres.objects=[],n.remove(e);for(const[u,h]of Object.entries(c))n.patchProp(a,u,a[u],h);t(i),n.insert(e,l);for(const u of s)n.insert(u,e);return!0}function So(i){return v2(i)?(i.object.__tres=i.__tres,i.object):i}function Jy(i,e){var t,n,r,s;const o=((t=i.__tres)==null?void 0:t.parent)||e.scene.value;i.__tres&&(i.__tres.parent=null),o&&o.__tres&&"objects"in o.__tres&&C2(o.__tres.objects,a=>a!==i),(n=i.__tres)!=null&&n.attach?I2(o,i,i.__tres.attach):((s=(r=i.parent)==null?void 0:r.remove)==null||s.call(r,So(i)),i.parent=null)}function Qy(i,e){var t;(t=i.traverse)==null||t.call(i,n=>{var r;e.deregisterCamera(n),(r=e.eventManager)==null||r.deregisterPointerMissedObject(n)}),e.deregisterCamera(i),Ky(i)}const D2=({sizes:i})=>{const e=bt([]),t=Pt(()=>e.value[0]),n=o=>{const a=o instanceof qa?o:e.value.find(c=>c.uuid===o);if(!a)return;const l=e.value.filter(({uuid:c})=>c!==a.uuid);e.value=[a,...l]},r=(o,a=!1)=>{if(Zg(o)){const l=o;if(e.value.some(({uuid:c})=>c===l.uuid))return;a?n(l):e.value.push(l)}},s=o=>{if(Zg(o)){const a=o;e.value=e.value.filter(({uuid:l})=>l!==a.uuid)}};return ys(()=>{i.aspectRatio.value&&e.value.forEach(o=>{!o.manual&&(o instanceof Mt||U2(o))&&(o instanceof Mt?o.aspect=i.aspectRatio.value:(o.left=i.width.value*-.5,o.right=i.width.value*.5,o.top=i.height.value*.5,o.bottom=i.height.value*-.5),o.updateProjectionMatrix())})}),Si(()=>{e.value=[]}),{camera:t,cameras:e,registerCamera:r,deregisterCamera:s,setCameraActive:n}};function U2(i){return i.hasOwnProperty("isOrthographicCamera")&&i.isOrthographicCamera}const cu="[TresJS ▲ ■ ●] ";function N2(...i){typeof i[0]=="string"?i[0]=cu+i[0]:i.unshift(cu),console.error(...i)}function O2(...i){typeof i[0]=="string"?i[0]=cu+i[0]:i.unshift(cu),console.warn(...i)}function F2(i,e){}function ex(){return{logError:N2,logWarning:O2,logMessage:F2}}const ld=bt({}),cd=i=>Object.assign(ld.value,i);function uf(){const i=new Map,e=new Set;let t=0,n=!1;const r=()=>{const o=Array.from(i.entries()).sort((a,l)=>{const c=a[1].priority-l[1].priority;return c===0?a[1].addI-l[1].addI:c});e.clear(),o.forEach(a=>e.add(a[0]))},s=o=>{i.delete(o),e.delete(o)};return{on:(o,a=0)=>{i.set(o,{priority:a,addI:t++});const l=()=>s(o);return Sr(l),n=!0,{off:l}},off:s,trigger:(...o)=>{n&&(r(),n=!1),e.forEach(a=>a(...o))},dispose:()=>{i.clear(),e.clear()},get count(){return i.size}}}function B2(){let i=!0,e=!0,t=!1;const n=new Ju(!1),r=bt(n.running),s=bt(!1);let o;const a=Zi.generateUUID();let l=null;const c=uf(),u=uf(),h=uf();w();let f={};function d(T){f=T}function p(T,S,_=0){switch(S){case"before":return c.on(T,_);case"render":return l||(l=T),u.dispose(),u.on(T);case"after":return h.on(T,_)}}function y(){e&&(e=!1,w(),C())}function m(){e=!0,w(),cancelAnimationFrame(o)}function g(){t=!1,w()}function M(){t=!0,w()}function x(){s.value=!0}function b(){s.value=!1}function C(){if(!i){o=requestAnimationFrame(C);return}const T=n.getDelta(),S=n.getElapsedTime(),_={camera:He(f.camera),scene:He(f.scene),renderer:He(f.renderer),raycaster:He(f.raycaster),controls:He(f.controls),invalidate:f.invalidate,advance:f.advance},v={delta:T,elapsed:S,clock:n,..._};r.value&&c.trigger(v),s.value||(u.count?u.trigger(v):l&&l(v)),r.value&&h.trigger(v),o=requestAnimationFrame(C)}function w(){const T=!e&&!t;n.running!==T&&(n.running?n.stop():n.start()),r.value=n.running}return{loopId:a,register:(T,S,_)=>p(T,S,_),start:y,stop:m,pause:M,resume:g,pauseRender:x,resumeRender:b,isRenderPaused:s,isActive:r,setContext:d,setReady:T=>i=T}}function Cp(i){let e=0;return i.traverse(t=>{if(t.isMesh&&t.geometry&&t.type!=="HightlightMesh"){const n=t.geometry,r=n.attributes.position.count*3*Float32Array.BYTES_PER_ELEMENT,s=n.index?n.index.count*Uint32Array.BYTES_PER_ELEMENT:0,o=n.attributes.normal?n.attributes.normal.count*3*Float32Array.BYTES_PER_ELEMENT:0,a=n.attributes.uv?n.attributes.uv.count*2*Float32Array.BYTES_PER_ELEMENT:0,l=r+s+o+a;e+=l}}),e}function z2(i){return(i/1024).toFixed(2)}const k2=Number.parseInt(To.replace("dev",""));function V2(i){return i instanceof Ee?i:Array.isArray(i)?new Ee(...i):new Ee(i)}const nc={realistic:{shadows:!0,physicallyCorrectLights:!0,outputColorSpace:bn,toneMapping:Su,toneMappingExposure:3,shadowMap:{enabled:!0,type:Hd}},flat:{toneMapping:ai,toneMappingExposure:1}};function H2({canvas:i,options:e,contextParts:{sizes:t,render:n,invalidate:r,advance:s}}){const o=Pt(()=>({alpha:Qt(e.alpha)??!0,depth:Qt(e.depth),canvas:si(i),context:Qt(e.context),stencil:Qt(e.stencil),antialias:Qt(e.antialias)??!0,precision:Qt(e.precision),powerPreference:Qt(e.powerPreference),premultipliedAlpha:Qt(e.premultipliedAlpha),preserveDrawingBuffer:Qt(e.preserveDrawingBuffer),logarithmicDepthBuffer:Qt(e.logarithmicDepthBuffer),failIfMajorPerformanceCaveat:Qt(e.failIfMajorPerformanceCaveat)})),a=ut(new pa(o.value));function l(){e.renderMode==="on-demand"&&r()}Ft(o,()=>{a.value.dispose(),a.value=new pa(o.value),l()}),Ft([t.width,t.height],()=>{a.value.setSize(t.width.value,t.height.value),l()},{immediate:!0}),Ft(()=>e.clearColor,l);const{pixelRatio:c}=II(),{logError:u}=ex(),h=(()=>{const d=new pa,p={shadowMap:{enabled:d.shadowMap.enabled,type:d.shadowMap.type},toneMapping:d.toneMapping,toneMappingExposure:d.toneMappingExposure,outputColorSpace:d.outputColorSpace};return d.dispose(),p})(),f=Qt(e.renderMode);return f==="on-demand"&&r(),f==="manual"&&setTimeout(()=>{s()},100),ys(()=>{const d=Qt(e.preset);d&&(d in nc||u(`Renderer Preset must be one of these: ${Object.keys(nc).join(", ")}`),jy(a.value,nc[d])),P2(a.value,c.value,Qt(e.dpr)),f==="always"&&(n.frames.value=Math.max(1,n.frames.value));const p=(g,M)=>{const x=Qt(g),b=()=>{if(d)return Jg(nc[d],M)};if(x!==void 0)return x;const C=b();return C!==void 0?C:Jg(h,M)},y=(g,M)=>S2(a.value,M,p(g,M));y(e.shadows,"shadowMap.enabled"),y(e.toneMapping??Su,"toneMapping"),y(e.shadowMapType,"shadowMap.type"),k2<150&&y(!e.useLegacyLights,"physicallyCorrectLights"),y(e.outputColorSpace,"outputColorSpace"),y(e.toneMappingExposure,"toneMappingExposure");const m=p(e.clearColor,"clearColor");m&&a.value.setClearColor(m?V2(m):new Ee(0))}),Si(()=>{a.value.dispose(),a.value.forceContextLoss()}),{renderer:a}}function G2(i,e,t=10){const n=Qt(i)?FI():LI(Pt(()=>Qt(e).parentElement)),r=cs(qg(n.width,t)),s=cs(qg(n.height,t)),o=Pt(()=>r.value/s.value);return{height:s,width:r,aspectRatio:o}}const W2=(i,e)=>{const t=Pt(()=>e.renderer.value.domElement),n=ut([]),{x:r,y:s}=OI({target:t});let o=0;const{width:a,height:l,top:c,left:u}=PI(t),h=({x:oe,y:Te})=>{if(t.value)return{x:(oe-u.value)/a.value*2-1,y:-((Te-c.value)/l.value)*2+1}},f=({x:oe,y:Te})=>{if(e.camera.value)return e.raycaster.value.setFromCamera(new de(oe,Te),e.camera.value),n.value=e.raycaster.value.intersectObjects(i.value,!0),n.value},d=oe=>{const Te=h({x:oe?.clientX??r.value,y:oe?.clientY??s.value});return Te?f(Te)||[]:[]},p=qn(),y=qn(),m=qn(),g=qn(),M=qn(),x=qn(),b=qn(),C=qn();function w(oe){const Te={};for(const ke in oe)typeof ke!="function"&&(Te[ke]=oe[ke]);return Te}const T=(oe,Te)=>{var ke,ae,ve;const Re=w(Te),Se=new O(Te?.clientX,Te?.clientY,0).unproject((ke=e.camera)==null?void 0:ke.value);oe.trigger({...Re,intersections:n.value,unprojectedPoint:Se,ray:(ae=e.raycaster)==null?void 0:ae.value.ray,camera:(ve=e.camera)==null?void 0:ve.value,sourceEvent:Te,delta:o,stopPropagating:!1})};let S;const _=oe=>{d(oe),T(m,oe),S=oe},v=()=>{S&&_(S)};let A,D,B;const X=oe=>{var Te;A=(Te=n.value[0])==null?void 0:Te.object,o=0,D=new de(oe?.clientX??r.value,oe?.clientY??s.value),T(M,oe)};let Y,z=!1;const Q=oe=>{var Te,ke,ae;oe instanceof PointerEvent&&(n.value.length===0&&T(x,oe),A===((Te=n.value[0])==null?void 0:Te.object)&&(B=new de(oe?.clientX??r.value,oe?.clientY??s.value),o=D?.distanceTo(B),oe.button===0?(T(p,oe),Y===((ke=n.value[0])==null?void 0:ke.object)?z=!0:(Y=(ae=n.value[0])==null?void 0:ae.object,z=!1)):oe.button===2&&T(b,oe)),T(g,oe))},K=oe=>{z&&(T(y,oe),Y=void 0,z=!1)},fe=oe=>T(m,oe),ge=oe=>T(C,oe);return t.value.addEventListener("pointerup",Q),t.value.addEventListener("pointerdown",X),t.value.addEventListener("pointermove",_),t.value.addEventListener("pointerleave",fe),t.value.addEventListener("dblclick",K),t.value.addEventListener("wheel",ge),Si(()=>{t!=null&&t.value&&(t.value.removeEventListener("pointerup",Q),t.value.removeEventListener("pointerdown",X),t.value.removeEventListener("pointermove",_),t.value.removeEventListener("pointerleave",fe),t.value.removeEventListener("dblclick",K),t.value.removeEventListener("wheel",ge))}),{intersects:n,onClick:oe=>p.on(oe).off,onDblClick:oe=>y.on(oe).off,onContextMenu:oe=>b.on(oe).off,onPointerMove:oe=>m.on(oe).off,onPointerUp:oe=>g.on(oe).off,onPointerDown:oe=>M.on(oe).off,onPointerMissed:oe=>x.on(oe).off,onWheel:oe=>C.on(oe).off,forceUpdate:v}};function hf(i,e){if(Array.isArray(i))for(const t of i)t(e);typeof i=="function"&&i(e)}function X2(i,e,t){var n;const r=ut(),s=ut();i&&(r.value=i),e&&(s.value=e);const o=_=>{var v;return((v=_.__tres)==null?void 0:v.eventCount)>0},a=_=>{var v;return((v=_.children)==null?void 0:v.some(A=>a(A)))||o(_)},l=ut(((n=r.value)==null?void 0:n.children).filter(a)||[]);function c(_,v){const A=[],D=()=>v.stopPropagating=!0;v.stopPropagation=D;for(const B of v?.intersections){if(v.stopPropagating)return;v={...v,...B};const{object:X}=B;v.eventObject=X,hf(X[_],v),A.push(X);let Y=X.parent;for(;Y!==null&&!v.stopPropagating&&!A.includes(Y);)v.eventObject=Y,hf(Y[_],v),A.push(Y),Y=Y.parent;const z=b2(_.slice(2));t(z,{intersection:B,event:v})}}const{onClick:u,onDblClick:h,onContextMenu:f,onPointerMove:d,onPointerDown:p,onPointerUp:y,onPointerMissed:m,onWheel:g,forceUpdate:M}=W2(l,e);y(_=>c("onPointerUp",_)),p(_=>c("onPointerDown",_)),u(_=>c("onClick",_)),h(_=>c("onDoubleClick",_)),f(_=>c("onContextMenu",_)),g(_=>c("onWheel",_));let x=[];d(_=>{const v=_.intersections.map(({object:D})=>D),A=_.intersections;x.forEach(({object:D})=>{v.includes(D)||(_.intersections=x,c("onPointerLeave",_),c("onPointerOut",_))}),_.intersections=A,_.intersections.forEach(({object:D})=>{x.includes(D)||(c("onPointerEnter",_),c("onPointerOver",_))}),c("onPointerMove",_),x=_.intersections});const b=[];m(_=>{const v=()=>_.stopPropagating=!0;_.stopPropagation=v,b.forEach(A=>{_.stopPropagating||(_.eventObject=A,hf(A.onPointerMissed,_))}),t("pointer-missed",{event:_})});function C(_){tc(_)&&gr(_)&&l.value.push(_)}function w(_){if(tc(_)&&gr(_)){const v=l.value.indexOf(_);v>-1&&l.value.splice(v,1)}}function T(_){tc(_)&&gr(_)&&_.onPointerMissed&&b.push(_)}function S(_){if(tc(_)&&gr(_)){const v=b.indexOf(_);v>-1&&b.splice(v,1)}}return e.eventManager={forceUpdate:M,registerObject:C,deregisterObject:w,registerPointerMissedObject:T,deregisterPointerMissedObject:S},{forceUpdate:M,registerObject:C,deregisterObject:w,registerPointerMissedObject:T,deregisterPointerMissedObject:S}}function Y2(i,e,t=100){t=t<=0?100:t;const n=qn(),r=new Set;let s=!1,o=!1,a=null;function l(){a&&clearTimeout(a),!o&&!s&&i()?(n.trigger(e),r.forEach(h=>h()),r.clear(),s=!0):!o&&!s&&(a=setTimeout(l,t))}function c(){o=!0,a&&clearTimeout(a)}l();const u=(h,...f)=>{h(...f)};return{on:h=>{if(s)return u(h,e),{off:()=>{}};{const f=n.on(h);return r.add(f.off),n.on(h)}},off:n.off,trigger:n.trigger,clear:n.clear,cancel:c}}const ff=new WeakMap;function q2(i){if(i=i||Ro(),ff.has(i))return ff.get(i);const e=100,t=Date.now(),n=Y2(()=>{if(Date.now()-t>=e)return!0;{const r=i.renderer.value,s=r?.domElement||{width:0,height:0};return!!(r&&s.width>0&&s.height>0)}},i);return ff.set(i,n),n}function j2({scene:i,canvas:e,windowSize:t,rendererOptions:n,emit:r}){const s=ut(i),o=G2(t,e),{camera:a,cameras:l,registerCamera:c,deregisterCamera:u,setCameraActive:h}=D2({sizes:o}),f={mode:bt(n.renderMode||"always"),priority:bt(0),frames:bt(0),maxFrames:60,canBeInvalidated:Pt(()=>f.mode.value==="on-demand"&&f.frames.value===0)};function d(B=1){n.renderMode==="on-demand"&&(f.frames.value=Math.min(f.maxFrames,f.frames.value+B))}function p(){n.renderMode==="manual"&&(f.frames.value=1)}const{renderer:y}=H2({canvas:e,options:n,contextParts:{sizes:o,render:f,invalidate:d,advance:p}}),m={sizes:o,scene:s,camera:a,cameras:cs(l),renderer:y,raycaster:ut(new Py),controls:bt(null),perf:{maxFrames:160,fps:{value:0,accumulator:[]},memory:{currentMem:0,allocatedMem:0,accumulator:[]}},render:f,advance:p,extend:cd,invalidate:d,registerCamera:c,setCameraActive:h,deregisterCamera:u,loop:B2()};ia("useTres",m),m.scene.value.__tres={root:m},m.loop.register(()=>{a.value&&f.frames.value>0&&(y.value.render(i,a.value),r("render",m.renderer.value)),f.priority.value=0,f.mode.value==="always"?f.frames.value=1:f.frames.value=Math.max(0,f.frames.value-1)},"render");const{on:g,cancel:M}=q2(m);m.loop.setReady(!1),m.loop.start(),g(()=>{r("ready",m),m.loop.setReady(!0),X2(i,m,r)}),Si(()=>{M(),m.loop.stop()});const x=100,b=DI({every:x}),{isSupported:C,memory:w}=UI({interval:x}),T=160;let S=performance.now();const _=({timestamp:B})=>{m.scene.value&&(m.perf.memory.allocatedMem=Cp(m.scene.value)),B-S>=x&&(S=B,m.perf.fps.accumulator.push(b.value),m.perf.fps.accumulator.length>T&&m.perf.fps.accumulator.shift(),m.perf.fps.value=b.value,C.value&&w.value&&(m.perf.memory.accumulator.push(w.value.usedJSHeapSize/1024/1024),m.perf.memory.accumulator.length>T&&m.perf.memory.accumulator.shift(),m.perf.memory.currentMem=m.perf.memory.accumulator.reduce((X,Y)=>X+Y,0)/m.perf.memory.accumulator.length))};let v=0;const A=1,{pause:D}=Ep(({delta:B})=>{window.__TRES__DEVTOOLS__&&(_({timestamp:performance.now()}),v+=B,v>=A&&(window.__TRES__DEVTOOLS__.cb(m),v=0))},{immediate:!0});return Si(()=>{D()}),m}function Ro(){const i=rs("useTres");if(!i)throw new Error("useTresContext must be used together with useTresContextProvider");return i}function Rp(){const{camera:i,scene:e,renderer:t,loop:n,raycaster:r,controls:s,invalidate:o,advance:a}=Ro();n.setContext({camera:i,scene:e,renderer:t,raycaster:r,controls:s,invalidate:o,advance:a});function l(h,f=0){return n.register(h,"before",f)}function c(h){return n.register(h,"render")}function u(h,f=0){return n.register(h,"after",f)}return{pause:n.pause,resume:n.resume,pauseRender:n.pauseRender,resumeRender:n.resumeRender,isActive:n.isActive,onBeforeRender:l,render:c,onAfterRender:u}}const $2=qn(),Z2=qn(),tx=qn(),ga=new Ju;let fc=0,dc=0;Ep(()=>{$2.trigger({delta:fc,elapsed:dc,clock:ga}),Z2.trigger({delta:fc,elapsed:dc,clock:ga}),tx.trigger({delta:fc,elapsed:dc,clock:ga})},{immediate:!1});tx.on(()=>{fc=ga.getDelta(),dc=ga.getElapsedTime()});function K2(i,e={},t={}){let n=i;const r=a=>{n=a};let s=new Proxy({},{});const o={has(a,l){return l in e||l in n},get(a,l,c){return l in e?e[l](n):n[l]},set(a,l,c){return t[l]?t[l](c,n,s,r):n[l]=c,!0}};return s=new Proxy({},o),s}const{logError:nv}=ex(),iv=["onClick","onContextMenu","onPointerMove","onPointerEnter","onPointerLeave","onPointerOver","onPointerOut","onDoubleClick","onPointerDown","onPointerUp","onPointerCancel","onPointerMissed","onLostPointerCapture","onWheel"],J2=i=>{const e=i.scene.value;function t(c,u,h,f){if(f||(f={}),f.args||(f.args=[]),c==="template"||y2(c))return null;let d=c.replace("Tres",""),p;if(c==="primitive"){(!Ai(f.object)||Rt(f.object))&&nv("Tres primitives need an 'object' prop, whose value is an object or shallowRef<object>"),d=f.object.type;const y={};p=K2(f.object,{object:m=>m,isPrimitive:()=>!0,__tres:()=>y},{object:(m,g,M,x)=>{L2(m,M,x,{patchProp:s,remove:r,insert:n},i)},__tres:m=>{Object.assign(y,m)}})}else{const y=ld.value[d];y||nv(`${d} is not defined on the THREE namespace. Use extend to add it to the catalog.`),p=new y(...f.args)}return p?(p.isCamera&&(f!=null&&f.position||p.position.set(3,3,3),f!=null&&f.lookAt||p.lookAt(0,0,0)),p=Zr(p,{...p.__tres,type:d,memoizedProps:f,eventCount:0,primitive:c==="primitive",attach:f.attach},i),p):null}function n(c,u){var h,f,d;if(!c)return;u=u||e;const p=c.__tres?c:Zr(c,{},i),y=u.__tres?u:Zr(u,{},i);c=So(p),u=So(y),c.__tres&&((h=c.__tres)==null?void 0:h.eventCount)>0&&((f=i.eventManager)==null||f.registerObject(c)),i.registerCamera(c),(d=i.eventManager)==null||d.registerPointerMissedObject(c),p.__tres.attach?R2(y,p,p.__tres.attach):gr(c)&&gr(y)&&(y.add(c),c.dispatchEvent({type:"added"})),p.__tres.parent=y,y.__tres.objects&&!y.__tres.objects.includes(p)&&y.__tres.objects.push(p)}function r(c,u){var h,f,d,p;if(!c)return;c!=null&&c.__tres&&((h=c.__tres)==null?void 0:h.eventCount)>0&&((f=i.eventManager)==null||f.deregisterObject(c)),u=sd(u)?"default":u;const y=(d=c.__tres)==null?void 0:d.dispose;sd(y)||(y===null?u=!1:u=y);const m=(p=c.__tres)==null?void 0:p.primitive,g=u==="default"?!m:!!u;if(c.__tres&&"objects"in c.__tres&&[...c.__tres.objects].forEach(M=>r(M,u)),g&&c.children&&[...c.children].forEach(M=>r(M,u)),Jy(c,i),Qy(c,i),g&&!g2(c)){if(Qs(u))u(c);else if(Qs(c.dispose))try{c.dispose()}catch{}}"__tres"in c&&delete c.__tres}function s(c,u,h,f){var d,p;if(!c)return;let y=c,m=u;if(c.__tres&&(c.__tres.memoizedProps[u]=f),u==="attach"){const b=((d=c.__tres)==null?void 0:d.parent)||c.parent;r(c),Zr(c,{attach:f},i),b&&n(c,b);return}if(u==="dispose"){c.__tres||(c=Zr(c,{},i)),c.__tres.dispose=f;return}if(gr(c)&&m==="blocks-pointer-events"){f||f===""?c[m]=f:delete c[m];return}iv.includes(u)&&c.__tres&&(c.__tres.eventCount+=1);let g=cf(m),M=y?.[g];if(m==="args"){const b=c,C=h??[],w=f??[],T=((p=c.__tres)==null?void 0:p.type)||c.type;T&&C.length&&!w2(C,w)&&(y=Object.assign(b,new ld.value[T](...f)));return}if(y.type==="BufferGeometry"){if(m==="args")return;y.setAttribute(cf(m),new ft(...f));return}if(m.includes("-")&&M===void 0){M=y;for(const b of m.split("-"))g=m=cf(b),y=M,M=M?.[m]}let x=f;if(x===""&&(x=!0),Qs(M)){iv.includes(u)||(Ap(x)?c[g](...x):c[g](x)),g.startsWith("on")&&Qs(x)&&(y[g]=x);return}$g(M)&&$g(x)?M.mask=x.mask:qy(M)&&c2(x)?M.set(x):u2(M)&&h2(x)&&M.constructor===x.constructor?M.copy(x):od(M)&&Array.isArray(x)?"fromArray"in M&&typeof M.fromArray=="function"?M.fromArray(x):M.set(...x):od(M)&&typeof x=="number"?"setScalar"in M&&typeof M.setScalar=="function"?M.setScalar(x):M.set(x):y[g]=x,Ky(c)}function o(c){var u;return((u=c?.__tres)==null?void 0:u.parent)||null}function a(c){const u=Zr(new ht,{type:"Comment"},i);return u.name=c,u}function l(c){var u;const h=o(c),f=((u=h?.__tres)==null?void 0:u.objects)||[],d=f.indexOf(c);return d<0||d>=f.length-1?null:f[d+1]}return{insert:n,remove:r,createElement:t,patchProp:s,parentNode:o,createText:()=>{},createComment:a,setText:()=>{},setElementText:()=>{},nextSibling:l,querySelector:()=>{},setScopeId:()=>{},cloneNode:()=>{},insertStaticContent:()=>{}}};function Q2(){return nx().__VUE_DEVTOOLS_GLOBAL_HOOK__}function nx(){return typeof navigator<"u"&&typeof window<"u"?window:typeof globalThis<"u"?globalThis:{}}const eP=typeof Proxy=="function",tP="devtools-plugin:setup",nP="plugin:settings:set";let Wo,ud;function iP(){var i;return Wo!==void 0||(typeof window<"u"&&window.performance?(Wo=!0,ud=window.performance):typeof globalThis<"u"&&!((i=globalThis.perf_hooks)===null||i===void 0)&&i.performance?(Wo=!0,ud=globalThis.perf_hooks.performance):Wo=!1),Wo}function rP(){return iP()?ud.now():Date.now()}class sP{constructor(e,t){this.target=null,this.targetQueue=[],this.onQueue=[],this.plugin=e,this.hook=t;const n={};if(e.settings)for(const o in e.settings){const a=e.settings[o];n[o]=a.defaultValue}const r=`__vue-devtools-plugin-settings__${e.id}`;let s=Object.assign({},n);try{const o=localStorage.getItem(r),a=JSON.parse(o);Object.assign(s,a)}catch{}this.fallbacks={getSettings(){return s},setSettings(o){try{localStorage.setItem(r,JSON.stringify(o))}catch{}s=o},now(){return rP()}},t&&t.on(nP,(o,a)=>{o===this.plugin.id&&this.fallbacks.setSettings(a)}),this.proxiedOn=new Proxy({},{get:(o,a)=>this.target?this.target.on[a]:(...l)=>{this.onQueue.push({method:a,args:l})}}),this.proxiedTarget=new Proxy({},{get:(o,a)=>this.target?this.target[a]:a==="on"?this.proxiedOn:Object.keys(this.fallbacks).includes(a)?(...l)=>(this.targetQueue.push({method:a,args:l,resolve:()=>{}}),this.fallbacks[a](...l)):(...l)=>new Promise(c=>{this.targetQueue.push({method:a,args:l,resolve:c})})})}async setRealTarget(e){this.target=e;for(const t of this.onQueue)this.target.on[t.method](...t.args);for(const t of this.targetQueue)t.resolve(await this.target[t.method](...t.args))}}function oP(i,e){const t=i,n=nx(),r=Q2(),s=eP&&t.enableEarlyProxy;if(r&&(n.__VUE_DEVTOOLS_PLUGIN_API_AVAILABLE__||!s))r.emit(tP,i,e);else{const o=s?new sP(t,r):null;(n.__VUE_DEVTOOLS_PLUGINS__=n.__VUE_DEVTOOLS_PLUGINS__||[]).push({pluginDescriptor:t,setupFn:e,proxy:o}),o&&e(o.proxiedTarget)}}function aP(i,e){const t=`▲ ■ ●${i}`;typeof rv=="function"?rv(t,e):console.log(t)}function rv(i,e){throw new Error(i+e)}const ix=i=>{const e={id:i.uuid,label:i.type,children:[],tags:[]};i.name!==""&&e.tags.push({label:i.name,textColor:5750629,backgroundColor:15793395});const t=Cp(i);return t>0&&e.tags.push({label:`${z2(t)} KB`,textColor:15707189,backgroundColor:16775644,tooltip:"Memory usage"}),i.type.includes("Light")&&(p2(i)&&e.tags.push({label:`${i.intensity}`,textColor:9738662,backgroundColor:16316922,tooltip:"Intensity"}),e.tags.push({label:`#${new Ee(i.color).getHexString()}`,textColor:9738662,backgroundColor:16316922,tooltip:"Color"})),i.type.includes("Camera")&&(e.tags.push({label:`${i.fov}°`,textColor:9738662,backgroundColor:16316922,tooltip:"Field of view"}),e.tags.push({label:`x: ${Math.round(i.position.x)} y: ${Math.round(i.position.y)} z: ${Math.round(i.position.z)}`,textColor:9738662,backgroundColor:16316922,tooltip:"Position"})),e};function rx(i,e,t=""){i.children.forEach(n=>{if(n.type==="HightlightMesh"||t&&!n.type.includes(t)&&!n.name.includes(t))return;const r=ix(n);e.children.push(r),rx(n,r,t)})}const lP=[],Xo="tres:inspector",cP=ka({sceneGraph:null});function uP(i,e){oP({id:"dev.esm.tres",label:"TresJS 🪐",logo:"https://raw.githubusercontent.com/Tresjs/tres/main/public/favicon.svg",packageName:"tresjs",homepage:"https://tresjs.org",componentStateTypes:lP,app:i},t=>{typeof t.now!="function"&&aP("You seem to be using an outdated version of Vue Devtools. Are you still using the Beta release instead of the stable one? You can find the links at https://devtools.vuejs.org/guide/installation.html."),t.addInspector({id:Xo,label:"TresJS 🪐",icon:"account_tree",treeFilterPlaceholder:"Search instances"}),setInterval(()=>{t.sendInspectorTree(Xo)},1e3),setInterval(()=>{t.notifyComponentUpdate()},5e3),t.on.getInspectorTree(s=>{if(s.inspectorId===Xo){const o=ix(e.scene.value);rx(e.scene.value,o,s.filter),cP.sceneGraph=o,s.rootNodes=[o]}});let n=null,r=null;t.on.getInspectorState(s=>{var o;if(s.inspectorId===Xo){const[a]=e.scene.value.getObjectsByProperty("uuid",s.nodeId);if(!a)return;if(r&&n&&n.parent&&r.remove(n),a.isMesh){const l=E2(a);a.add(l),n=l,r=a}s.state={object:Object.entries(a).map(([l,c])=>l==="children"?{key:l,value:c.filter(u=>u.type!=="HightlightMesh")}:{key:l,value:c,editable:!0}).filter(({key:l})=>l!=="parent")},a.isScene&&(s.state={...s.state,state:[{key:"Scene Info",value:{objects:a.children.length,memory:Cp(a),calls:e.renderer.value.info.render.calls,triangles:e.renderer.value.info.render.triangles,points:e.renderer.value.info.render.points,lines:e.renderer.value.info.render.lines}},{key:"Programs",value:((o=e.renderer.value.info.programs)==null?void 0:o.map(l=>({...l,programName:l.name})))||[]}]})}}),t.on.editInspectorState(s=>{s.inspectorId===Xo&&T2(e.scene.value,s.nodeId,s.path,s.state.value)})})}const hP=["data-scene","data-tres"],fP=Yi({__name:"TresCanvas",props:{shadows:{type:Boolean,default:void 0},clearColor:{},toneMapping:{},shadowMapType:{},useLegacyLights:{type:Boolean,default:void 0},outputColorSpace:{},toneMappingExposure:{},renderMode:{default:"always"},dpr:{},camera:{},preset:{},windowSize:{type:Boolean,default:void 0},enableProvideBridge:{type:Boolean,default:!0},context:{},alpha:{type:Boolean,default:void 0},premultipliedAlpha:{type:Boolean},antialias:{type:Boolean,default:void 0},stencil:{type:Boolean,default:void 0},preserveDrawingBuffer:{type:Boolean,default:void 0},powerPreference:{},depth:{type:Boolean,default:void 0},failIfMajorPerformanceCaveat:{type:Boolean,default:void 0},precision:{},logarithmicDepthBuffer:{type:Boolean,default:void 0},reverseDepthBuffer:{type:Boolean}},emits:["render","click","double-click","context-menu","pointer-move","pointer-up","pointer-down","pointer-enter","pointer-leave","pointer-over","pointer-out","pointer-missed","wheel","ready"],setup(i,{expose:e,emit:t}){const n=i,r=t,s=Dd(),o=bt(),a=ut(new ms),l=hs();cd(pI);const c=(p,y=!1)=>Yi({setup(){var m;const g=(m=hs())==null?void 0:m.appContext;g&&(g.app=l?.appContext.app);const M={};function x(b){b&&(b.parent&&x(b.parent),b.provides&&Object.assign(M,b.provides))}return l!=null&&l.parent&&n.enableProvideBridge&&(x(l.parent),Reflect.ownKeys(M).forEach(b=>{ia(b,M[b])})),ia("useTres",p),ia("extend",cd),typeof window<"u"&&uP(g?.app,p),()=>im(un,null,y?[]:s.default())}}),u=(p,y=!1)=>{const m=c(p,y),{render:g}=A0(J2(p));g(im(m),a.value)},h=(p,y=!1)=>{Zy(p.scene.value),y&&(p.renderer.value.dispose(),p.renderer.value.renderLists.dispose(),p.renderer.value.forceContextLoss()),a.value.__tres={root:p}},f=ut(null);e({context:f,dispose:()=>h(f.value,!0)});const d=()=>{h(f.value),u(f.value,!0)};return xu(()=>{const p=o;f.value=j2({scene:a.value,canvas:p,windowSize:n.windowSize??!1,rendererOptions:n,emit:r});const{registerCamera:y,camera:m,cameras:g,deregisterCamera:M}=f.value;u(f.value);const x=()=>{const b=new Mt(45,window.innerWidth/window.innerHeight,.1,1e3);b.position.set(3,3,3),b.lookAt(0,0,0),y(b);const C=ys(()=>{g.value.length>=2&&(b.removeFromParent(),M(b),C?.())})};Ft(()=>n.camera,(b,C)=>{b&&y(b),C&&(C.removeFromParent(),M(C))},{immediate:!0}),m.value||x()}),Si(d),(p,y)=>(kt(),Nn("canvas",{ref_key:"canvas",ref:o,"data-scene":a.value.uuid,class:mu(p.$attrs.class),"data-tres":`tresjs ${He(o2).version}`,style:pu({display:"block",width:"100%",height:"100%",position:p.windowSize?"fixed":"relative",top:0,left:0,pointerEvents:"auto",touchAction:"none",...p.$attrs.style})},null,14,hP))}});var dP=Object.defineProperty,pP=(i,e,t)=>e in i?dP(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t,mP=(i,e,t)=>pP(i,e+"",t);function gP(i){return za()?(gu(i),!0):!1}function sx(i){return typeof i=="function"?i():He(i)}const vP=typeof window<"u"&&typeof document<"u";typeof WorkerGlobalScope<"u"&&globalThis instanceof WorkerGlobalScope;const _P=Object.prototype.toString,yP=i=>_P.call(i)==="[object Object]",xP=()=>{},bP=vP?window:void 0;function MP(i){var e;const t=sx(i);return(e=t?.$el)!=null?e:t}function df(...i){let e,t,n,r;if(typeof i[0]=="string"||Array.isArray(i[0])?([t,n,r]=i,e=bP):[e,t,n,r]=i,!e)return xP;Array.isArray(t)||(t=[t]),Array.isArray(n)||(n=[n]);const s=[],o=()=>{s.forEach(u=>u()),s.length=0},a=(u,h,f,d)=>(u.addEventListener(h,f,d),()=>u.removeEventListener(h,f,d)),l=Ft(()=>[MP(e),sx(r)],([u,h])=>{if(o(),!u)return;const f=yP(h)?{...h}:h;s.push(...t.flatMap(d=>n.map(p=>a(u,d,p,f))))},{immediate:!0,flush:"post"}),c=()=>{l(),o()};return gP(c),c}function ox(i,e,t,n){const r=class extends mn{constructor(s={}){const o=Object.entries(i);super({uniforms:o.reduce((a,[l,c])=>{const u=Ya.clone({[l]:{value:c}});return{...a,...u}},{}),vertexShader:e,fragmentShader:t}),mP(this,"key",""),o.forEach(([a])=>Object.defineProperty(this,a,{get:()=>this.uniforms[a].value,set:l=>this.uniforms[a].value=l})),Object.assign(this,s)}};return r.key=Zi.generateUUID(),r}ox({color:new Ee("white"),scale:new de(1,1),imageBounds:new de(1,1),resolution:1024,map:null,zoom:1,radius:0,grayscale:0,opacity:1},`
    varying vec2 vUv;
    varying vec2 vPos;
    void main() {
      gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.);
      vUv = uv;
      vPos = position.xy;
    }
  `,`
    // mostly from https://gist.github.com/statico/df64c5d167362ecf7b34fca0b1459a44
    varying vec2 vUv;
    varying vec2 vPos;
    uniform vec2 scale;
    uniform vec2 imageBounds;
    uniform float resolution;
    uniform vec3 color;
    uniform sampler2D map;
    uniform float radius;
    uniform float zoom;
    uniform float grayscale;
    uniform float opacity;
    const vec3 luma = vec3(.299, 0.587, 0.114);
    vec4 toGrayscale(vec4 color, float intensity) {
      return vec4(mix(color.rgb, vec3(dot(color.rgb, luma)), intensity), color.a);
    }
    vec2 aspect(vec2 size) {
      return size / min(size.x, size.y);
    }
    
    const float PI = 3.14159265;
      
    // from https://iquilezles.org/articles/distfunctions
    float udRoundBox( vec2 p, vec2 b, float r ) {
      return length(max(abs(p)-b+r,0.0))-r;
    }
  
    void main() {
      vec2 s = aspect(scale);
      vec2 i = aspect(imageBounds);
      float rs = s.x / s.y;
      float ri = i.x / i.y;
      vec2 new = rs < ri ? vec2(i.x * s.y / i.y, s.y) : vec2(s.x, i.y * s.x / i.x);
      vec2 offset = (rs < ri ? vec2((new.x - s.x) / 2.0, 0.0) : vec2(0.0, (new.y - s.y) / 2.0)) / new;
      vec2 uv = vUv * s / new + offset;
      vec2 zUv = (uv - vec2(0.5, 0.5)) / zoom + vec2(0.5, 0.5);
  
      vec2 res = vec2(scale * resolution);
      vec2 halfRes = 0.5 * res;
      float b = udRoundBox(vUv.xy * res - halfRes, halfRes, resolution * radius);    
        vec3 a = mix(vec3(1.0,0.0,0.0), vec3(0.0,0.0,0.0), smoothstep(0.0, 1.0, b));
      gl_FragColor = toGrayscale(texture2D(map, zUv) * vec4(color, opacity * a), grayscale);
      
      #include <tonemapping_fragment>
      #include <colorspace_fragment>
    }
  `);const Ip=parseInt(To.replace(/\D+/g,""));var SP=Object.defineProperty,wP=(i,e,t)=>e in i?SP(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t,TP=(i,e,t)=>(wP(i,e+"",t),t);async function sv(i){const e=await i.arrayBuffer(),t=btoa(String.fromCharCode(...new Uint8Array(e)));return`data:${i.type||""};base64,${t}`}let ic,pf,Xs,rc;function mf(i,e=1/0,t=null){pf||(pf=new Ar(2,2,1,1)),Xs||(Xs=new mn({uniforms:{blitTexture:new Qu(i)},vertexShader:`
        varying vec2 vUv;
        void main(){
            vUv = uv;
            gl_Position = vec4(position.xy * 1.0,0.,.999999);
        }
      `,fragmentShader:`
          uniform sampler2D blitTexture; 
          varying vec2 vUv;

          void main(){ 
              gl_FragColor = vec4(vUv.xy, 0, 1);
              
              #ifdef IS_SRGB
              gl_FragColor = LinearTosRGB( texture2D( blitTexture, vUv) );
              #else
              gl_FragColor = texture2D( blitTexture, vUv);
              #endif
          }
      `})),Xs.uniforms.blitTexture.value=i,Xs.defines.IS_SRGB="colorSpace"in i?i.colorSpace==="srgb":i.encoding===3001,Xs.needsUpdate=!0,rc||(rc=new St(pf,Xs),rc.frustrumCulled=!1);const n=new Mt,r=new ms;r.add(rc),t||(t=ic=new pa({antialias:!1})),t.setSize(Math.min(i.image.width,e),Math.min(i.image.height,e)),t.clear(),t.render(r,n);const s=new Lt(t.domElement);return s.minFilter=i.minFilter,s.magFilter=i.magFilter,s.wrapS=i.wrapS,s.wrapT=i.wrapT,s.name=i.name,ic&&(ic.dispose(),ic=null),s}const ov={POSITION:["byte","byte normalized","unsigned byte","unsigned byte normalized","short","short normalized","unsigned short","unsigned short normalized"],NORMAL:["byte normalized","short normalized"],TANGENT:["byte normalized","short normalized"],TEXCOORD:["byte","byte normalized","unsigned byte","short","short normalized","unsigned short"]};class ax{constructor(){this.pluginCallbacks=[],this.register(function(e){return new NP(e)}),this.register(function(e){return new OP(e)}),this.register(function(e){return new zP(e)}),this.register(function(e){return new kP(e)}),this.register(function(e){return new VP(e)}),this.register(function(e){return new HP(e)}),this.register(function(e){return new FP(e)}),this.register(function(e){return new BP(e)}),this.register(function(e){return new GP(e)}),this.register(function(e){return new WP(e)}),this.register(function(e){return new XP(e)})}register(e){return this.pluginCallbacks.indexOf(e)===-1&&this.pluginCallbacks.push(e),this}unregister(e){return this.pluginCallbacks.indexOf(e)!==-1&&this.pluginCallbacks.splice(this.pluginCallbacks.indexOf(e),1),this}parse(e,t,n,r){const s=new UP,o=[];for(let a=0,l=this.pluginCallbacks.length;a<l;a++)o.push(this.pluginCallbacks[a](s));s.setPlugins(o),s.write(e,t,r).catch(n)}parseAsync(e,t){const n=this;return new Promise(function(r,s){n.parse(e,r,s,t)})}}TP(ax,"Utils",{insertKeyframe:function(i,e){const t=i.getValueSize(),n=new i.TimeBufferType(i.times.length+1),r=new i.ValueBufferType(i.values.length+t),s=i.createInterpolant(new i.ValueBufferType(t));let o;if(i.times.length===0){n[0]=e;for(let a=0;a<t;a++)r[a]=0;o=0}else if(e<i.times[0]){if(Math.abs(i.times[0]-e)<.001)return 0;n[0]=e,n.set(i.times,1),r.set(s.evaluate(e),0),r.set(i.values,t),o=0}else if(e>i.times[i.times.length-1]){if(Math.abs(i.times[i.times.length-1]-e)<.001)return i.times.length-1;n[n.length-1]=e,n.set(i.times,0),r.set(i.values,0),r.set(s.evaluate(e),i.values.length),o=n.length-1}else for(let a=0;a<i.times.length;a++){if(Math.abs(i.times[a]-e)<.001)return a;if(i.times[a]<e&&i.times[a+1]>e){n.set(i.times.slice(0,a+1),0),n[a+1]=e,n.set(i.times.slice(a+1),a+2),r.set(i.values.slice(0,(a+1)*t),0),r.set(s.evaluate(e),(a+1)*t),r.set(i.values.slice((a+1)*t),(a+2)*t),o=a+1;break}}return i.times=n,i.values=r,o},mergeMorphTargetTracks:function(i,e){const t=[],n={},r=i.tracks;for(let s=0;s<r.length;++s){let o=r[s];const a=st.parseTrackName(o.name),l=st.findNode(e,a.nodeName);if(a.propertyName!=="morphTargetInfluences"||a.propertyIndex===void 0){t.push(o);continue}if(o.createInterpolant!==o.InterpolantFactoryMethodDiscrete&&o.createInterpolant!==o.InterpolantFactoryMethodLinear){if(o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline)throw new Error("THREE.GLTFExporter: Cannot merge tracks with glTF CUBICSPLINE interpolation.");console.warn("THREE.GLTFExporter: Morph target interpolation mode not yet supported. Using LINEAR instead."),o=o.clone(),o.setInterpolation(Ea)}const c=l.morphTargetInfluences.length,u=l.morphTargetDictionary[a.propertyIndex];if(u===void 0)throw new Error("THREE.GLTFExporter: Morph target name not found: "+a.propertyIndex);let h;if(n[l.uuid]===void 0){h=o.clone();const d=new h.ValueBufferType(c*h.times.length);for(let p=0;p<h.times.length;p++)d[p*c+u]=h.values[p];h.name=(a.nodeName||"")+".morphTargetInfluences",h.values=d,n[l.uuid]=h,t.push(h);continue}const f=o.createInterpolant(new o.ValueBufferType(1));h=n[l.uuid];for(let d=0;d<h.times.length;d++)h.values[d*c+u]=f.evaluate(h.times[d]);for(let d=0;d<o.times.length;d++){const p=this.insertKeyframe(h,o.times[d]);h.values[p*c+u]=o.values[d]}}return i.tracks=t,i}});const at={POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,BYTE:5120,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,INT:5124,UNSIGNED_INT:5125,FLOAT:5126,ARRAY_BUFFER:34962,ELEMENT_ARRAY_BUFFER:34963,NEAREST:9728,LINEAR:9729,NEAREST_MIPMAP_NEAREST:9984,LINEAR_MIPMAP_NEAREST:9985,NEAREST_MIPMAP_LINEAR:9986,LINEAR_MIPMAP_LINEAR:9987,CLAMP_TO_EDGE:33071,MIRRORED_REPEAT:33648,REPEAT:10497},gf="KHR_mesh_quantization",Hn={};Hn[Vt]=at.NEAREST;Hn[Tu]=at.NEAREST_MIPMAP_NEAREST;Hn[Jr]=at.NEAREST_MIPMAP_LINEAR;Hn[Yt]=at.LINEAR;Hn[so]=at.LINEAR_MIPMAP_NEAREST;Hn[ii]=at.LINEAR_MIPMAP_LINEAR;Hn[nn]=at.CLAMP_TO_EDGE;Hn[ho]=at.REPEAT;Hn[fo]=at.MIRRORED_REPEAT;const av={scale:"scale",position:"translation",quaternion:"rotation",morphTargetInfluences:"weights"},EP=new Ee,lv=12,AP=1179937895,CP=2,cv=8,RP=1313821514,IP=5130562;function Ko(i,e){return i.length===e.length&&i.every(function(t,n){return t===e[n]})}function PP(i){return new TextEncoder().encode(i).buffer}function LP(i){return Ko(i.elements,[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])}function DP(i,e,t){const n={min:new Array(i.itemSize).fill(Number.POSITIVE_INFINITY),max:new Array(i.itemSize).fill(Number.NEGATIVE_INFINITY)};for(let r=e;r<e+t;r++)for(let s=0;s<i.itemSize;s++){let o;i.itemSize>4?o=i.array[r*i.itemSize+s]:(s===0?o=i.getX(r):s===1?o=i.getY(r):s===2?o=i.getZ(r):s===3&&(o=i.getW(r)),i.normalized===!0&&(o=Zi.normalize(o,i.array))),n.min[s]=Math.min(n.min[s],o),n.max[s]=Math.max(n.max[s],o)}return n}function lx(i){return Math.ceil(i/4)*4}function vf(i,e=0){const t=lx(i.byteLength);if(t!==i.byteLength){const n=new Uint8Array(t);if(n.set(new Uint8Array(i)),e!==0)for(let r=i.byteLength;r<t;r++)n[r]=e;return n.buffer}return i}function uv(){return typeof document>"u"&&typeof OffscreenCanvas<"u"?new OffscreenCanvas(1,1):document.createElement("canvas")}function hv(i,e){if(i.toBlob!==void 0)return new Promise(n=>i.toBlob(n,e));let t;return e==="image/jpeg"?t=.92:e==="image/webp"&&(t=.8),i.convertToBlob({type:e,quality:t})}class UP{constructor(){this.plugins=[],this.options={},this.pending=[],this.buffers=[],this.byteOffset=0,this.buffers=[],this.nodeMap=new Map,this.skins=[],this.extensionsUsed={},this.extensionsRequired={},this.uids=new Map,this.uid=0,this.json={asset:{version:"2.0",generator:"THREE.GLTFExporter"}},this.cache={meshes:new Map,attributes:new Map,attributesNormalized:new Map,materials:new Map,textures:new Map,images:new Map}}setPlugins(e){this.plugins=e}async write(e,t,n={}){this.options=Object.assign({binary:!1,trs:!1,onlyVisible:!0,maxTextureSize:1/0,animations:[],includeCustomExtensions:!1},n),this.options.animations.length>0&&(this.options.trs=!0),this.processInput(e),await Promise.all(this.pending);const r=this,s=r.buffers,o=r.json;n=r.options;const a=r.extensionsUsed,l=r.extensionsRequired,c=new Blob(s,{type:"application/octet-stream"}),u=Object.keys(a),h=Object.keys(l);u.length>0&&(o.extensionsUsed=u),h.length>0&&(o.extensionsRequired=h),o.buffers&&o.buffers.length>0&&(o.buffers[0].byteLength=c.size),n.binary===!0?c.arrayBuffer().then(f=>{const d=vf(f),p=new DataView(new ArrayBuffer(cv));p.setUint32(0,d.byteLength,!0),p.setUint32(4,IP,!0);const y=vf(PP(JSON.stringify(o)),32),m=new DataView(new ArrayBuffer(cv));m.setUint32(0,y.byteLength,!0),m.setUint32(4,RP,!0);const g=new ArrayBuffer(lv),M=new DataView(g);M.setUint32(0,AP,!0),M.setUint32(4,CP,!0);const x=lv+m.byteLength+y.byteLength+p.byteLength+d.byteLength;M.setUint32(8,x,!0),new Blob([g,m,y,p,d],{type:"application/octet-stream"}).arrayBuffer().then(t)}):o.buffers&&o.buffers.length>0?sv(c).then(f=>{o.buffers[0].uri=f,t(o)}):t(o)}serializeUserData(e,t){if(Object.keys(e.userData).length===0)return;const n=this.options,r=this.extensionsUsed;try{const s=JSON.parse(JSON.stringify(e.userData));if(n.includeCustomExtensions&&s.gltfExtensions){t.extensions===void 0&&(t.extensions={});for(const o in s.gltfExtensions)t.extensions[o]=s.gltfExtensions[o],r[o]=!0;delete s.gltfExtensions}Object.keys(s).length>0&&(t.extras=s)}catch(s){console.warn("THREE.GLTFExporter: userData of '"+e.name+"' won't be serialized because of JSON.stringify error - "+s.message)}}getUID(e,t=!1){if(this.uids.has(e)===!1){const n=new Map;n.set(!0,this.uid++),n.set(!1,this.uid++),this.uids.set(e,n)}return this.uids.get(e).get(t)}isNormalizedNormalAttribute(e){if(this.cache.attributesNormalized.has(e))return!1;const t=new O;for(let n=0,r=e.count;n<r;n++)if(Math.abs(t.fromBufferAttribute(e,n).length()-1)>5e-4)return!1;return!0}createNormalizedNormalAttribute(e){const t=this.cache;if(t.attributesNormalized.has(e))return t.attributesNormalized.get(e);const n=e.clone(),r=new O;for(let s=0,o=n.count;s<o;s++)r.fromBufferAttribute(n,s),r.x===0&&r.y===0&&r.z===0?r.setX(1):r.normalize(),n.setXYZ(s,r.x,r.y,r.z);return t.attributesNormalized.set(e,n),n}applyTextureTransform(e,t){let n=!1;const r={};(t.offset.x!==0||t.offset.y!==0)&&(r.offset=t.offset.toArray(),n=!0),t.rotation!==0&&(r.rotation=t.rotation,n=!0),(t.repeat.x!==1||t.repeat.y!==1)&&(r.scale=t.repeat.toArray(),n=!0),n&&(e.extensions=e.extensions||{},e.extensions.KHR_texture_transform=r,this.extensionsUsed.KHR_texture_transform=!0)}buildMetalRoughTexture(e,t){if(e===t)return e;function n(f){return("colorSpace"in f?f.colorSpace==="srgb":f.encoding===3001)?function(d){return d<.04045?d*.0773993808:Math.pow(d*.9478672986+.0521327014,2.4)}:function(d){return d}}console.warn("THREE.GLTFExporter: Merged metalnessMap and roughnessMap textures."),e instanceof as&&(e=mf(e)),t instanceof as&&(t=mf(t));const r=e?e.image:null,s=t?t.image:null,o=Math.max(r?r.width:0,s?s.width:0),a=Math.max(r?r.height:0,s?s.height:0),l=uv();l.width=o,l.height=a;const c=l.getContext("2d");c.fillStyle="#00ffff",c.fillRect(0,0,o,a);const u=c.getImageData(0,0,o,a);if(r){c.drawImage(r,0,0,o,a);const f=n(e),d=c.getImageData(0,0,o,a).data;for(let p=2;p<d.length;p+=4)u.data[p]=f(d[p]/256)*256}if(s){c.drawImage(s,0,0,o,a);const f=n(t),d=c.getImageData(0,0,o,a).data;for(let p=1;p<d.length;p+=4)u.data[p]=f(d[p]/256)*256}c.putImageData(u,0,0);const h=(e||t).clone();return h.source=new Lt(l).source,"colorSpace"in h?h.colorSpace="":h.encoding=3e3,h.channel=(e||t).channel,e&&t&&e.channel!==t.channel&&console.warn("THREE.GLTFExporter: UV channels for metalnessMap and roughnessMap textures must match."),h}processBuffer(e){const t=this.json,n=this.buffers;return t.buffers||(t.buffers=[{byteLength:0}]),n.push(e),0}processBufferView(e,t,n,r,s){const o=this.json;o.bufferViews||(o.bufferViews=[]);let a;switch(t){case at.BYTE:case at.UNSIGNED_BYTE:a=1;break;case at.SHORT:case at.UNSIGNED_SHORT:a=2;break;default:a=4}const l=lx(r*e.itemSize*a),c=new DataView(new ArrayBuffer(l));let u=0;for(let f=n;f<n+r;f++)for(let d=0;d<e.itemSize;d++){let p;e.itemSize>4?p=e.array[f*e.itemSize+d]:(d===0?p=e.getX(f):d===1?p=e.getY(f):d===2?p=e.getZ(f):d===3&&(p=e.getW(f)),e.normalized===!0&&(p=Zi.normalize(p,e.array))),t===at.FLOAT?c.setFloat32(u,p,!0):t===at.INT?c.setInt32(u,p,!0):t===at.UNSIGNED_INT?c.setUint32(u,p,!0):t===at.SHORT?c.setInt16(u,p,!0):t===at.UNSIGNED_SHORT?c.setUint16(u,p,!0):t===at.BYTE?c.setInt8(u,p):t===at.UNSIGNED_BYTE&&c.setUint8(u,p),u+=a}const h={buffer:this.processBuffer(c.buffer),byteOffset:this.byteOffset,byteLength:l};return s!==void 0&&(h.target=s),s===at.ARRAY_BUFFER&&(h.byteStride=e.itemSize*a),this.byteOffset+=l,o.bufferViews.push(h),{id:o.bufferViews.length-1,byteLength:0}}processBufferViewImage(e){const t=this,n=t.json;return n.bufferViews||(n.bufferViews=[]),e.arrayBuffer().then(r=>{const s=vf(r),o={buffer:t.processBuffer(s),byteOffset:t.byteOffset,byteLength:s.byteLength};return t.byteOffset+=s.byteLength,n.bufferViews.push(o)-1})}processAccessor(e,t,n,r){const s=this.json,o={1:"SCALAR",2:"VEC2",3:"VEC3",4:"VEC4",9:"MAT3",16:"MAT4"};let a;if(e.array.constructor===Float32Array)a=at.FLOAT;else if(e.array.constructor===Int32Array)a=at.INT;else if(e.array.constructor===Uint32Array)a=at.UNSIGNED_INT;else if(e.array.constructor===Int16Array)a=at.SHORT;else if(e.array.constructor===Uint16Array)a=at.UNSIGNED_SHORT;else if(e.array.constructor===Int8Array)a=at.BYTE;else if(e.array.constructor===Uint8Array)a=at.UNSIGNED_BYTE;else throw new Error("THREE.GLTFExporter: Unsupported bufferAttribute component type: "+e.array.constructor.name);if(n===void 0&&(n=0),r===void 0&&(r=e.count),r===0)return null;const l=DP(e,n,r);let c;t!==void 0&&(c=e===t.index?at.ELEMENT_ARRAY_BUFFER:at.ARRAY_BUFFER);const u=this.processBufferView(e,a,n,r,c),h={bufferView:u.id,byteOffset:u.byteOffset,componentType:a,count:r,max:l.max,min:l.min,type:o[e.itemSize]};return e.normalized===!0&&(h.normalized=!0),s.accessors||(s.accessors=[]),s.accessors.push(h)-1}processImage(e,t,n,r="image/png"){if(e!==null){const s=this,o=s.cache,a=s.json,l=s.options,c=s.pending;o.images.has(e)||o.images.set(e,{});const u=o.images.get(e),h=r+":flipY/"+n.toString();if(u[h]!==void 0)return u[h];a.images||(a.images=[]);const f={mimeType:r},d=uv();d.width=Math.min(e.width,l.maxTextureSize),d.height=Math.min(e.height,l.maxTextureSize);const p=d.getContext("2d");if(n===!0&&(p.translate(0,d.height),p.scale(1,-1)),e.data!==void 0){t!==Zt&&console.error("GLTFExporter: Only RGBAFormat is supported.",t),(e.width>l.maxTextureSize||e.height>l.maxTextureSize)&&console.warn("GLTFExporter: Image size is bigger than maxTextureSize",e);const m=new Uint8ClampedArray(e.height*e.width*4);for(let g=0;g<m.length;g+=4)m[g+0]=e.data[g+0],m[g+1]=e.data[g+1],m[g+2]=e.data[g+2],m[g+3]=e.data[g+3];p.putImageData(new ImageData(m,e.width,e.height),0,0)}else p.drawImage(e,0,0,d.width,d.height);l.binary===!0?c.push(hv(d,r).then(m=>s.processBufferViewImage(m)).then(m=>{f.bufferView=m})):d.toDataURL!==void 0?f.uri=d.toDataURL(r):c.push(hv(d,r).then(sv).then(m=>{f.uri=m}));const y=a.images.push(f)-1;return u[h]=y,y}else throw new Error("THREE.GLTFExporter: No valid image data found. Unable to process texture.")}processSampler(e){const t=this.json;t.samplers||(t.samplers=[]);const n={magFilter:Hn[e.magFilter],minFilter:Hn[e.minFilter],wrapS:Hn[e.wrapS],wrapT:Hn[e.wrapT]};return t.samplers.push(n)-1}processTexture(e){const t=this.options,n=this.cache,r=this.json;if(n.textures.has(e))return n.textures.get(e);r.textures||(r.textures=[]),e instanceof as&&(e=mf(e,t.maxTextureSize));let s=e.userData.mimeType;s==="image/webp"&&(s="image/png");const o={sampler:this.processSampler(e),source:this.processImage(e.image,e.format,e.flipY,s)};e.name&&(o.name=e.name),this._invokeAll(function(l){l.writeTexture&&l.writeTexture(e,o)});const a=r.textures.push(o)-1;return n.textures.set(e,a),a}processMaterial(e){const t=this.cache,n=this.json;if(t.materials.has(e))return t.materials.get(e);if(e.isShaderMaterial)return console.warn("GLTFExporter: THREE.ShaderMaterial not supported."),null;n.materials||(n.materials=[]);const r={pbrMetallicRoughness:{}};e.isMeshStandardMaterial!==!0&&e.isMeshBasicMaterial!==!0&&console.warn("GLTFExporter: Use MeshStandardMaterial or MeshBasicMaterial for best results.");const s=e.color.toArray().concat([e.opacity]);if(Ko(s,[1,1,1,1])||(r.pbrMetallicRoughness.baseColorFactor=s),e.isMeshStandardMaterial?(r.pbrMetallicRoughness.metallicFactor=e.metalness,r.pbrMetallicRoughness.roughnessFactor=e.roughness):(r.pbrMetallicRoughness.metallicFactor=.5,r.pbrMetallicRoughness.roughnessFactor=.5),e.metalnessMap||e.roughnessMap){const a=this.buildMetalRoughTexture(e.metalnessMap,e.roughnessMap),l={index:this.processTexture(a),channel:a.channel};this.applyTextureTransform(l,a),r.pbrMetallicRoughness.metallicRoughnessTexture=l}if(e.map){const a={index:this.processTexture(e.map),texCoord:e.map.channel};this.applyTextureTransform(a,e.map),r.pbrMetallicRoughness.baseColorTexture=a}if(e.emissive){const a=e.emissive;if(Math.max(a.r,a.g,a.b)>0&&(r.emissiveFactor=e.emissive.toArray()),e.emissiveMap){const l={index:this.processTexture(e.emissiveMap),texCoord:e.emissiveMap.channel};this.applyTextureTransform(l,e.emissiveMap),r.emissiveTexture=l}}if(e.normalMap){const a={index:this.processTexture(e.normalMap),texCoord:e.normalMap.channel};e.normalScale&&e.normalScale.x!==1&&(a.scale=e.normalScale.x),this.applyTextureTransform(a,e.normalMap),r.normalTexture=a}if(e.aoMap){const a={index:this.processTexture(e.aoMap),texCoord:e.aoMap.channel};e.aoMapIntensity!==1&&(a.strength=e.aoMapIntensity),this.applyTextureTransform(a,e.aoMap),r.occlusionTexture=a}e.transparent?r.alphaMode="BLEND":e.alphaTest>0&&(r.alphaMode="MASK",r.alphaCutoff=e.alphaTest),e.side===Dn&&(r.doubleSided=!0),e.name!==""&&(r.name=e.name),this.serializeUserData(e,r),this._invokeAll(function(a){a.writeMaterial&&a.writeMaterial(e,r)});const o=n.materials.push(r)-1;return t.materials.set(e,o),o}processMesh(e){const t=this.cache,n=this.json,r=[e.geometry.uuid];if(Array.isArray(e.material))for(let x=0,b=e.material.length;x<b;x++)r.push(e.material[x].uuid);else r.push(e.material.uuid);const s=r.join(":");if(t.meshes.has(s))return t.meshes.get(s);const o=e.geometry;let a;e.isLineSegments?a=at.LINES:e.isLineLoop?a=at.LINE_LOOP:e.isLine?a=at.LINE_STRIP:e.isPoints?a=at.POINTS:a=e.material.wireframe?at.LINES:at.TRIANGLES;const l={},c={},u=[],h=[],f={...Ip>=152?{uv:"TEXCOORD_0",uv1:"TEXCOORD_1",uv2:"TEXCOORD_2",uv3:"TEXCOORD_3"}:{uv:"TEXCOORD_0",uv2:"TEXCOORD_1"},color:"COLOR_0",skinWeight:"WEIGHTS_0",skinIndex:"JOINTS_0"},d=o.getAttribute("normal");d!==void 0&&!this.isNormalizedNormalAttribute(d)&&(console.warn("THREE.GLTFExporter: Creating normalized normal attribute from the non-normalized one."),o.setAttribute("normal",this.createNormalizedNormalAttribute(d)));let p=null;for(let x in o.attributes){if(x.slice(0,5)==="morph")continue;const b=o.attributes[x];if(x=f[x]||x.toUpperCase(),/^(POSITION|NORMAL|TANGENT|TEXCOORD_\d+|COLOR_\d+|JOINTS_\d+|WEIGHTS_\d+)$/.test(x)||(x="_"+x),t.attributes.has(this.getUID(b))){c[x]=t.attributes.get(this.getUID(b));continue}p=null;const C=b.array;x==="JOINTS_0"&&!(C instanceof Uint16Array)&&!(C instanceof Uint8Array)&&(console.warn('GLTFExporter: Attribute "skinIndex" converted to type UNSIGNED_SHORT.'),p=new ft(new Uint16Array(C),b.itemSize,b.normalized));const w=this.processAccessor(p||b,o);w!==null&&(x.startsWith("_")||this.detectMeshQuantization(x,b),c[x]=w,t.attributes.set(this.getUID(b),w))}if(d!==void 0&&o.setAttribute("normal",d),Object.keys(c).length===0)return null;if(e.morphTargetInfluences!==void 0&&e.morphTargetInfluences.length>0){const x=[],b=[],C={};if(e.morphTargetDictionary!==void 0)for(const w in e.morphTargetDictionary)C[e.morphTargetDictionary[w]]=w;for(let w=0;w<e.morphTargetInfluences.length;++w){const T={};let S=!1;for(const _ in o.morphAttributes){if(_!=="position"&&_!=="normal"){S||(console.warn("GLTFExporter: Only POSITION and NORMAL morph are supported."),S=!0);continue}const v=o.morphAttributes[_][w],A=_.toUpperCase(),D=o.attributes[_];if(t.attributes.has(this.getUID(v,!0))){T[A]=t.attributes.get(this.getUID(v,!0));continue}const B=v.clone();if(!o.morphTargetsRelative)for(let X=0,Y=v.count;X<Y;X++)for(let z=0;z<v.itemSize;z++)z===0&&B.setX(X,v.getX(X)-D.getX(X)),z===1&&B.setY(X,v.getY(X)-D.getY(X)),z===2&&B.setZ(X,v.getZ(X)-D.getZ(X)),z===3&&B.setW(X,v.getW(X)-D.getW(X));T[A]=this.processAccessor(B,o),t.attributes.set(this.getUID(D,!0),T[A])}h.push(T),x.push(e.morphTargetInfluences[w]),e.morphTargetDictionary!==void 0&&b.push(C[w])}l.weights=x,b.length>0&&(l.extras={},l.extras.targetNames=b)}const y=Array.isArray(e.material);if(y&&o.groups.length===0)return null;const m=y?e.material:[e.material],g=y?o.groups:[{materialIndex:0,start:void 0,count:void 0}];for(let x=0,b=g.length;x<b;x++){const C={mode:a,attributes:c};if(this.serializeUserData(o,C),h.length>0&&(C.targets=h),o.index!==null){let T=this.getUID(o.index);(g[x].start!==void 0||g[x].count!==void 0)&&(T+=":"+g[x].start+":"+g[x].count),t.attributes.has(T)?C.indices=t.attributes.get(T):(C.indices=this.processAccessor(o.index,o,g[x].start,g[x].count),t.attributes.set(T,C.indices)),C.indices===null&&delete C.indices}const w=this.processMaterial(m[g[x].materialIndex]);w!==null&&(C.material=w),u.push(C)}l.primitives=u,n.meshes||(n.meshes=[]),this._invokeAll(function(x){x.writeMesh&&x.writeMesh(e,l)});const M=n.meshes.push(l)-1;return t.meshes.set(s,M),M}detectMeshQuantization(e,t){if(this.extensionsUsed[gf])return;let n;switch(t.array.constructor){case Int8Array:n="byte";break;case Uint8Array:n="unsigned byte";break;case Int16Array:n="short";break;case Uint16Array:n="unsigned short";break;default:return}t.normalized&&(n+=" normalized");const r=e.split("_",1)[0];ov[r]&&ov[r].includes(n)&&(this.extensionsUsed[gf]=!0,this.extensionsRequired[gf]=!0)}processCamera(e){const t=this.json;t.cameras||(t.cameras=[]);const n=e.isOrthographicCamera,r={type:n?"orthographic":"perspective"};return n?r.orthographic={xmag:e.right*2,ymag:e.top*2,zfar:e.far<=0?.001:e.far,znear:e.near<0?0:e.near}:r.perspective={aspectRatio:e.aspect,yfov:Zi.degToRad(e.fov),zfar:e.far<=0?.001:e.far,znear:e.near<0?0:e.near},e.name!==""&&(r.name=e.type),t.cameras.push(r)-1}processAnimation(e,t){const n=this.json,r=this.nodeMap;n.animations||(n.animations=[]),e=ax.Utils.mergeMorphTargetTracks(e.clone(),t);const s=e.tracks,o=[],a=[];for(let l=0;l<s.length;++l){const c=s[l],u=st.parseTrackName(c.name);let h=st.findNode(t,u.nodeName);const f=av[u.propertyName];if(u.objectName==="bones"&&(h.isSkinnedMesh===!0?h=h.skeleton.getBoneByName(u.objectIndex):h=void 0),!h||!f)return console.warn('THREE.GLTFExporter: Could not export animation track "%s".',c.name),null;const d=1;let p=c.values.length/c.times.length;f===av.morphTargetInfluences&&(p/=h.morphTargetInfluences.length);let y;c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline===!0?(y="CUBICSPLINE",p/=3):c.getInterpolation()===_o?y="STEP":y="LINEAR",a.push({input:this.processAccessor(new ft(c.times,d)),output:this.processAccessor(new ft(c.values,p)),interpolation:y}),o.push({sampler:a.length-1,target:{node:r.get(h),path:f}})}return n.animations.push({name:e.name||"clip_"+n.animations.length,samplers:a,channels:o}),n.animations.length-1}processSkin(e){const t=this.json,n=this.nodeMap,r=t.nodes[n.get(e)],s=e.skeleton;if(s===void 0)return null;const o=e.skeleton.bones[0];if(o===void 0)return null;const a=[],l=new Float32Array(s.bones.length*16),c=new Ge;for(let u=0;u<s.bones.length;++u)a.push(n.get(s.bones[u])),c.copy(s.boneInverses[u]),c.multiply(e.bindMatrix).toArray(l,u*16);return t.skins===void 0&&(t.skins=[]),t.skins.push({inverseBindMatrices:this.processAccessor(new ft(l,16)),joints:a,skeleton:n.get(o)}),r.skin=t.skins.length-1}processNode(e){const t=this.json,n=this.options,r=this.nodeMap;t.nodes||(t.nodes=[]);const s={};if(n.trs){const a=e.quaternion.toArray(),l=e.position.toArray(),c=e.scale.toArray();Ko(a,[0,0,0,1])||(s.rotation=a),Ko(l,[0,0,0])||(s.translation=l),Ko(c,[1,1,1])||(s.scale=c)}else e.matrixAutoUpdate&&e.updateMatrix(),LP(e.matrix)===!1&&(s.matrix=e.matrix.elements);if(e.name!==""&&(s.name=String(e.name)),this.serializeUserData(e,s),e.isMesh||e.isLine||e.isPoints){const a=this.processMesh(e);a!==null&&(s.mesh=a)}else e.isCamera&&(s.camera=this.processCamera(e));if(e.isSkinnedMesh&&this.skins.push(e),e.children.length>0){const a=[];for(let l=0,c=e.children.length;l<c;l++){const u=e.children[l];if(u.visible||n.onlyVisible===!1){const h=this.processNode(u);h!==null&&a.push(h)}}a.length>0&&(s.children=a)}this._invokeAll(function(a){a.writeNode&&a.writeNode(e,s)});const o=t.nodes.push(s)-1;return r.set(e,o),o}processScene(e){const t=this.json,n=this.options;t.scenes||(t.scenes=[],t.scene=0);const r={};e.name!==""&&(r.name=e.name),t.scenes.push(r);const s=[];for(let o=0,a=e.children.length;o<a;o++){const l=e.children[o];if(l.visible||n.onlyVisible===!1){const c=this.processNode(l);c!==null&&s.push(c)}}s.length>0&&(r.nodes=s),this.serializeUserData(e,r)}processObjects(e){const t=new ms;t.name="AuxScene";for(let n=0;n<e.length;n++)t.children.push(e[n]);this.processScene(t)}processInput(e){const t=this.options;e=e instanceof Array?e:[e],this._invokeAll(function(r){r.beforeParse&&r.beforeParse(e)});const n=[];for(let r=0;r<e.length;r++)e[r]instanceof ms?this.processScene(e[r]):n.push(e[r]);n.length>0&&this.processObjects(n);for(let r=0;r<this.skins.length;++r)this.processSkin(this.skins[r]);for(let r=0;r<t.animations.length;++r)this.processAnimation(t.animations[r],e[0]);this._invokeAll(function(r){r.afterParse&&r.afterParse(e)})}_invokeAll(e){for(let t=0,n=this.plugins.length;t<n;t++)e(this.plugins[t])}}class NP{constructor(e){this.writer=e,this.name="KHR_lights_punctual"}writeNode(e,t){if(!e.isLight)return;if(!e.isDirectionalLight&&!e.isPointLight&&!e.isSpotLight){console.warn("THREE.GLTFExporter: Only directional, point, and spot lights are supported.",e);return}const n=this.writer,r=n.json,s=n.extensionsUsed,o={};e.name&&(o.name=e.name),o.color=e.color.toArray(),o.intensity=e.intensity,e.isDirectionalLight?o.type="directional":e.isPointLight?(o.type="point",e.distance>0&&(o.range=e.distance)):e.isSpotLight&&(o.type="spot",e.distance>0&&(o.range=e.distance),o.spot={},o.spot.innerConeAngle=(e.penumbra-1)*e.angle*-1,o.spot.outerConeAngle=e.angle),e.decay!==void 0&&e.decay!==2&&console.warn("THREE.GLTFExporter: Light decay may be lost. glTF is physically-based, and expects light.decay=2."),e.target&&(e.target.parent!==e||e.target.position.x!==0||e.target.position.y!==0||e.target.position.z!==-1)&&console.warn("THREE.GLTFExporter: Light direction may be lost. For best results, make light.target a child of the light with position 0,0,-1."),s[this.name]||(r.extensions=r.extensions||{},r.extensions[this.name]={lights:[]},s[this.name]=!0);const a=r.extensions[this.name].lights;a.push(o),t.extensions=t.extensions||{},t.extensions[this.name]={light:a.length-1}}}let OP=class{constructor(i){this.writer=i,this.name="KHR_materials_unlit"}writeMaterial(i,e){if(!i.isMeshBasicMaterial)return;const t=this.writer.extensionsUsed;e.extensions=e.extensions||{},e.extensions[this.name]={},t[this.name]=!0,e.pbrMetallicRoughness.metallicFactor=0,e.pbrMetallicRoughness.roughnessFactor=.9}},FP=class{constructor(i){this.writer=i,this.name="KHR_materials_clearcoat"}writeMaterial(i,e){if(!i.isMeshPhysicalMaterial||i.clearcoat===0)return;const t=this.writer,n=t.extensionsUsed,r={};if(r.clearcoatFactor=i.clearcoat,i.clearcoatMap){const s={index:t.processTexture(i.clearcoatMap),texCoord:i.clearcoatMap.channel};t.applyTextureTransform(s,i.clearcoatMap),r.clearcoatTexture=s}if(r.clearcoatRoughnessFactor=i.clearcoatRoughness,i.clearcoatRoughnessMap){const s={index:t.processTexture(i.clearcoatRoughnessMap),texCoord:i.clearcoatRoughnessMap.channel};t.applyTextureTransform(s,i.clearcoatRoughnessMap),r.clearcoatRoughnessTexture=s}if(i.clearcoatNormalMap){const s={index:t.processTexture(i.clearcoatNormalMap),texCoord:i.clearcoatNormalMap.channel};t.applyTextureTransform(s,i.clearcoatNormalMap),r.clearcoatNormalTexture=s}e.extensions=e.extensions||{},e.extensions[this.name]=r,n[this.name]=!0}},BP=class{constructor(i){this.writer=i,this.name="KHR_materials_iridescence"}writeMaterial(i,e){if(!i.isMeshPhysicalMaterial||i.iridescence===0)return;const t=this.writer,n=t.extensionsUsed,r={};if(r.iridescenceFactor=i.iridescence,i.iridescenceMap){const s={index:t.processTexture(i.iridescenceMap),texCoord:i.iridescenceMap.channel};t.applyTextureTransform(s,i.iridescenceMap),r.iridescenceTexture=s}if(r.iridescenceIor=i.iridescenceIOR,r.iridescenceThicknessMinimum=i.iridescenceThicknessRange[0],r.iridescenceThicknessMaximum=i.iridescenceThicknessRange[1],i.iridescenceThicknessMap){const s={index:t.processTexture(i.iridescenceThicknessMap),texCoord:i.iridescenceThicknessMap.channel};t.applyTextureTransform(s,i.iridescenceThicknessMap),r.iridescenceThicknessTexture=s}e.extensions=e.extensions||{},e.extensions[this.name]=r,n[this.name]=!0}},zP=class{constructor(i){this.writer=i,this.name="KHR_materials_transmission"}writeMaterial(i,e){if(!i.isMeshPhysicalMaterial||i.transmission===0)return;const t=this.writer,n=t.extensionsUsed,r={};if(r.transmissionFactor=i.transmission,i.transmissionMap){const s={index:t.processTexture(i.transmissionMap),texCoord:i.transmissionMap.channel};t.applyTextureTransform(s,i.transmissionMap),r.transmissionTexture=s}e.extensions=e.extensions||{},e.extensions[this.name]=r,n[this.name]=!0}},kP=class{constructor(i){this.writer=i,this.name="KHR_materials_volume"}writeMaterial(i,e){if(!i.isMeshPhysicalMaterial||i.transmission===0)return;const t=this.writer,n=t.extensionsUsed,r={};if(r.thicknessFactor=i.thickness,i.thicknessMap){const s={index:t.processTexture(i.thicknessMap),texCoord:i.thicknessMap.channel};t.applyTextureTransform(s,i.thicknessMap),r.thicknessTexture=s}r.attenuationDistance=i.attenuationDistance,r.attenuationColor=i.attenuationColor.toArray(),e.extensions=e.extensions||{},e.extensions[this.name]=r,n[this.name]=!0}},VP=class{constructor(i){this.writer=i,this.name="KHR_materials_ior"}writeMaterial(i,e){if(!i.isMeshPhysicalMaterial||i.ior===1.5)return;const t=this.writer.extensionsUsed,n={};n.ior=i.ior,e.extensions=e.extensions||{},e.extensions[this.name]=n,t[this.name]=!0}},HP=class{constructor(i){this.writer=i,this.name="KHR_materials_specular"}writeMaterial(i,e){if(!i.isMeshPhysicalMaterial||i.specularIntensity===1&&i.specularColor.equals(EP)&&!i.specularIntensityMap&&!i.specularColorTexture)return;const t=this.writer,n=t.extensionsUsed,r={};if(i.specularIntensityMap){const s={index:t.processTexture(i.specularIntensityMap),texCoord:i.specularIntensityMap.channel};t.applyTextureTransform(s,i.specularIntensityMap),r.specularTexture=s}if(i.specularColorMap){const s={index:t.processTexture(i.specularColorMap),texCoord:i.specularColorMap.channel};t.applyTextureTransform(s,i.specularColorMap),r.specularColorTexture=s}r.specularFactor=i.specularIntensity,r.specularColorFactor=i.specularColor.toArray(),e.extensions=e.extensions||{},e.extensions[this.name]=r,n[this.name]=!0}},GP=class{constructor(i){this.writer=i,this.name="KHR_materials_sheen"}writeMaterial(i,e){if(!i.isMeshPhysicalMaterial||i.sheen==0)return;const t=this.writer,n=t.extensionsUsed,r={};if(i.sheenRoughnessMap){const s={index:t.processTexture(i.sheenRoughnessMap),texCoord:i.sheenRoughnessMap.channel};t.applyTextureTransform(s,i.sheenRoughnessMap),r.sheenRoughnessTexture=s}if(i.sheenColorMap){const s={index:t.processTexture(i.sheenColorMap),texCoord:i.sheenColorMap.channel};t.applyTextureTransform(s,i.sheenColorMap),r.sheenColorTexture=s}r.sheenRoughnessFactor=i.sheenRoughness,r.sheenColorFactor=i.sheenColor.toArray(),e.extensions=e.extensions||{},e.extensions[this.name]=r,n[this.name]=!0}},WP=class{constructor(i){this.writer=i,this.name="KHR_materials_anisotropy"}writeMaterial(i,e){if(!i.isMeshPhysicalMaterial||i.anisotropy==0)return;const t=this.writer,n=t.extensionsUsed,r={};if(i.anisotropyMap){const s={index:t.processTexture(i.anisotropyMap)};t.applyTextureTransform(s,i.anisotropyMap),r.anisotropyTexture=s}r.anisotropyStrength=i.anisotropy,r.anisotropyRotation=i.anisotropyRotation,e.extensions=e.extensions||{},e.extensions[this.name]=r,n[this.name]=!0}},XP=class{constructor(i){this.writer=i,this.name="KHR_materials_emissive_strength"}writeMaterial(i,e){if(!i.isMeshStandardMaterial||i.emissiveIntensity===1)return;const t=this.writer.extensionsUsed,n={};n.emissiveStrength=i.emissiveIntensity,e.extensions=e.extensions||{},e.extensions[this.name]=n,t[this.name]=!0}};var il=Uint8Array,cx=Uint16Array,YP=Uint32Array,qP=new il([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),jP=new il([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),ux=function(i,e){for(var t=new cx(31),n=0;n<31;++n)t[n]=e+=1<<i[n-1];for(var r=new YP(t[30]),n=1;n<30;++n)for(var s=t[n];s<t[n+1];++s)r[s]=s-t[n]<<5|n;return[t,r]},hx=ux(qP,2),$P=hx[0],ZP=hx[1];$P[28]=258,ZP[258]=28;ux(jP,0);var KP=new cx(32768);for(var Ct=0;Ct<32768;++Ct){var lr=(Ct&43690)>>>1|(Ct&21845)<<1;lr=(lr&52428)>>>2|(lr&13107)<<2,lr=(lr&61680)>>>4|(lr&3855)<<4,KP[Ct]=((lr&65280)>>>8|(lr&255)<<8)>>>1}var nh=new il(288);for(var Ct=0;Ct<144;++Ct)nh[Ct]=8;for(var Ct=144;Ct<256;++Ct)nh[Ct]=9;for(var Ct=256;Ct<280;++Ct)nh[Ct]=7;for(var Ct=280;Ct<288;++Ct)nh[Ct]=8;var JP=new il(32);for(var Ct=0;Ct<32;++Ct)JP[Ct]=5;var QP=new il(0),e3=typeof TextDecoder<"u"&&new TextDecoder,t3=0;try{e3.decode(QP,{stream:!0}),t3=1}catch{}var n3=Object.defineProperty,i3=(i,e,t)=>e in i?n3(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t,r3=(i,e,t)=>(i3(i,e+"",t),t);const fx=class extends St{constructor(i,e={}){super(i),this.isReflector=!0,this.type="Reflector",this.camera=new Mt;const t=this,n=e.color!==void 0?new Ee(e.color):new Ee(8355711),r=e.textureWidth||512,s=e.textureHeight||512,o=e.clipBias||0,a=e.shader||fx.ReflectorShader,l=e.multisample!==void 0?e.multisample:4,c=new yi,u=new O,h=new O,f=new O,d=new Ge,p=new O(0,0,-1),y=new rt,m=new O,g=new O,M=new rt,x=new Ge,b=this.camera,C=new ui(r,s,{samples:l,type:xs}),w=new mn({uniforms:Ya.clone(a.uniforms),fragmentShader:a.fragmentShader,vertexShader:a.vertexShader});w.uniforms.tDiffuse.value=C.texture,w.uniforms.color.value=n,w.uniforms.textureMatrix.value=x,this.material=w,this.onBeforeRender=function(T,S,_){if(h.setFromMatrixPosition(t.matrixWorld),f.setFromMatrixPosition(_.matrixWorld),d.extractRotation(t.matrixWorld),u.set(0,0,1),u.applyMatrix4(d),m.subVectors(h,f),m.dot(u)>0)return;m.reflect(u).negate(),m.add(h),d.extractRotation(_.matrixWorld),p.set(0,0,-1),p.applyMatrix4(d),p.add(f),g.subVectors(h,p),g.reflect(u).negate(),g.add(h),b.position.copy(m),b.up.set(0,1,0),b.up.applyMatrix4(d),b.up.reflect(u),b.lookAt(g),b.far=_.far,b.updateMatrixWorld(),b.projectionMatrix.copy(_.projectionMatrix),x.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),x.multiply(b.projectionMatrix),x.multiply(b.matrixWorldInverse),x.multiply(t.matrixWorld),c.setFromNormalAndCoplanarPoint(u,h),c.applyMatrix4(b.matrixWorldInverse),y.set(c.normal.x,c.normal.y,c.normal.z,c.constant);const v=b.projectionMatrix;M.x=(Math.sign(y.x)+v.elements[8])/v.elements[0],M.y=(Math.sign(y.y)+v.elements[9])/v.elements[5],M.z=-1,M.w=(1+v.elements[10])/v.elements[14],y.multiplyScalar(2/y.dot(M)),v.elements[2]=y.x,v.elements[6]=y.y,v.elements[10]=y.z+1-o,v.elements[14]=y.w,t.visible=!1;const A=T.getRenderTarget(),D=T.xr.enabled,B=T.shadowMap.autoUpdate,X=T.toneMapping;let Y=!1;"outputColorSpace"in T?Y=T.outputColorSpace==="srgb":Y=T.outputEncoding===3001,T.xr.enabled=!1,T.shadowMap.autoUpdate=!1,"outputColorSpace"in T?T.outputColorSpace="srgb-linear":T.outputEncoding=3e3,T.toneMapping=ai,T.setRenderTarget(C),T.state.buffers.depth.setMask(!0),T.autoClear===!1&&T.clear(),T.render(S,b),T.xr.enabled=D,T.shadowMap.autoUpdate=B,T.toneMapping=X,"outputColorSpace"in T?T.outputColorSpace=Y?"srgb":"srgb-linear":T.outputEncoding=Y?3001:3e3,T.setRenderTarget(A);const z=_.viewport;z!==void 0&&T.state.viewport(z),t.visible=!0},this.getRenderTarget=function(){return C},this.dispose=function(){C.dispose(),t.material.dispose()}}};let hd=fx;r3(hd,"ReflectorShader",{uniforms:{color:{value:null},tDiffuse:{value:null},textureMatrix:{value:null}},vertexShader:`
		uniform mat4 textureMatrix;
		varying vec4 vUv;

		#include <common>
		#include <logdepthbuf_pars_vertex>

		void main() {

			vUv = textureMatrix * vec4( position, 1.0 );

			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

			#include <logdepthbuf_vertex>

		}`,fragmentShader:`
		uniform vec3 color;
		uniform sampler2D tDiffuse;
		varying vec4 vUv;

		#include <logdepthbuf_pars_fragment>

		float blendOverlay( float base, float blend ) {

			return( base < 0.5 ? ( 2.0 * base * blend ) : ( 1.0 - 2.0 * ( 1.0 - base ) * ( 1.0 - blend ) ) );

		}

		vec3 blendOverlay( vec3 base, vec3 blend ) {

			return vec3( blendOverlay( base.r, blend.r ), blendOverlay( base.g, blend.g ), blendOverlay( base.b, blend.b ) );

		}

		void main() {

			#include <logdepthbuf_fragment>

			vec4 base = texture2DProj( tDiffuse, vUv );
			gl_FragColor = vec4( blendOverlay( base.rgb, color ), 1.0 );

			#include <tonemapping_fragment>
			#include <${Ip>=154?"colorspace_fragment":"encodings_fragment"}>

		}`});var s3=Object.defineProperty,o3=(i,e,t)=>e in i?s3(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t,dx=(i,e,t)=>(o3(i,typeof e!="symbol"?e+"":e,t),t);const ih=new tt,a3=new Float32Array([-1,-1,0,0,0,1,-1,0,1,0,1,1,0,1,1,-1,1,0,0,1]),px=new $a(a3,5);ih.setIndex([0,1,2,0,2,3]);ih.setAttribute("position",new Ki(px,3,0,!1));ih.setAttribute("uv",new Ki(px,2,3,!1));const fd=class extends St{constructor(){super(fd.Geometry,new Ti({opacity:0,transparent:!0})),this.isLensflare=!0,this.type="Lensflare",this.frustumCulled=!1,this.renderOrder=1/0;const i=new O,e=new O,t=new Zn(new Uint8Array(16*16*3),16,16,Zt);t.minFilter=Vt,t.magFilter=Vt,t.wrapS=nn,t.wrapT=nn;const n=new Zn(new Uint8Array(16*16*3),16,16,Zt);n.minFilter=Vt,n.magFilter=Vt,n.wrapS=nn,n.wrapT=nn;const r=fd.Geometry,s=new da({uniforms:{scale:{value:null},screenPosition:{value:null}},vertexShader:`

				precision highp float;

				uniform vec3 screenPosition;
				uniform vec2 scale;

				attribute vec3 position;

				void main() {

					gl_Position = vec4( position.xy * scale + screenPosition.xy, screenPosition.z, 1.0 );

				}`,fragmentShader:`

				precision highp float;

				void main() {

					gl_FragColor = vec4( 1.0, 0.0, 1.0, 1.0 );

				}`,depthTest:!0,depthWrite:!1,transparent:!1}),o=new da({uniforms:{map:{value:t},scale:{value:null},screenPosition:{value:null}},vertexShader:`

				precision highp float;

				uniform vec3 screenPosition;
				uniform vec2 scale;

				attribute vec3 position;
				attribute vec2 uv;

				varying vec2 vUV;

				void main() {

					vUV = uv;

					gl_Position = vec4( position.xy * scale + screenPosition.xy, screenPosition.z, 1.0 );

				}`,fragmentShader:`

				precision highp float;

				uniform sampler2D map;

				varying vec2 vUV;

				void main() {

					gl_FragColor = texture2D( map, vUV );

				}`,depthTest:!1,depthWrite:!1,transparent:!1}),a=new St(r,s),l=[],c=mx.Shader,u=new da({uniforms:{map:{value:null},occlusionMap:{value:n},color:{value:new Ee(16777215)},scale:{value:new de},screenPosition:{value:new O}},vertexShader:c.vertexShader,fragmentShader:c.fragmentShader,blending:Sc,transparent:!0,depthWrite:!1}),h=new St(r,u);this.addElement=function(m){l.push(m)};const f=new de,d=new de,p=new Ly,y=new rt;this.onBeforeRender=function(m,g,M){m.getCurrentViewport(y);const x=y.w/y.z,b=y.z/2,C=y.w/2;let w=16/y.w;if(f.set(w*x,w),p.min.set(y.x,y.y),p.max.set(y.x+(y.z-16),y.y+(y.w-16)),e.setFromMatrixPosition(this.matrixWorld),e.applyMatrix4(M.matrixWorldInverse),!(e.z>0)&&(i.copy(e).applyMatrix4(M.projectionMatrix),d.x=y.x+i.x*b+b-8,d.y=y.y+i.y*C+C-8,p.containsPoint(d))){m.copyFramebufferToTexture(d,t);let T=s.uniforms;T.scale.value=f,T.screenPosition.value=i,m.renderBufferDirect(M,null,r,s,a,null),m.copyFramebufferToTexture(d,n),T=o.uniforms,T.scale.value=f,T.screenPosition.value=i,m.renderBufferDirect(M,null,r,o,a,null);const S=-i.x*2,_=-i.y*2;for(let v=0,A=l.length;v<A;v++){const D=l[v],B=u.uniforms;B.color.value.copy(D.color),B.map.value=D.texture,B.screenPosition.value.x=i.x+S*D.distance,B.screenPosition.value.y=i.y+_*D.distance,w=D.size/y.w;const X=y.w/y.z;B.scale.value.set(w*X,w),u.uniformsNeedUpdate=!0,m.renderBufferDirect(M,null,r,u,h,null)}}},this.dispose=function(){s.dispose(),o.dispose(),u.dispose(),t.dispose(),n.dispose();for(let m=0,g=l.length;m<g;m++)l[m].texture.dispose()}}};let l3=fd;dx(l3,"Geometry",ih);class mx{constructor(e,t=1,n=0,r=new Ee(16777215)){this.texture=e,this.size=t,this.distance=n,this.color=r}}dx(mx,"Shader",{uniforms:{map:{value:null},occlusionMap:{value:null},color:{value:null},scale:{value:null},screenPosition:{value:null}},vertexShader:`

		precision highp float;

		uniform vec3 screenPosition;
		uniform vec2 scale;

		uniform sampler2D occlusionMap;

		attribute vec3 position;
		attribute vec2 uv;

		varying vec2 vUV;
		varying float vVisibility;

		void main() {

			vUV = uv;

			vec2 pos = position.xy;

			vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );
			visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );
			visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );
			visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );
			visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );
			visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );
			visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );
			visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );
			visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );

			vVisibility =        visibility.r / 9.0;
			vVisibility *= 1.0 - visibility.g / 9.0;
			vVisibility *=       visibility.b / 9.0;

			gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );

		}`,fragmentShader:`

		precision highp float;

		uniform sampler2D map;
		uniform vec3 color;

		varying vec2 vUV;
		varying float vVisibility;

		void main() {

			vec4 texture = texture2D( map, vUV );
			texture.a *= vVisibility;
			gl_FragColor = texture;
			gl_FragColor.rgb *= color;

		}`});var c3=Object.defineProperty,u3=(i,e,t)=>e in i?c3(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t,gx=(i,e,t)=>(u3(i,typeof e!="symbol"?e+"":e,t),t);const pc={uniforms:{turbidity:{value:2},rayleigh:{value:1},mieCoefficient:{value:.005},mieDirectionalG:{value:.8},sunPosition:{value:new O},up:{value:new O(0,1,0)}},vertexShader:`
      uniform vec3 sunPosition;
      uniform float rayleigh;
      uniform float turbidity;
      uniform float mieCoefficient;
      uniform vec3 up;

      varying vec3 vWorldPosition;
      varying vec3 vSunDirection;
      varying float vSunfade;
      varying vec3 vBetaR;
      varying vec3 vBetaM;
      varying float vSunE;

      // constants for atmospheric scattering
      const float e = 2.71828182845904523536028747135266249775724709369995957;
      const float pi = 3.141592653589793238462643383279502884197169;

      // wavelength of used primaries, according to preetham
      const vec3 lambda = vec3( 680E-9, 550E-9, 450E-9 );
      // this pre-calcuation replaces older TotalRayleigh(vec3 lambda) function:
      // (8.0 * pow(pi, 3.0) * pow(pow(n, 2.0) - 1.0, 2.0) * (6.0 + 3.0 * pn)) / (3.0 * N * pow(lambda, vec3(4.0)) * (6.0 - 7.0 * pn))
      const vec3 totalRayleigh = vec3( 5.804542996261093E-6, 1.3562911419845635E-5, 3.0265902468824876E-5 );

      // mie stuff
      // K coefficient for the primaries
      const float v = 4.0;
      const vec3 K = vec3( 0.686, 0.678, 0.666 );
      // MieConst = pi * pow( ( 2.0 * pi ) / lambda, vec3( v - 2.0 ) ) * K
      const vec3 MieConst = vec3( 1.8399918514433978E14, 2.7798023919660528E14, 4.0790479543861094E14 );

      // earth shadow hack
      // cutoffAngle = pi / 1.95;
      const float cutoffAngle = 1.6110731556870734;
      const float steepness = 1.5;
      const float EE = 1000.0;

      float sunIntensity( float zenithAngleCos ) {
        zenithAngleCos = clamp( zenithAngleCos, -1.0, 1.0 );
        return EE * max( 0.0, 1.0 - pow( e, -( ( cutoffAngle - acos( zenithAngleCos ) ) / steepness ) ) );
      }

      vec3 totalMie( float T ) {
        float c = ( 0.2 * T ) * 10E-18;
        return 0.434 * c * MieConst;
      }

      void main() {

        vec4 worldPosition = modelMatrix * vec4( position, 1.0 );
        vWorldPosition = worldPosition.xyz;

        gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
        gl_Position.z = gl_Position.w; // set z to camera.far

        vSunDirection = normalize( sunPosition );

        vSunE = sunIntensity( dot( vSunDirection, up ) );

        vSunfade = 1.0 - clamp( 1.0 - exp( ( sunPosition.y / 450000.0 ) ), 0.0, 1.0 );

        float rayleighCoefficient = rayleigh - ( 1.0 * ( 1.0 - vSunfade ) );

      // extinction (absorbtion + out scattering)
      // rayleigh coefficients
        vBetaR = totalRayleigh * rayleighCoefficient;

      // mie coefficients
        vBetaM = totalMie( turbidity ) * mieCoefficient;

      }
    `,fragmentShader:`
      varying vec3 vWorldPosition;
      varying vec3 vSunDirection;
      varying float vSunfade;
      varying vec3 vBetaR;
      varying vec3 vBetaM;
      varying float vSunE;

      uniform float mieDirectionalG;
      uniform vec3 up;

      const vec3 cameraPos = vec3( 0.0, 0.0, 0.0 );

      // constants for atmospheric scattering
      const float pi = 3.141592653589793238462643383279502884197169;

      const float n = 1.0003; // refractive index of air
      const float N = 2.545E25; // number of molecules per unit volume for air at 288.15K and 1013mb (sea level -45 celsius)

      // optical length at zenith for molecules
      const float rayleighZenithLength = 8.4E3;
      const float mieZenithLength = 1.25E3;
      // 66 arc seconds -> degrees, and the cosine of that
      const float sunAngularDiameterCos = 0.999956676946448443553574619906976478926848692873900859324;

      // 3.0 / ( 16.0 * pi )
      const float THREE_OVER_SIXTEENPI = 0.05968310365946075;
      // 1.0 / ( 4.0 * pi )
      const float ONE_OVER_FOURPI = 0.07957747154594767;

      float rayleighPhase( float cosTheta ) {
        return THREE_OVER_SIXTEENPI * ( 1.0 + pow( cosTheta, 2.0 ) );
      }

      float hgPhase( float cosTheta, float g ) {
        float g2 = pow( g, 2.0 );
        float inverse = 1.0 / pow( 1.0 - 2.0 * g * cosTheta + g2, 1.5 );
        return ONE_OVER_FOURPI * ( ( 1.0 - g2 ) * inverse );
      }

      void main() {

        vec3 direction = normalize( vWorldPosition - cameraPos );

      // optical length
      // cutoff angle at 90 to avoid singularity in next formula.
        float zenithAngle = acos( max( 0.0, dot( up, direction ) ) );
        float inverse = 1.0 / ( cos( zenithAngle ) + 0.15 * pow( 93.885 - ( ( zenithAngle * 180.0 ) / pi ), -1.253 ) );
        float sR = rayleighZenithLength * inverse;
        float sM = mieZenithLength * inverse;

      // combined extinction factor
        vec3 Fex = exp( -( vBetaR * sR + vBetaM * sM ) );

      // in scattering
        float cosTheta = dot( direction, vSunDirection );

        float rPhase = rayleighPhase( cosTheta * 0.5 + 0.5 );
        vec3 betaRTheta = vBetaR * rPhase;

        float mPhase = hgPhase( cosTheta, mieDirectionalG );
        vec3 betaMTheta = vBetaM * mPhase;

        vec3 Lin = pow( vSunE * ( ( betaRTheta + betaMTheta ) / ( vBetaR + vBetaM ) ) * ( 1.0 - Fex ), vec3( 1.5 ) );
        Lin *= mix( vec3( 1.0 ), pow( vSunE * ( ( betaRTheta + betaMTheta ) / ( vBetaR + vBetaM ) ) * Fex, vec3( 1.0 / 2.0 ) ), clamp( pow( 1.0 - dot( up, vSunDirection ), 5.0 ), 0.0, 1.0 ) );

      // nightsky
        float theta = acos( direction.y ); // elevation --> y-axis, [-pi/2, pi/2]
        float phi = atan( direction.z, direction.x ); // azimuth --> x-axis [-pi/2, pi/2]
        vec2 uv = vec2( phi, theta ) / vec2( 2.0 * pi, pi ) + vec2( 0.5, 0.0 );
        vec3 L0 = vec3( 0.1 ) * Fex;

      // composition + solar disc
        float sundisk = smoothstep( sunAngularDiameterCos, sunAngularDiameterCos + 0.00002, cosTheta );
        L0 += ( vSunE * 19000.0 * Fex ) * sundisk;

        vec3 texColor = ( Lin + L0 ) * 0.04 + vec3( 0.0, 0.0003, 0.00075 );

        vec3 retColor = pow( texColor, vec3( 1.0 / ( 1.2 + ( 1.2 * vSunfade ) ) ) );

        gl_FragColor = vec4( retColor, 1.0 );

      #include <tonemapping_fragment>
      #include <${Ip>=154?"colorspace_fragment":"encodings_fragment"}>

      }
    `},vx=new mn({name:"SkyShader",fragmentShader:pc.fragmentShader,vertexShader:pc.vertexShader,uniforms:Ya.clone(pc.uniforms),side:fn,depthWrite:!1});class _x extends St{constructor(){super(new Tr(1,1,1),vx)}}gx(_x,"SkyShader",pc);gx(_x,"material",vx);new wn;new O;new Tn(0,0,0,"YXZ");new O;var h3=Object.defineProperty,f3=(i,e,t)=>e in i?h3(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t,Xe=(i,e,t)=>(f3(i,typeof e!="symbol"?e+"":e,t),t);const sc=new bs,fv=new yi,d3=Math.cos(70*(Math.PI/180)),dv=(i,e)=>(i%e+e)%e;class p3 extends hi{constructor(e,t){super(),Xe(this,"object"),Xe(this,"domElement"),Xe(this,"enabled",!0),Xe(this,"target",new O),Xe(this,"minDistance",0),Xe(this,"maxDistance",1/0),Xe(this,"minZoom",0),Xe(this,"maxZoom",1/0),Xe(this,"minPolarAngle",0),Xe(this,"maxPolarAngle",Math.PI),Xe(this,"minAzimuthAngle",-1/0),Xe(this,"maxAzimuthAngle",1/0),Xe(this,"enableDamping",!1),Xe(this,"dampingFactor",.05),Xe(this,"enableZoom",!0),Xe(this,"zoomSpeed",1),Xe(this,"enableRotate",!0),Xe(this,"rotateSpeed",1),Xe(this,"enablePan",!0),Xe(this,"panSpeed",1),Xe(this,"screenSpacePanning",!0),Xe(this,"keyPanSpeed",7),Xe(this,"zoomToCursor",!1),Xe(this,"autoRotate",!1),Xe(this,"autoRotateSpeed",2),Xe(this,"reverseOrbit",!1),Xe(this,"reverseHorizontalOrbit",!1),Xe(this,"reverseVerticalOrbit",!1),Xe(this,"keys",{LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"}),Xe(this,"mouseButtons",{LEFT:_i.ROTATE,MIDDLE:_i.DOLLY,RIGHT:_i.PAN}),Xe(this,"touches",{ONE:Fi.ROTATE,TWO:Fi.DOLLY_PAN}),Xe(this,"target0"),Xe(this,"position0"),Xe(this,"zoom0"),Xe(this,"_domElementKeyEvents",null),Xe(this,"getPolarAngle"),Xe(this,"getAzimuthalAngle"),Xe(this,"setPolarAngle"),Xe(this,"setAzimuthalAngle"),Xe(this,"getDistance"),Xe(this,"getZoomScale"),Xe(this,"listenToKeyEvents"),Xe(this,"stopListenToKeyEvents"),Xe(this,"saveState"),Xe(this,"reset"),Xe(this,"update"),Xe(this,"connect"),Xe(this,"dispose"),Xe(this,"dollyIn"),Xe(this,"dollyOut"),Xe(this,"getScale"),Xe(this,"setScale"),this.object=e,this.domElement=t,this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=()=>u.phi,this.getAzimuthalAngle=()=>u.theta,this.setPolarAngle=k=>{let re=dv(k,2*Math.PI),Me=u.phi;Me<0&&(Me+=2*Math.PI),re<0&&(re+=2*Math.PI);let W=Math.abs(re-Me);2*Math.PI-W<W&&(re<Me?re+=2*Math.PI:Me+=2*Math.PI),h.phi=re-Me,n.update()},this.setAzimuthalAngle=k=>{let re=dv(k,2*Math.PI),Me=u.theta;Me<0&&(Me+=2*Math.PI),re<0&&(re+=2*Math.PI);let W=Math.abs(re-Me);2*Math.PI-W<W&&(re<Me?re+=2*Math.PI:Me+=2*Math.PI),h.theta=re-Me,n.update()},this.getDistance=()=>n.object.position.distanceTo(n.target),this.listenToKeyEvents=k=>{k.addEventListener("keydown",se),this._domElementKeyEvents=k},this.stopListenToKeyEvents=()=>{this._domElementKeyEvents.removeEventListener("keydown",se),this._domElementKeyEvents=null},this.saveState=()=>{n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=()=>{n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(r),n.update(),l=a.NONE},this.update=(()=>{const k=new O,re=new O(0,1,0),Me=new dn().setFromUnitVectors(e.up,re),W=Me.clone().invert(),Ae=new O,ye=new dn,Oe=2*Math.PI;return function(){const be=n.object.position;Me.setFromUnitVectors(e.up,re),W.copy(Me).invert(),k.copy(be).sub(n.target),k.applyQuaternion(Me),u.setFromVector3(k),n.autoRotate&&l===a.NONE&&X(D()),n.enableDamping?(u.theta+=h.theta*n.dampingFactor,u.phi+=h.phi*n.dampingFactor):(u.theta+=h.theta,u.phi+=h.phi);let me=n.minAzimuthAngle,Ne=n.maxAzimuthAngle;isFinite(me)&&isFinite(Ne)&&(me<-Math.PI?me+=Oe:me>Math.PI&&(me-=Oe),Ne<-Math.PI?Ne+=Oe:Ne>Math.PI&&(Ne-=Oe),me<=Ne?u.theta=Math.max(me,Math.min(Ne,u.theta)):u.theta=u.theta>(me+Ne)/2?Math.max(me,u.theta):Math.min(Ne,u.theta)),u.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,u.phi)),u.makeSafe(),n.enableDamping===!0?n.target.addScaledVector(d,n.dampingFactor):n.target.add(d),n.zoomToCursor&&_||n.object.isOrthographicCamera?u.radius=ke(u.radius):u.radius=ke(u.radius*f),k.setFromSpherical(u),k.applyQuaternion(W),be.copy(n.target).add(k),n.object.matrixAutoUpdate||n.object.updateMatrix(),n.object.lookAt(n.target),n.enableDamping===!0?(h.theta*=1-n.dampingFactor,h.phi*=1-n.dampingFactor,d.multiplyScalar(1-n.dampingFactor)):(h.set(0,0,0),d.set(0,0,0));let qe=!1;if(n.zoomToCursor&&_){let mt=null;if(n.object instanceof Mt&&n.object.isPerspectiveCamera){const lt=k.length();mt=ke(lt*f);const rn=lt-mt;n.object.position.addScaledVector(T,rn),n.object.updateMatrixWorld()}else if(n.object.isOrthographicCamera){const lt=new O(S.x,S.y,0);lt.unproject(n.object),n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/f)),n.object.updateProjectionMatrix(),qe=!0;const rn=new O(S.x,S.y,0);rn.unproject(n.object),n.object.position.sub(rn).add(lt),n.object.updateMatrixWorld(),mt=k.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),n.zoomToCursor=!1;mt!==null&&(n.screenSpacePanning?n.target.set(0,0,-1).transformDirection(n.object.matrix).multiplyScalar(mt).add(n.object.position):(sc.origin.copy(n.object.position),sc.direction.set(0,0,-1).transformDirection(n.object.matrix),Math.abs(n.object.up.dot(sc.direction))<d3?e.lookAt(n.target):(fv.setFromNormalAndCoplanarPoint(n.object.up,n.target),sc.intersectPlane(fv,n.target))))}else n.object instanceof Gi&&n.object.isOrthographicCamera&&(qe=f!==1,qe&&(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/f)),n.object.updateProjectionMatrix()));return f=1,_=!1,qe||Ae.distanceToSquared(n.object.position)>c||8*(1-ye.dot(n.object.quaternion))>c?(n.dispatchEvent(r),Ae.copy(n.object.position),ye.copy(n.object.quaternion),qe=!1,!0):!1}})(),this.connect=k=>{n.domElement=k,n.domElement.style.touchAction="none",n.domElement.addEventListener("contextmenu",Pe),n.domElement.addEventListener("pointerdown",pe),n.domElement.addEventListener("pointercancel",R),n.domElement.addEventListener("wheel",he)},this.dispose=()=>{var k,re,Me,W,Ae,ye;n.domElement&&(n.domElement.style.touchAction="auto"),(k=n.domElement)==null||k.removeEventListener("contextmenu",Pe),(re=n.domElement)==null||re.removeEventListener("pointerdown",pe),(Me=n.domElement)==null||Me.removeEventListener("pointercancel",R),(W=n.domElement)==null||W.removeEventListener("wheel",he),(Ae=n.domElement)==null||Ae.ownerDocument.removeEventListener("pointermove",U),(ye=n.domElement)==null||ye.ownerDocument.removeEventListener("pointerup",R),n._domElementKeyEvents!==null&&n._domElementKeyEvents.removeEventListener("keydown",se)};const n=this,r={type:"change"},s={type:"start"},o={type:"end"},a={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let l=a.NONE;const c=1e-6,u=new Qf,h=new Qf;let f=1;const d=new O,p=new de,y=new de,m=new de,g=new de,M=new de,x=new de,b=new de,C=new de,w=new de,T=new O,S=new de;let _=!1;const v=[],A={};function D(){return 2*Math.PI/60/60*n.autoRotateSpeed}function B(){return Math.pow(.95,n.zoomSpeed)}function X(k){n.reverseOrbit||n.reverseHorizontalOrbit?h.theta+=k:h.theta-=k}function Y(k){n.reverseOrbit||n.reverseVerticalOrbit?h.phi+=k:h.phi-=k}const z=(()=>{const k=new O;return function(re,Me){k.setFromMatrixColumn(Me,0),k.multiplyScalar(-re),d.add(k)}})(),Q=(()=>{const k=new O;return function(re,Me){n.screenSpacePanning===!0?k.setFromMatrixColumn(Me,1):(k.setFromMatrixColumn(Me,0),k.crossVectors(n.object.up,k)),k.multiplyScalar(re),d.add(k)}})(),K=(()=>{const k=new O;return function(re,Me){const W=n.domElement;if(W&&n.object instanceof Mt&&n.object.isPerspectiveCamera){const Ae=n.object.position;k.copy(Ae).sub(n.target);let ye=k.length();ye*=Math.tan(n.object.fov/2*Math.PI/180),z(2*re*ye/W.clientHeight,n.object.matrix),Q(2*Me*ye/W.clientHeight,n.object.matrix)}else W&&n.object instanceof Gi&&n.object.isOrthographicCamera?(z(re*(n.object.right-n.object.left)/n.object.zoom/W.clientWidth,n.object.matrix),Q(Me*(n.object.top-n.object.bottom)/n.object.zoom/W.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}})();function fe(k){n.object instanceof Mt&&n.object.isPerspectiveCamera||n.object instanceof Gi&&n.object.isOrthographicCamera?f=k:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function ge(k){fe(f/k)}function oe(k){fe(f*k)}function Te(k){if(!n.zoomToCursor||!n.domElement)return;_=!0;const re=n.domElement.getBoundingClientRect(),Me=k.clientX-re.left,W=k.clientY-re.top,Ae=re.width,ye=re.height;S.x=Me/Ae*2-1,S.y=-(W/ye)*2+1,T.set(S.x,S.y,1).unproject(n.object).sub(n.object.position).normalize()}function ke(k){return Math.max(n.minDistance,Math.min(n.maxDistance,k))}function ae(k){p.set(k.clientX,k.clientY)}function ve(k){Te(k),b.set(k.clientX,k.clientY)}function Re(k){g.set(k.clientX,k.clientY)}function Se(k){y.set(k.clientX,k.clientY),m.subVectors(y,p).multiplyScalar(n.rotateSpeed);const re=n.domElement;re&&(X(2*Math.PI*m.x/re.clientHeight),Y(2*Math.PI*m.y/re.clientHeight)),p.copy(y),n.update()}function le(k){C.set(k.clientX,k.clientY),w.subVectors(C,b),w.y>0?ge(B()):w.y<0&&oe(B()),b.copy(C),n.update()}function I(k){M.set(k.clientX,k.clientY),x.subVectors(M,g).multiplyScalar(n.panSpeed),K(x.x,x.y),g.copy(M),n.update()}function F(k){Te(k),k.deltaY<0?oe(B()):k.deltaY>0&&ge(B()),n.update()}function q(k){let re=!1;switch(k.code){case n.keys.UP:K(0,n.keyPanSpeed),re=!0;break;case n.keys.BOTTOM:K(0,-n.keyPanSpeed),re=!0;break;case n.keys.LEFT:K(n.keyPanSpeed,0),re=!0;break;case n.keys.RIGHT:K(-n.keyPanSpeed,0),re=!0;break}re&&(k.preventDefault(),n.update())}function P(){if(v.length==1)p.set(v[0].pageX,v[0].pageY);else{const k=.5*(v[0].pageX+v[1].pageX),re=.5*(v[0].pageY+v[1].pageY);p.set(k,re)}}function L(){if(v.length==1)g.set(v[0].pageX,v[0].pageY);else{const k=.5*(v[0].pageX+v[1].pageX),re=.5*(v[0].pageY+v[1].pageY);g.set(k,re)}}function E(){const k=v[0].pageX-v[1].pageX,re=v[0].pageY-v[1].pageY,Me=Math.sqrt(k*k+re*re);b.set(0,Me)}function G(){n.enableZoom&&E(),n.enablePan&&L()}function V(){n.enableZoom&&E(),n.enableRotate&&P()}function $(k){if(v.length==1)y.set(k.pageX,k.pageY);else{const Me=Fe(k),W=.5*(k.pageX+Me.x),Ae=.5*(k.pageY+Me.y);y.set(W,Ae)}m.subVectors(y,p).multiplyScalar(n.rotateSpeed);const re=n.domElement;re&&(X(2*Math.PI*m.x/re.clientHeight),Y(2*Math.PI*m.y/re.clientHeight)),p.copy(y)}function H(k){if(v.length==1)M.set(k.pageX,k.pageY);else{const re=Fe(k),Me=.5*(k.pageX+re.x),W=.5*(k.pageY+re.y);M.set(Me,W)}x.subVectors(M,g).multiplyScalar(n.panSpeed),K(x.x,x.y),g.copy(M)}function ee(k){const re=Fe(k),Me=k.pageX-re.x,W=k.pageY-re.y,Ae=Math.sqrt(Me*Me+W*W);C.set(0,Ae),w.set(0,Math.pow(C.y/b.y,n.zoomSpeed)),ge(w.y),b.copy(C)}function Z(k){n.enableZoom&&ee(k),n.enablePan&&H(k)}function J(k){n.enableZoom&&ee(k),n.enableRotate&&$(k)}function pe(k){var re,Me;n.enabled!==!1&&(v.length===0&&((re=n.domElement)==null||re.ownerDocument.addEventListener("pointermove",U),(Me=n.domElement)==null||Me.ownerDocument.addEventListener("pointerup",R)),Le(k),k.pointerType==="touch"?Ce(k):j(k))}function U(k){n.enabled!==!1&&(k.pointerType==="touch"?xe(k):ie(k))}function R(k){var re,Me,W;_e(k),v.length===0&&((re=n.domElement)==null||re.releasePointerCapture(k.pointerId),(Me=n.domElement)==null||Me.ownerDocument.removeEventListener("pointermove",U),(W=n.domElement)==null||W.ownerDocument.removeEventListener("pointerup",R)),n.dispatchEvent(o),l=a.NONE}function j(k){let re;switch(k.button){case 0:re=n.mouseButtons.LEFT;break;case 1:re=n.mouseButtons.MIDDLE;break;case 2:re=n.mouseButtons.RIGHT;break;default:re=-1}switch(re){case _i.DOLLY:if(n.enableZoom===!1)return;ve(k),l=a.DOLLY;break;case _i.ROTATE:if(k.ctrlKey||k.metaKey||k.shiftKey){if(n.enablePan===!1)return;Re(k),l=a.PAN}else{if(n.enableRotate===!1)return;ae(k),l=a.ROTATE}break;case _i.PAN:if(k.ctrlKey||k.metaKey||k.shiftKey){if(n.enableRotate===!1)return;ae(k),l=a.ROTATE}else{if(n.enablePan===!1)return;Re(k),l=a.PAN}break;default:l=a.NONE}l!==a.NONE&&n.dispatchEvent(s)}function ie(k){if(n.enabled!==!1)switch(l){case a.ROTATE:if(n.enableRotate===!1)return;Se(k);break;case a.DOLLY:if(n.enableZoom===!1)return;le(k);break;case a.PAN:if(n.enablePan===!1)return;I(k);break}}function he(k){n.enabled===!1||n.enableZoom===!1||l!==a.NONE&&l!==a.ROTATE||(k.preventDefault(),n.dispatchEvent(s),F(k),n.dispatchEvent(o))}function se(k){n.enabled===!1||n.enablePan===!1||q(k)}function Ce(k){switch(Ue(k),v.length){case 1:switch(n.touches.ONE){case Fi.ROTATE:if(n.enableRotate===!1)return;P(),l=a.TOUCH_ROTATE;break;case Fi.PAN:if(n.enablePan===!1)return;L(),l=a.TOUCH_PAN;break;default:l=a.NONE}break;case 2:switch(n.touches.TWO){case Fi.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;G(),l=a.TOUCH_DOLLY_PAN;break;case Fi.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;V(),l=a.TOUCH_DOLLY_ROTATE;break;default:l=a.NONE}break;default:l=a.NONE}l!==a.NONE&&n.dispatchEvent(s)}function xe(k){switch(Ue(k),l){case a.TOUCH_ROTATE:if(n.enableRotate===!1)return;$(k),n.update();break;case a.TOUCH_PAN:if(n.enablePan===!1)return;H(k),n.update();break;case a.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Z(k),n.update();break;case a.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;J(k),n.update();break;default:l=a.NONE}}function Pe(k){n.enabled!==!1&&k.preventDefault()}function Le(k){v.push(k)}function _e(k){delete A[k.pointerId];for(let re=0;re<v.length;re++)if(v[re].pointerId==k.pointerId){v.splice(re,1);return}}function Ue(k){let re=A[k.pointerId];re===void 0&&(re=new de,A[k.pointerId]=re),re.set(k.pageX,k.pageY)}function Fe(k){const re=k.pointerId===v[0].pointerId?v[1]:v[0];return A[re.pointerId]}this.dollyIn=(k=B())=>{oe(k),n.update()},this.dollyOut=(k=B())=>{ge(k),n.update()},this.getScale=()=>f,this.setScale=k=>{fe(k),n.update()},this.getZoomScale=()=>B(),t!==void 0&&this.connect(t),this.update()}}new Ge;new O;class pv extends Ja{constructor(e,t={}){const{bevelEnabled:n=!1,bevelSize:r=8,bevelThickness:s=10,font:o,height:a=50,size:l=100,lineHeight:c=1,letterSpacing:u=0,...h}=t;if(o===void 0)super();else{const f=o.generateShapes(e,l,{lineHeight:c,letterSpacing:u});super(f,{...h,bevelEnabled:n,bevelSize:r,bevelThickness:s,depth:a})}this.type="TextGeometry"}}new Tn;new O;var m3=Object.defineProperty,g3=(i,e,t)=>e in i?m3(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t,Pp=(i,e,t)=>(g3(i,typeof e!="symbol"?e+"":e,t),t);class v3 extends An{constructor(e){super(e)}load(e,t,n,r){const s=new wi(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,o=>{if(typeof o!="string")throw new Error("unsupported data type");const a=JSON.parse(o),l=this.parse(a);t&&t(l)},n,r)}loadAsync(e,t){return super.loadAsync(e,t)}parse(e){return new Lp(e)}}class Lp{constructor(e){Pp(this,"data"),this.data=e}generateShapes(e,t=100,n){const r=[],s={letterSpacing:0,lineHeight:1,...n},o=_3(e,t,this.data,s);for(let a=0,l=o.length;a<l;a++)Array.prototype.push.apply(r,o[a].toShapes(!1));return r}}Pp(Lp,"isFont");Pp(Lp,"type");function _3(i,e,t,n){const r=Array.from(i),s=e/t.resolution,o=(t.boundingBox.yMax-t.boundingBox.yMin+t.underlineThickness)*s,a=[];let l=0,c=0;for(let u=0;u<r.length;u++){const h=r[u];if(h===`
`)l=0,c-=o*n.lineHeight;else{const f=y3(h,s,l,c,t);f&&(l+=f.offsetX+n.letterSpacing,a.push(f.path))}}return a}function y3(i,e,t,n,r){const s=r.glyphs[i]||r.glyphs["?"];if(!s){console.error('THREE.Font: character "'+i+'" does not exists in font family '+r.familyName+".");return}const o=new Ny;let a,l,c,u,h,f,d,p;if(s.o){const y=s._cachedOutline||(s._cachedOutline=s.o.split(" "));for(let m=0,g=y.length;m<g;)switch(y[m++]){case"m":a=parseInt(y[m++])*e+t,l=parseInt(y[m++])*e+n,o.moveTo(a,l);break;case"l":a=parseInt(y[m++])*e+t,l=parseInt(y[m++])*e+n,o.lineTo(a,l);break;case"q":c=parseInt(y[m++])*e+t,u=parseInt(y[m++])*e+n,h=parseInt(y[m++])*e+t,f=parseInt(y[m++])*e+n,o.quadraticCurveTo(h,f,c,u);break;case"b":c=parseInt(y[m++])*e+t,u=parseInt(y[m++])*e+n,h=parseInt(y[m++])*e+t,f=parseInt(y[m++])*e+n,d=parseInt(y[m++])*e+t,p=parseInt(y[m++])*e+n,o.bezierCurveTo(h,f,d,p,c,u);break}}return{offsetX:s.ha*e,path:o}}new Kt;new O;new rt;new O;new O;new rt;new rt;new rt;new O;new Ge;new Dy;new O;new Kt;new Jt;new rt;Zi.clamp;Zi.lerp;ox({screenspace:!1,color:new Ee("black"),opacity:1,thickness:.05,size:new de(1,1)},`#include <common>
   #include <morphtarget_pars_vertex>
   #include <skinning_pars_vertex>
   uniform float thickness;
   uniform bool screenspace;
   uniform vec2 size;
   void main() {
     #if defined (USE_SKINNING)
       #include <beginnormal_vertex>
       #include <morphnormal_vertex>
       #include <skinbase_vertex>
       #include <skinnormal_vertex>
       #include <defaultnormal_vertex>
     #endif
     #include <begin_vertex>
     #include <morphtarget_vertex>
     #include <skinning_vertex>
     #include <project_vertex>
     vec4 tNormal = vec4(normal, 0.0);
     vec4 tPosition = vec4(transformed, 1.0);
     #ifdef USE_INSTANCING
       tNormal = instanceMatrix * tNormal;
       tPosition = instanceMatrix * tPosition;
     #endif
     if (screenspace) {
       vec3 newPosition = tPosition.xyz + tNormal.xyz * thickness;
       gl_Position = projectionMatrix * modelViewMatrix * vec4(newPosition, 1.0); 
     } else {
       vec4 clipPosition = projectionMatrix * modelViewMatrix * tPosition;
       vec4 clipNormal = projectionMatrix * modelViewMatrix * tNormal;
       vec2 offset = normalize(clipNormal.xy) * thickness / size * clipPosition.w * 2.0;
       clipPosition.xy += offset;
       gl_Position = clipPosition;
     }
   }`,`uniform vec3 color;
   uniform float opacity;
   void main(){
     gl_FragColor = vec4(color, opacity);
     #include <tonemapping_fragment>
     #include <colorspace_fragment>
   }`);const x3=["args","material-uniforms-color-value"];hd.ReflectorShader;const b3=["args","center"],mv=Yi({__name:"Text3D",props:{font:{},text:{},size:{default:.5},height:{default:.2},curveSegments:{default:5},bevelEnabled:{type:Boolean,default:!0},bevelThickness:{default:.05},bevelSize:{default:.02},bevelOffset:{default:0},bevelSegments:{default:4},center:{type:Boolean,default:!1},needUpdates:{type:Boolean,default:!1}},async setup(i,{expose:e}){let t,n;const r=i,{center:s,font:o,text:a,needUpdates:l,size:c,height:u,curveSegments:h,bevelEnabled:f,bevelThickness:d,bevelSize:p,bevelOffset:y,bevelSegments:m}=wo(r),{extend:g,invalidate:M}=Ro();Ft(r,()=>M()),g({TextGeometry:pv});const x=new v3,b=Dd(),C=Pt(()=>{var _;return a!=null&&a.value?a.value:b.default?(_=b.default()[0].children)==null?void 0:_.trim():l.value?"":"TresJS"}),w=ut();e({instance:w});const T=([t,n]=Vb(()=>new Promise((_,v)=>{try{typeof o.value=="string"?x.load(o.value,A=>{_(A)}):_(o.value)}catch(A){v(console.error("cientos",A))}})),t=await t,n(),t),S=Pt(()=>({font:T,size:Et(c),height:Et(u),curveSegments:Et(h),bevelEnabled:Et(f),bevelThickness:Et(d),bevelSize:Et(p),bevelOffset:Et(y),bevelSegments:Et(m)}));return ys(()=>{w.value&&l.value&&(w.value.geometry.dispose(),w.value.geometry=new pv(C.value,S.value),s.value&&w.value.geometry.center())}),(_,v)=>He(o)?(kt(),Nn("TresMesh",{key:0,ref_key:"text3DRef",ref:w},[C.value?(kt(),Nn("TresTextGeometry",{key:0,args:[C.value,S.value],center:He(s)},null,8,b3)):bc("",!0),d0(_.$slots,"default")],512)):bc("",!0)}});new O;new O;new O;var _f;/Mac/.test((_f=globalThis?.navigator)===null||_f===void 0?void 0:_f.platform);const M3=["target","auto-rotate","auto-rotate-speed","enable-damping","damping-factor","enable-pan","key-pan-speed","keys","max-azimuth-angle","min-azimuth-angle","max-polar-angle","min-polar-angle","min-distance","max-distance","min-zoom","max-zoom","touches","enable-zoom","zoom-speed","enable-rotate","rotate-speed","mouse-buttons","args"],S3=Yi({__name:"OrbitControls",props:{makeDefault:{type:Boolean,default:!1},camera:{},domElement:{},target:{default:()=>[0,0,0]},enableDamping:{type:Boolean,default:!0},dampingFactor:{default:.05},autoRotate:{type:Boolean,default:!1},autoRotateSpeed:{default:2},enablePan:{type:Boolean,default:!0},keyPanSpeed:{default:7},keys:{},maxAzimuthAngle:{default:Number.POSITIVE_INFINITY},minAzimuthAngle:{default:Number.NEGATIVE_INFINITY},maxPolarAngle:{default:Math.PI},minPolarAngle:{default:0},minDistance:{default:0},maxDistance:{default:Number.POSITIVE_INFINITY},minZoom:{default:0},maxZoom:{default:Number.POSITIVE_INFINITY},touches:{default:()=>({ONE:Fi.ROTATE,TWO:Fi.DOLLY_PAN})},enableZoom:{type:Boolean,default:!0},zoomSpeed:{default:1},enableRotate:{type:Boolean,default:!0},rotateSpeed:{default:1},mouseButtons:{default:()=>({LEFT:_i.ROTATE,MIDDLE:_i.DOLLY,RIGHT:_i.PAN})}},emits:["change","start","end"],setup(i,{expose:e,emit:t}){const n=i,r=t,{makeDefault:s,autoRotate:o,autoRotateSpeed:a,enableDamping:l,dampingFactor:c,enablePan:u,keyPanSpeed:h,maxAzimuthAngle:f,minAzimuthAngle:d,maxPolarAngle:p,minPolarAngle:y,minDistance:m,maxDistance:g,minZoom:M,maxZoom:x,enableZoom:b,zoomSpeed:C,enableRotate:w,touches:T,rotateSpeed:S,target:_,mouseButtons:v}=wo(n),{camera:A,renderer:D,extend:B,controls:X,invalidate:Y}=Ro(),z=ut(null);B({OrbitControls:p3}),Ft(z,fe=>{Q(),fe&&s.value?X.value=fe:X.value=null});function Q(){df(z.value,"change",()=>{r("change",z.value),Y()}),df(z.value,"start",()=>r("start",z.value)),df(z.value,"end",()=>r("end",z.value))}const{onBeforeRender:K}=Rp();return K(({invalidate:fe})=>{z.value&&(l.value||o.value)&&(z.value.update(),o.value&&fe())}),Si(()=>{z.value&&z.value.dispose()}),e({instance:z}),(fe,ge)=>(fe.camera||He(A))&&(fe.domElement||He(D))?(kt(),Nn("TresOrbitControls",{key:0,ref_key:"controlsRef",ref:z,target:He(_),"auto-rotate":He(o),"auto-rotate-speed":He(a),"enable-damping":He(l),"damping-factor":He(c),"enable-pan":He(u),"key-pan-speed":He(h),keys:fe.keys,"max-azimuth-angle":He(f),"min-azimuth-angle":He(d),"max-polar-angle":He(p),"min-polar-angle":He(y),"min-distance":He(m),"max-distance":He(g),"min-zoom":He(M),"max-zoom":He(x),touches:He(T),"enable-zoom":He(b),"zoom-speed":He(C),"enable-rotate":He(w),"rotate-speed":He(S),"mouse-buttons":He(v),args:[fe.camera||He(A),fe.domElement||He(D).domElement]},null,8,M3)):bc("",!0)}});function oc(i){throw new Error('Could not dynamically require "'+i+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var gv={exports:{}},vv;function w3(){return vv||(vv=1,function(i,e){(function(t){i.exports=t()})(function(){return function t(n,r,s){function o(c,u){if(!r[c]){if(!n[c]){var h=typeof oc=="function"&&oc;if(!u&&h)return h(c,!0);if(a)return a(c,!0);throw new Error("Cannot find module '"+c+"'")}u=r[c]={exports:{}},n[c][0].call(u.exports,function(f){var d=n[c][1][f];return o(d||f)},u,u.exports,t,n,r,s)}return r[c].exports}for(var a=typeof oc=="function"&&oc,l=0;l<s.length;l++)o(s[l]);return o}({1:[function(t,n,r){(function(s,o,a,l,c,u,h,f,d){var p=t("crypto");function y(w,T){T=M(w,T);var S;return(S=T.algorithm!=="passthrough"?p.createHash(T.algorithm):new C).write===void 0&&(S.write=S.update,S.end=S.update),b(T,S).dispatch(w),S.update||S.end(""),S.digest?S.digest(T.encoding==="buffer"?void 0:T.encoding):(w=S.read(),T.encoding!=="buffer"?w.toString(T.encoding):w)}(r=n.exports=y).sha1=function(w){return y(w)},r.keys=function(w){return y(w,{excludeValues:!0,algorithm:"sha1",encoding:"hex"})},r.MD5=function(w){return y(w,{algorithm:"md5",encoding:"hex"})},r.keysMD5=function(w){return y(w,{algorithm:"md5",encoding:"hex",excludeValues:!0})};var m=p.getHashes?p.getHashes().slice():["sha1","md5"],g=(m.push("passthrough"),["buffer","hex","binary","base64"]);function M(w,T){var S={};if(S.algorithm=(T=T||{}).algorithm||"sha1",S.encoding=T.encoding||"hex",S.excludeValues=!!T.excludeValues,S.algorithm=S.algorithm.toLowerCase(),S.encoding=S.encoding.toLowerCase(),S.ignoreUnknown=T.ignoreUnknown===!0,S.respectType=T.respectType!==!1,S.respectFunctionNames=T.respectFunctionNames!==!1,S.respectFunctionProperties=T.respectFunctionProperties!==!1,S.unorderedArrays=T.unorderedArrays===!0,S.unorderedSets=T.unorderedSets!==!1,S.unorderedObjects=T.unorderedObjects!==!1,S.replacer=T.replacer||void 0,S.excludeKeys=T.excludeKeys||void 0,w===void 0)throw new Error("Object argument required.");for(var _=0;_<m.length;++_)m[_].toLowerCase()===S.algorithm.toLowerCase()&&(S.algorithm=m[_]);if(m.indexOf(S.algorithm)===-1)throw new Error('Algorithm "'+S.algorithm+'"  not supported. supported values: '+m.join(", "));if(g.indexOf(S.encoding)===-1&&S.algorithm!=="passthrough")throw new Error('Encoding "'+S.encoding+'"  not supported. supported values: '+g.join(", "));return S}function x(w){if(typeof w=="function")return/^function\s+\w*\s*\(\s*\)\s*{\s+\[native code\]\s+}$/i.exec(Function.prototype.toString.call(w))!=null}function b(w,T,S){S=S||[];function _(v){return T.update?T.update(v,"utf8"):T.write(v,"utf8")}return{dispatch:function(v){return this["_"+((v=w.replacer?w.replacer(v):v)===null?"null":typeof v)](v)},_object:function(v){var A,D=Object.prototype.toString.call(v),B=/\[object (.*)\]/i.exec(D);if(B=(B=B?B[1]:"unknown:["+D+"]").toLowerCase(),0<=(D=S.indexOf(v)))return this.dispatch("[CIRCULAR:"+D+"]");if(S.push(v),a!==void 0&&a.isBuffer&&a.isBuffer(v))return _("buffer:"),_(v);if(B==="object"||B==="function"||B==="asyncfunction")return D=Object.keys(v),w.unorderedObjects&&(D=D.sort()),w.respectType===!1||x(v)||D.splice(0,0,"prototype","__proto__","constructor"),w.excludeKeys&&(D=D.filter(function(X){return!w.excludeKeys(X)})),_("object:"+D.length+":"),A=this,D.forEach(function(X){A.dispatch(X),_(":"),w.excludeValues||A.dispatch(v[X]),_(",")});if(!this["_"+B]){if(w.ignoreUnknown)return _("["+B+"]");throw new Error('Unknown object type "'+B+'"')}this["_"+B](v)},_array:function(v,X){X=X!==void 0?X:w.unorderedArrays!==!1;var D=this;if(_("array:"+v.length+":"),!X||v.length<=1)return v.forEach(function(Y){return D.dispatch(Y)});var B=[],X=v.map(function(Y){var z=new C,Q=S.slice();return b(w,z,Q).dispatch(Y),B=B.concat(Q.slice(S.length)),z.read().toString()});return S=S.concat(B),X.sort(),this._array(X,!1)},_date:function(v){return _("date:"+v.toJSON())},_symbol:function(v){return _("symbol:"+v.toString())},_error:function(v){return _("error:"+v.toString())},_boolean:function(v){return _("bool:"+v.toString())},_string:function(v){_("string:"+v.length+":"),_(v.toString())},_function:function(v){_("fn:"),x(v)?this.dispatch("[native]"):this.dispatch(v.toString()),w.respectFunctionNames!==!1&&this.dispatch("function-name:"+String(v.name)),w.respectFunctionProperties&&this._object(v)},_number:function(v){return _("number:"+v.toString())},_xml:function(v){return _("xml:"+v.toString())},_null:function(){return _("Null")},_undefined:function(){return _("Undefined")},_regexp:function(v){return _("regex:"+v.toString())},_uint8array:function(v){return _("uint8array:"),this.dispatch(Array.prototype.slice.call(v))},_uint8clampedarray:function(v){return _("uint8clampedarray:"),this.dispatch(Array.prototype.slice.call(v))},_int8array:function(v){return _("int8array:"),this.dispatch(Array.prototype.slice.call(v))},_uint16array:function(v){return _("uint16array:"),this.dispatch(Array.prototype.slice.call(v))},_int16array:function(v){return _("int16array:"),this.dispatch(Array.prototype.slice.call(v))},_uint32array:function(v){return _("uint32array:"),this.dispatch(Array.prototype.slice.call(v))},_int32array:function(v){return _("int32array:"),this.dispatch(Array.prototype.slice.call(v))},_float32array:function(v){return _("float32array:"),this.dispatch(Array.prototype.slice.call(v))},_float64array:function(v){return _("float64array:"),this.dispatch(Array.prototype.slice.call(v))},_arraybuffer:function(v){return _("arraybuffer:"),this.dispatch(new Uint8Array(v))},_url:function(v){return _("url:"+v.toString())},_map:function(v){return _("map:"),v=Array.from(v),this._array(v,w.unorderedSets!==!1)},_set:function(v){return _("set:"),v=Array.from(v),this._array(v,w.unorderedSets!==!1)},_file:function(v){return _("file:"),this.dispatch([v.name,v.size,v.type,v.lastModfied])},_blob:function(){if(w.ignoreUnknown)return _("[blob]");throw Error(`Hashing Blob objects is currently not supported
(see https://github.com/puleos/object-hash/issues/26)
Use "options.replacer" or "options.ignoreUnknown"
`)},_domwindow:function(){return _("domwindow")},_bigint:function(v){return _("bigint:"+v.toString())},_process:function(){return _("process")},_timer:function(){return _("timer")},_pipe:function(){return _("pipe")},_tcp:function(){return _("tcp")},_udp:function(){return _("udp")},_tty:function(){return _("tty")},_statwatcher:function(){return _("statwatcher")},_securecontext:function(){return _("securecontext")},_connection:function(){return _("connection")},_zlib:function(){return _("zlib")},_context:function(){return _("context")},_nodescript:function(){return _("nodescript")},_httpparser:function(){return _("httpparser")},_dataview:function(){return _("dataview")},_signal:function(){return _("signal")},_fsevent:function(){return _("fsevent")},_tlswrap:function(){return _("tlswrap")}}}function C(){return{buf:"",write:function(w){this.buf+=w},end:function(w){this.buf+=w},read:function(){return this.buf}}}r.writeToStream=function(w,T,S){return S===void 0&&(S=T,T={}),b(T=M(w,T),S).dispatch(w)}}).call(this,t("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},t("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/fake_9a5aa49d.js","/")},{buffer:3,crypto:5,lYpoI2:11}],2:[function(t,n,r){(function(s,o,a,l,c,u,h,f,d){(function(p){var y=typeof Uint8Array<"u"?Uint8Array:Array,m=43,g=47,M=48,x=97,b=65,C=45,w=95;function T(S){return S=S.charCodeAt(0),S===m||S===C?62:S===g||S===w?63:S<M?-1:S<M+10?S-M+26+26:S<b+26?S-b:S<x+26?S-x+26:void 0}p.toByteArray=function(S){var _,v;if(0<S.length%4)throw new Error("Invalid string. Length must be a multiple of 4");var A=S.length,A=S.charAt(A-2)==="="?2:S.charAt(A-1)==="="?1:0,D=new y(3*S.length/4-A),B=0<A?S.length-4:S.length,X=0;function Y(z){D[X++]=z}for(_=0;_<B;_+=4,0)Y((16711680&(v=T(S.charAt(_))<<18|T(S.charAt(_+1))<<12|T(S.charAt(_+2))<<6|T(S.charAt(_+3))))>>16),Y((65280&v)>>8),Y(255&v);return A==2?Y(255&(v=T(S.charAt(_))<<2|T(S.charAt(_+1))>>4)):A==1&&(Y((v=T(S.charAt(_))<<10|T(S.charAt(_+1))<<4|T(S.charAt(_+2))>>2)>>8&255),Y(255&v)),D},p.fromByteArray=function(S){var _,v,A,D,B=S.length%3,X="";function Y(z){return"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(z)}for(_=0,A=S.length-B;_<A;_+=3)v=(S[_]<<16)+(S[_+1]<<8)+S[_+2],X+=Y((D=v)>>18&63)+Y(D>>12&63)+Y(D>>6&63)+Y(63&D);switch(B){case 1:X=(X+=Y((v=S[S.length-1])>>2))+Y(v<<4&63)+"==";break;case 2:X=(X=(X+=Y((v=(S[S.length-2]<<8)+S[S.length-1])>>10))+Y(v>>4&63))+Y(v<<2&63)+"="}return X}})(r===void 0?this.base64js={}:r)}).call(this,t("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},t("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/base64-js/lib/b64.js","/node_modules/gulp-browserify/node_modules/base64-js/lib")},{buffer:3,lYpoI2:11}],3:[function(t,n,r){(function(s,o,m,l,c,u,h,f,d){var p=t("base64-js"),y=t("ieee754");function m(I,F,q){if(!(this instanceof m))return new m(I,F,q);var P,L,E,G,V=typeof I;if(F==="base64"&&V=="string")for(I=(G=I).trim?G.trim():G.replace(/^\s+|\s+$/g,"");I.length%4!=0;)I+="=";if(V=="number")P=K(I);else if(V=="string")P=m.byteLength(I,F);else{if(V!="object")throw new Error("First argument needs to be a number, array or string.");P=K(I.length)}if(m._useTypedArrays?L=m._augment(new Uint8Array(P)):((L=this).length=P,L._isBuffer=!0),m._useTypedArrays&&typeof I.byteLength=="number")L._set(I);else if(fe(G=I)||m.isBuffer(G)||G&&typeof G=="object"&&typeof G.length=="number")for(E=0;E<P;E++)m.isBuffer(I)?L[E]=I.readUInt8(E):L[E]=I[E];else if(V=="string")L.write(I,0,F);else if(V=="number"&&!m._useTypedArrays&&!q)for(E=0;E<P;E++)L[E]=0;return L}function g(I,F,q,P){return m._charsWritten=ke(function(L){for(var E=[],G=0;G<L.length;G++)E.push(255&L.charCodeAt(G));return E}(F),I,q,P)}function M(I,F,q,P){return m._charsWritten=ke(function(L){for(var E,G,V=[],$=0;$<L.length;$++)G=L.charCodeAt($),E=G>>8,G=G%256,V.push(G),V.push(E);return V}(F),I,q,P)}function x(I,F,q){var P="";q=Math.min(I.length,q);for(var L=F;L<q;L++)P+=String.fromCharCode(I[L]);return P}function b(I,F,q,E){E||(le(typeof q=="boolean","missing or invalid endian"),le(F!=null,"missing offset"),le(F+1<I.length,"Trying to read beyond buffer length"));var L,E=I.length;if(!(E<=F))return q?(L=I[F],F+1<E&&(L|=I[F+1]<<8)):(L=I[F]<<8,F+1<E&&(L|=I[F+1])),L}function C(I,F,q,E){E||(le(typeof q=="boolean","missing or invalid endian"),le(F!=null,"missing offset"),le(F+3<I.length,"Trying to read beyond buffer length"));var L,E=I.length;if(!(E<=F))return q?(F+2<E&&(L=I[F+2]<<16),F+1<E&&(L|=I[F+1]<<8),L|=I[F],F+3<E&&(L+=I[F+3]<<24>>>0)):(F+1<E&&(L=I[F+1]<<16),F+2<E&&(L|=I[F+2]<<8),F+3<E&&(L|=I[F+3]),L+=I[F]<<24>>>0),L}function w(I,F,q,P){if(P||(le(typeof q=="boolean","missing or invalid endian"),le(F!=null,"missing offset"),le(F+1<I.length,"Trying to read beyond buffer length")),!(I.length<=F))return P=b(I,F,q,!0),32768&P?-1*(65535-P+1):P}function T(I,F,q,P){if(P||(le(typeof q=="boolean","missing or invalid endian"),le(F!=null,"missing offset"),le(F+3<I.length,"Trying to read beyond buffer length")),!(I.length<=F))return P=C(I,F,q,!0),2147483648&P?-1*(4294967295-P+1):P}function S(I,F,q,P){return P||(le(typeof q=="boolean","missing or invalid endian"),le(F+3<I.length,"Trying to read beyond buffer length")),y.read(I,F,q,23,4)}function _(I,F,q,P){return P||(le(typeof q=="boolean","missing or invalid endian"),le(F+7<I.length,"Trying to read beyond buffer length")),y.read(I,F,q,52,8)}function v(I,F,q,P,L){if(L||(le(F!=null,"missing value"),le(typeof P=="boolean","missing or invalid endian"),le(q!=null,"missing offset"),le(q+1<I.length,"trying to write beyond buffer length"),ve(F,65535)),L=I.length,!(L<=q))for(var E=0,G=Math.min(L-q,2);E<G;E++)I[q+E]=(F&255<<8*(P?E:1-E))>>>8*(P?E:1-E)}function A(I,F,q,P,L){if(L||(le(F!=null,"missing value"),le(typeof P=="boolean","missing or invalid endian"),le(q!=null,"missing offset"),le(q+3<I.length,"trying to write beyond buffer length"),ve(F,4294967295)),L=I.length,!(L<=q))for(var E=0,G=Math.min(L-q,4);E<G;E++)I[q+E]=F>>>8*(P?E:3-E)&255}function D(I,F,q,P,L){L||(le(F!=null,"missing value"),le(typeof P=="boolean","missing or invalid endian"),le(q!=null,"missing offset"),le(q+1<I.length,"Trying to write beyond buffer length"),Re(F,32767,-32768)),I.length<=q||v(I,0<=F?F:65535+F+1,q,P,L)}function B(I,F,q,P,L){L||(le(F!=null,"missing value"),le(typeof P=="boolean","missing or invalid endian"),le(q!=null,"missing offset"),le(q+3<I.length,"Trying to write beyond buffer length"),Re(F,2147483647,-2147483648)),I.length<=q||A(I,0<=F?F:4294967295+F+1,q,P,L)}function X(I,F,q,P,L){L||(le(F!=null,"missing value"),le(typeof P=="boolean","missing or invalid endian"),le(q!=null,"missing offset"),le(q+3<I.length,"Trying to write beyond buffer length"),Se(F,34028234663852886e22,-34028234663852886e22)),I.length<=q||y.write(I,F,q,P,23,4)}function Y(I,F,q,P,L){L||(le(F!=null,"missing value"),le(typeof P=="boolean","missing or invalid endian"),le(q!=null,"missing offset"),le(q+7<I.length,"Trying to write beyond buffer length"),Se(F,17976931348623157e292,-17976931348623157e292)),I.length<=q||y.write(I,F,q,P,52,8)}r.Buffer=m,r.SlowBuffer=m,r.INSPECT_MAX_BYTES=50,m.poolSize=8192,m._useTypedArrays=function(){try{var I=new ArrayBuffer(0),F=new Uint8Array(I);return F.foo=function(){return 42},F.foo()===42&&typeof F.subarray=="function"}catch{return!1}}(),m.isEncoding=function(I){switch(String(I).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"raw":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},m.isBuffer=function(I){return!(I==null||!I._isBuffer)},m.byteLength=function(I,F){var q;switch(I+="",F||"utf8"){case"hex":q=I.length/2;break;case"utf8":case"utf-8":q=oe(I).length;break;case"ascii":case"binary":case"raw":q=I.length;break;case"base64":q=Te(I).length;break;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":q=2*I.length;break;default:throw new Error("Unknown encoding")}return q},m.concat=function(I,F){if(le(fe(I),`Usage: Buffer.concat(list, [totalLength])
list should be an Array.`),I.length===0)return new m(0);if(I.length===1)return I[0];if(typeof F!="number")for(L=F=0;L<I.length;L++)F+=I[L].length;for(var q=new m(F),P=0,L=0;L<I.length;L++){var E=I[L];E.copy(q,P),P+=E.length}return q},m.prototype.write=function(I,F,q,P){isFinite(F)?isFinite(q)||(P=q,q=void 0):($=P,P=F,F=q,q=$),F=Number(F)||0;var L,E,G,V,$=this.length-F;switch((!q||$<(q=Number(q)))&&(q=$),P=String(P||"utf8").toLowerCase()){case"hex":L=function(H,ee,Z,J){Z=Number(Z)||0;var pe=H.length-Z;(!J||pe<(J=Number(J)))&&(J=pe),le((pe=ee.length)%2==0,"Invalid hex string"),pe/2<J&&(J=pe/2);for(var U=0;U<J;U++){var R=parseInt(ee.substr(2*U,2),16);le(!isNaN(R),"Invalid hex string"),H[Z+U]=R}return m._charsWritten=2*U,U}(this,I,F,q);break;case"utf8":case"utf-8":E=this,G=F,V=q,L=m._charsWritten=ke(oe(I),E,G,V);break;case"ascii":case"binary":L=g(this,I,F,q);break;case"base64":E=this,G=F,V=q,L=m._charsWritten=ke(Te(I),E,G,V);break;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":L=M(this,I,F,q);break;default:throw new Error("Unknown encoding")}return L},m.prototype.toString=function(I,F,q){var P,L,E,G,V=this;if(I=String(I||"utf8").toLowerCase(),F=Number(F)||0,(q=q!==void 0?Number(q):V.length)===F)return"";switch(I){case"hex":P=function($,H,ee){var Z=$.length;(!H||H<0)&&(H=0),(!ee||ee<0||Z<ee)&&(ee=Z);for(var J="",pe=H;pe<ee;pe++)J+=ge($[pe]);return J}(V,F,q);break;case"utf8":case"utf-8":P=function($,H,ee){var Z="",J="";ee=Math.min($.length,ee);for(var pe=H;pe<ee;pe++)$[pe]<=127?(Z+=ae(J)+String.fromCharCode($[pe]),J=""):J+="%"+$[pe].toString(16);return Z+ae(J)}(V,F,q);break;case"ascii":case"binary":P=x(V,F,q);break;case"base64":L=V,G=q,P=(E=F)===0&&G===L.length?p.fromByteArray(L):p.fromByteArray(L.slice(E,G));break;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":P=function($,H,ee){for(var Z=$.slice(H,ee),J="",pe=0;pe<Z.length;pe+=2)J+=String.fromCharCode(Z[pe]+256*Z[pe+1]);return J}(V,F,q);break;default:throw new Error("Unknown encoding")}return P},m.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}},m.prototype.copy=function(I,F,q,P){if(F=F||0,(P=P||P===0?P:this.length)!==(q=q||0)&&I.length!==0&&this.length!==0){le(q<=P,"sourceEnd < sourceStart"),le(0<=F&&F<I.length,"targetStart out of bounds"),le(0<=q&&q<this.length,"sourceStart out of bounds"),le(0<=P&&P<=this.length,"sourceEnd out of bounds"),P>this.length&&(P=this.length);var L=(P=I.length-F<P-q?I.length-F+q:P)-q;if(L<100||!m._useTypedArrays)for(var E=0;E<L;E++)I[E+F]=this[E+q];else I._set(this.subarray(q,q+L),F)}},m.prototype.slice=function(I,F){var q=this.length;if(I=Q(I,q,0),F=Q(F,q,q),m._useTypedArrays)return m._augment(this.subarray(I,F));for(var P=F-I,L=new m(P,void 0,!0),E=0;E<P;E++)L[E]=this[E+I];return L},m.prototype.get=function(I){return console.log(".get() is deprecated. Access using array indexes instead."),this.readUInt8(I)},m.prototype.set=function(I,F){return console.log(".set() is deprecated. Access using array indexes instead."),this.writeUInt8(I,F)},m.prototype.readUInt8=function(I,F){if(F||(le(I!=null,"missing offset"),le(I<this.length,"Trying to read beyond buffer length")),!(I>=this.length))return this[I]},m.prototype.readUInt16LE=function(I,F){return b(this,I,!0,F)},m.prototype.readUInt16BE=function(I,F){return b(this,I,!1,F)},m.prototype.readUInt32LE=function(I,F){return C(this,I,!0,F)},m.prototype.readUInt32BE=function(I,F){return C(this,I,!1,F)},m.prototype.readInt8=function(I,F){if(F||(le(I!=null,"missing offset"),le(I<this.length,"Trying to read beyond buffer length")),!(I>=this.length))return 128&this[I]?-1*(255-this[I]+1):this[I]},m.prototype.readInt16LE=function(I,F){return w(this,I,!0,F)},m.prototype.readInt16BE=function(I,F){return w(this,I,!1,F)},m.prototype.readInt32LE=function(I,F){return T(this,I,!0,F)},m.prototype.readInt32BE=function(I,F){return T(this,I,!1,F)},m.prototype.readFloatLE=function(I,F){return S(this,I,!0,F)},m.prototype.readFloatBE=function(I,F){return S(this,I,!1,F)},m.prototype.readDoubleLE=function(I,F){return _(this,I,!0,F)},m.prototype.readDoubleBE=function(I,F){return _(this,I,!1,F)},m.prototype.writeUInt8=function(I,F,q){q||(le(I!=null,"missing value"),le(F!=null,"missing offset"),le(F<this.length,"trying to write beyond buffer length"),ve(I,255)),F>=this.length||(this[F]=I)},m.prototype.writeUInt16LE=function(I,F,q){v(this,I,F,!0,q)},m.prototype.writeUInt16BE=function(I,F,q){v(this,I,F,!1,q)},m.prototype.writeUInt32LE=function(I,F,q){A(this,I,F,!0,q)},m.prototype.writeUInt32BE=function(I,F,q){A(this,I,F,!1,q)},m.prototype.writeInt8=function(I,F,q){q||(le(I!=null,"missing value"),le(F!=null,"missing offset"),le(F<this.length,"Trying to write beyond buffer length"),Re(I,127,-128)),F>=this.length||(0<=I?this.writeUInt8(I,F,q):this.writeUInt8(255+I+1,F,q))},m.prototype.writeInt16LE=function(I,F,q){D(this,I,F,!0,q)},m.prototype.writeInt16BE=function(I,F,q){D(this,I,F,!1,q)},m.prototype.writeInt32LE=function(I,F,q){B(this,I,F,!0,q)},m.prototype.writeInt32BE=function(I,F,q){B(this,I,F,!1,q)},m.prototype.writeFloatLE=function(I,F,q){X(this,I,F,!0,q)},m.prototype.writeFloatBE=function(I,F,q){X(this,I,F,!1,q)},m.prototype.writeDoubleLE=function(I,F,q){Y(this,I,F,!0,q)},m.prototype.writeDoubleBE=function(I,F,q){Y(this,I,F,!1,q)},m.prototype.fill=function(I,F,q){if(F=F||0,q=q||this.length,le(typeof(I=typeof(I=I||0)=="string"?I.charCodeAt(0):I)=="number"&&!isNaN(I),"value is not a number"),le(F<=q,"end < start"),q!==F&&this.length!==0){le(0<=F&&F<this.length,"start out of bounds"),le(0<=q&&q<=this.length,"end out of bounds");for(var P=F;P<q;P++)this[P]=I}},m.prototype.inspect=function(){for(var I=[],F=this.length,q=0;q<F;q++)if(I[q]=ge(this[q]),q===r.INSPECT_MAX_BYTES){I[q+1]="...";break}return"<Buffer "+I.join(" ")+">"},m.prototype.toArrayBuffer=function(){if(typeof Uint8Array>"u")throw new Error("Buffer.toArrayBuffer not supported in this browser");if(m._useTypedArrays)return new m(this).buffer;for(var I=new Uint8Array(this.length),F=0,q=I.length;F<q;F+=1)I[F]=this[F];return I.buffer};var z=m.prototype;function Q(I,F,q){return typeof I!="number"?q:F<=(I=~~I)?F:0<=I||0<=(I+=F)?I:0}function K(I){return(I=~~Math.ceil(+I))<0?0:I}function fe(I){return(Array.isArray||function(F){return Object.prototype.toString.call(F)==="[object Array]"})(I)}function ge(I){return I<16?"0"+I.toString(16):I.toString(16)}function oe(I){for(var F=[],q=0;q<I.length;q++){var P=I.charCodeAt(q);if(P<=127)F.push(I.charCodeAt(q));else for(var L=q,E=(55296<=P&&P<=57343&&q++,encodeURIComponent(I.slice(L,q+1)).substr(1).split("%")),G=0;G<E.length;G++)F.push(parseInt(E[G],16))}return F}function Te(I){return p.toByteArray(I)}function ke(I,F,q,P){for(var L=0;L<P&&!(L+q>=F.length||L>=I.length);L++)F[L+q]=I[L];return L}function ae(I){try{return decodeURIComponent(I)}catch{return"�"}}function ve(I,F){le(typeof I=="number","cannot write a non-number as a number"),le(0<=I,"specified a negative value for writing an unsigned value"),le(I<=F,"value is larger than maximum value for type"),le(Math.floor(I)===I,"value has a fractional component")}function Re(I,F,q){le(typeof I=="number","cannot write a non-number as a number"),le(I<=F,"value larger than maximum allowed value"),le(q<=I,"value smaller than minimum allowed value"),le(Math.floor(I)===I,"value has a fractional component")}function Se(I,F,q){le(typeof I=="number","cannot write a non-number as a number"),le(I<=F,"value larger than maximum allowed value"),le(q<=I,"value smaller than minimum allowed value")}function le(I,F){if(!I)throw new Error(F||"Failed assertion")}m._augment=function(I){return I._isBuffer=!0,I._get=I.get,I._set=I.set,I.get=z.get,I.set=z.set,I.write=z.write,I.toString=z.toString,I.toLocaleString=z.toString,I.toJSON=z.toJSON,I.copy=z.copy,I.slice=z.slice,I.readUInt8=z.readUInt8,I.readUInt16LE=z.readUInt16LE,I.readUInt16BE=z.readUInt16BE,I.readUInt32LE=z.readUInt32LE,I.readUInt32BE=z.readUInt32BE,I.readInt8=z.readInt8,I.readInt16LE=z.readInt16LE,I.readInt16BE=z.readInt16BE,I.readInt32LE=z.readInt32LE,I.readInt32BE=z.readInt32BE,I.readFloatLE=z.readFloatLE,I.readFloatBE=z.readFloatBE,I.readDoubleLE=z.readDoubleLE,I.readDoubleBE=z.readDoubleBE,I.writeUInt8=z.writeUInt8,I.writeUInt16LE=z.writeUInt16LE,I.writeUInt16BE=z.writeUInt16BE,I.writeUInt32LE=z.writeUInt32LE,I.writeUInt32BE=z.writeUInt32BE,I.writeInt8=z.writeInt8,I.writeInt16LE=z.writeInt16LE,I.writeInt16BE=z.writeInt16BE,I.writeInt32LE=z.writeInt32LE,I.writeInt32BE=z.writeInt32BE,I.writeFloatLE=z.writeFloatLE,I.writeFloatBE=z.writeFloatBE,I.writeDoubleLE=z.writeDoubleLE,I.writeDoubleBE=z.writeDoubleBE,I.fill=z.fill,I.inspect=z.inspect,I.toArrayBuffer=z.toArrayBuffer,I}}).call(this,t("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},t("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/buffer/index.js","/node_modules/gulp-browserify/node_modules/buffer")},{"base64-js":2,buffer:3,ieee754:10,lYpoI2:11}],4:[function(t,n,r){(function(s,o,p,l,c,u,h,f,d){var p=t("buffer").Buffer,y=4,m=new p(y);m.fill(0),n.exports={hash:function(g,M,x,b){for(var C=M(function(v,A){v.length%y!=0&&(D=v.length+(y-v.length%y),v=p.concat([v,m],D));for(var D,B=[],X=A?v.readInt32BE:v.readInt32LE,Y=0;Y<v.length;Y+=y)B.push(X.call(v,Y));return B}(g=p.isBuffer(g)?g:new p(g),b),8*g.length),M=b,w=new p(x),T=M?w.writeInt32BE:w.writeInt32LE,S=0;S<C.length;S++)T.call(w,C[S],4*S,!0);return w}}}).call(this,t("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},t("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/crypto-browserify/helpers.js","/node_modules/gulp-browserify/node_modules/crypto-browserify")},{buffer:3,lYpoI2:11}],5:[function(t,n,r){(function(s,o,p,l,c,u,h,f,d){var p=t("buffer").Buffer,y=t("./sha"),m=t("./sha256"),g=t("./rng"),M={sha1:y,sha256:m,md5:t("./md5")},x=64,b=new p(x);function C(v,A){var D=M[v=v||"sha1"],B=[];return D||w("algorithm:",v,"is not yet supported"),{update:function(X){return p.isBuffer(X)||(X=new p(X)),B.push(X),X.length,this},digest:function(X){var Y=p.concat(B),Y=A?function(z,Q,K){p.isBuffer(Q)||(Q=new p(Q)),p.isBuffer(K)||(K=new p(K)),Q.length>x?Q=z(Q):Q.length<x&&(Q=p.concat([Q,b],x));for(var fe=new p(x),ge=new p(x),oe=0;oe<x;oe++)fe[oe]=54^Q[oe],ge[oe]=92^Q[oe];return K=z(p.concat([fe,K])),z(p.concat([ge,K]))}(D,A,Y):D(Y);return B=null,X?Y.toString(X):Y}}}function w(){var v=[].slice.call(arguments).join(" ");throw new Error([v,"we accept pull requests","http://github.com/dominictarr/crypto-browserify"].join(`
`))}b.fill(0),r.createHash=function(v){return C(v)},r.createHmac=C,r.randomBytes=function(v,A){if(!A||!A.call)return new p(g(v));try{A.call(this,void 0,new p(g(v)))}catch(D){A(D)}};var T,S=["createCredentials","createCipher","createCipheriv","createDecipher","createDecipheriv","createSign","createVerify","createDiffieHellman","pbkdf2"],_=function(v){r[v]=function(){w("sorry,",v,"is not implemented yet")}};for(T in S)_(S[T])}).call(this,t("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},t("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/crypto-browserify/index.js","/node_modules/gulp-browserify/node_modules/crypto-browserify")},{"./md5":6,"./rng":7,"./sha":8,"./sha256":9,buffer:3,lYpoI2:11}],6:[function(t,n,r){(function(s,o,a,l,c,u,h,f,d){var p=t("./helpers");function y(w,T){w[T>>5]|=128<<T%32,w[14+(T+64>>>9<<4)]=T;for(var S=1732584193,_=-271733879,v=-1732584194,A=271733878,D=0;D<w.length;D+=16){var B=S,X=_,Y=v,z=A,S=g(S,_,v,A,w[D+0],7,-680876936),A=g(A,S,_,v,w[D+1],12,-389564586),v=g(v,A,S,_,w[D+2],17,606105819),_=g(_,v,A,S,w[D+3],22,-1044525330);S=g(S,_,v,A,w[D+4],7,-176418897),A=g(A,S,_,v,w[D+5],12,1200080426),v=g(v,A,S,_,w[D+6],17,-1473231341),_=g(_,v,A,S,w[D+7],22,-45705983),S=g(S,_,v,A,w[D+8],7,1770035416),A=g(A,S,_,v,w[D+9],12,-1958414417),v=g(v,A,S,_,w[D+10],17,-42063),_=g(_,v,A,S,w[D+11],22,-1990404162),S=g(S,_,v,A,w[D+12],7,1804603682),A=g(A,S,_,v,w[D+13],12,-40341101),v=g(v,A,S,_,w[D+14],17,-1502002290),S=M(S,_=g(_,v,A,S,w[D+15],22,1236535329),v,A,w[D+1],5,-165796510),A=M(A,S,_,v,w[D+6],9,-1069501632),v=M(v,A,S,_,w[D+11],14,643717713),_=M(_,v,A,S,w[D+0],20,-373897302),S=M(S,_,v,A,w[D+5],5,-701558691),A=M(A,S,_,v,w[D+10],9,38016083),v=M(v,A,S,_,w[D+15],14,-660478335),_=M(_,v,A,S,w[D+4],20,-405537848),S=M(S,_,v,A,w[D+9],5,568446438),A=M(A,S,_,v,w[D+14],9,-1019803690),v=M(v,A,S,_,w[D+3],14,-187363961),_=M(_,v,A,S,w[D+8],20,1163531501),S=M(S,_,v,A,w[D+13],5,-1444681467),A=M(A,S,_,v,w[D+2],9,-51403784),v=M(v,A,S,_,w[D+7],14,1735328473),S=x(S,_=M(_,v,A,S,w[D+12],20,-1926607734),v,A,w[D+5],4,-378558),A=x(A,S,_,v,w[D+8],11,-2022574463),v=x(v,A,S,_,w[D+11],16,1839030562),_=x(_,v,A,S,w[D+14],23,-35309556),S=x(S,_,v,A,w[D+1],4,-1530992060),A=x(A,S,_,v,w[D+4],11,1272893353),v=x(v,A,S,_,w[D+7],16,-155497632),_=x(_,v,A,S,w[D+10],23,-1094730640),S=x(S,_,v,A,w[D+13],4,681279174),A=x(A,S,_,v,w[D+0],11,-358537222),v=x(v,A,S,_,w[D+3],16,-722521979),_=x(_,v,A,S,w[D+6],23,76029189),S=x(S,_,v,A,w[D+9],4,-640364487),A=x(A,S,_,v,w[D+12],11,-421815835),v=x(v,A,S,_,w[D+15],16,530742520),S=b(S,_=x(_,v,A,S,w[D+2],23,-995338651),v,A,w[D+0],6,-198630844),A=b(A,S,_,v,w[D+7],10,1126891415),v=b(v,A,S,_,w[D+14],15,-1416354905),_=b(_,v,A,S,w[D+5],21,-57434055),S=b(S,_,v,A,w[D+12],6,1700485571),A=b(A,S,_,v,w[D+3],10,-1894986606),v=b(v,A,S,_,w[D+10],15,-1051523),_=b(_,v,A,S,w[D+1],21,-2054922799),S=b(S,_,v,A,w[D+8],6,1873313359),A=b(A,S,_,v,w[D+15],10,-30611744),v=b(v,A,S,_,w[D+6],15,-1560198380),_=b(_,v,A,S,w[D+13],21,1309151649),S=b(S,_,v,A,w[D+4],6,-145523070),A=b(A,S,_,v,w[D+11],10,-1120210379),v=b(v,A,S,_,w[D+2],15,718787259),_=b(_,v,A,S,w[D+9],21,-343485551),S=C(S,B),_=C(_,X),v=C(v,Y),A=C(A,z)}return Array(S,_,v,A)}function m(w,T,S,_,v,A){return C((T=C(C(T,w),C(_,A)))<<v|T>>>32-v,S)}function g(w,T,S,_,v,A,D){return m(T&S|~T&_,w,T,v,A,D)}function M(w,T,S,_,v,A,D){return m(T&_|S&~_,w,T,v,A,D)}function x(w,T,S,_,v,A,D){return m(T^S^_,w,T,v,A,D)}function b(w,T,S,_,v,A,D){return m(S^(T|~_),w,T,v,A,D)}function C(w,T){var S=(65535&w)+(65535&T);return(w>>16)+(T>>16)+(S>>16)<<16|65535&S}n.exports=function(w){return p.hash(w,y,16)}}).call(this,t("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},t("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/crypto-browserify/md5.js","/node_modules/gulp-browserify/node_modules/crypto-browserify")},{"./helpers":4,buffer:3,lYpoI2:11}],7:[function(t,n,r){(function(s,o,a,l,c,u,h,f,d){n.exports=function(p){for(var y,m=new Array(p),g=0;g<p;g++)!(3&g)&&(y=4294967296*Math.random()),m[g]=y>>>((3&g)<<3)&255;return m}}).call(this,t("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},t("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/crypto-browserify/rng.js","/node_modules/gulp-browserify/node_modules/crypto-browserify")},{buffer:3,lYpoI2:11}],8:[function(t,n,r){(function(s,o,a,l,c,u,h,f,d){var p=t("./helpers");function y(M,x){M[x>>5]|=128<<24-x%32,M[15+(x+64>>9<<4)]=x;for(var b,C,w,T=Array(80),S=1732584193,_=-271733879,v=-1732584194,A=271733878,D=-1009589776,B=0;B<M.length;B+=16){for(var X=S,Y=_,z=v,Q=A,K=D,fe=0;fe<80;fe++){T[fe]=fe<16?M[B+fe]:g(T[fe-3]^T[fe-8]^T[fe-14]^T[fe-16],1);var ge=m(m(g(S,5),(ge=_,C=v,w=A,(b=fe)<20?ge&C|~ge&w:!(b<40)&&b<60?ge&C|ge&w|C&w:ge^C^w)),m(m(D,T[fe]),(b=fe)<20?1518500249:b<40?1859775393:b<60?-1894007588:-899497514)),D=A,A=v,v=g(_,30),_=S,S=ge}S=m(S,X),_=m(_,Y),v=m(v,z),A=m(A,Q),D=m(D,K)}return Array(S,_,v,A,D)}function m(M,x){var b=(65535&M)+(65535&x);return(M>>16)+(x>>16)+(b>>16)<<16|65535&b}function g(M,x){return M<<x|M>>>32-x}n.exports=function(M){return p.hash(M,y,20,!0)}}).call(this,t("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},t("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/crypto-browserify/sha.js","/node_modules/gulp-browserify/node_modules/crypto-browserify")},{"./helpers":4,buffer:3,lYpoI2:11}],9:[function(t,n,r){(function(s,o,a,l,c,u,h,f,d){function p(x,b){var C=(65535&x)+(65535&b);return(x>>16)+(b>>16)+(C>>16)<<16|65535&C}function y(x,b){var C,w=new Array(1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298),T=new Array(1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225),S=new Array(64);x[b>>5]|=128<<24-b%32,x[15+(b+64>>9<<4)]=b;for(var _,v,A=0;A<x.length;A+=16){for(var D=T[0],B=T[1],X=T[2],Y=T[3],z=T[4],Q=T[5],K=T[6],fe=T[7],ge=0;ge<64;ge++)S[ge]=ge<16?x[ge+A]:p(p(p((v=S[ge-2],g(v,17)^g(v,19)^M(v,10)),S[ge-7]),(v=S[ge-15],g(v,7)^g(v,18)^M(v,3))),S[ge-16]),C=p(p(p(p(fe,g(v=z,6)^g(v,11)^g(v,25)),z&Q^~z&K),w[ge]),S[ge]),_=p(g(_=D,2)^g(_,13)^g(_,22),D&B^D&X^B&X),fe=K,K=Q,Q=z,z=p(Y,C),Y=X,X=B,B=D,D=p(C,_);T[0]=p(D,T[0]),T[1]=p(B,T[1]),T[2]=p(X,T[2]),T[3]=p(Y,T[3]),T[4]=p(z,T[4]),T[5]=p(Q,T[5]),T[6]=p(K,T[6]),T[7]=p(fe,T[7])}return T}var m=t("./helpers"),g=function(x,b){return x>>>b|x<<32-b},M=function(x,b){return x>>>b};n.exports=function(x){return m.hash(x,y,32,!0)}}).call(this,t("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},t("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/crypto-browserify/sha256.js","/node_modules/gulp-browserify/node_modules/crypto-browserify")},{"./helpers":4,buffer:3,lYpoI2:11}],10:[function(t,n,r){(function(s,o,a,l,c,u,h,f,d){r.read=function(p,y,m,g,A){var x,b,C=8*A-g-1,w=(1<<C)-1,T=w>>1,S=-7,_=m?A-1:0,v=m?-1:1,A=p[y+_];for(_+=v,x=A&(1<<-S)-1,A>>=-S,S+=C;0<S;x=256*x+p[y+_],_+=v,S-=8);for(b=x&(1<<-S)-1,x>>=-S,S+=g;0<S;b=256*b+p[y+_],_+=v,S-=8);if(x===0)x=1-T;else{if(x===w)return b?NaN:1/0*(A?-1:1);b+=Math.pow(2,g),x-=T}return(A?-1:1)*b*Math.pow(2,x-g)},r.write=function(p,y,m,g,M,D){var b,C,w=8*D-M-1,T=(1<<w)-1,S=T>>1,_=M===23?Math.pow(2,-24)-Math.pow(2,-77):0,v=g?0:D-1,A=g?1:-1,D=y<0||y===0&&1/y<0?1:0;for(y=Math.abs(y),isNaN(y)||y===1/0?(C=isNaN(y)?1:0,b=T):(b=Math.floor(Math.log(y)/Math.LN2),y*(g=Math.pow(2,-b))<1&&(b--,g*=2),2<=(y+=1<=b+S?_/g:_*Math.pow(2,1-S))*g&&(b++,g/=2),T<=b+S?(C=0,b=T):1<=b+S?(C=(y*g-1)*Math.pow(2,M),b+=S):(C=y*Math.pow(2,S-1)*Math.pow(2,M),b=0));8<=M;p[m+v]=255&C,v+=A,C/=256,M-=8);for(b=b<<M|C,w+=M;0<w;p[m+v]=255&b,v+=A,b/=256,w-=8);p[m+v-A]|=128*D}}).call(this,t("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},t("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/ieee754/index.js","/node_modules/gulp-browserify/node_modules/ieee754")},{buffer:3,lYpoI2:11}],11:[function(t,n,r){(function(s,o,a,l,c,u,h,f,d){var p,y,m;function g(){}(s=n.exports={}).nextTick=(y=typeof window<"u"&&window.setImmediate,m=typeof window<"u"&&window.postMessage&&window.addEventListener,y?function(M){return window.setImmediate(M)}:m?(p=[],window.addEventListener("message",function(M){var x=M.source;x!==window&&x!==null||M.data!=="process-tick"||(M.stopPropagation(),0<p.length&&p.shift()())},!0),function(M){p.push(M),window.postMessage("process-tick","*")}):function(M){setTimeout(M,0)}),s.title="browser",s.browser=!0,s.env={},s.argv=[],s.on=g,s.addListener=g,s.once=g,s.off=g,s.removeListener=g,s.removeAllListeners=g,s.emit=g,s.binding=function(M){throw new Error("process.binding is not supported")},s.cwd=function(){return"/"},s.chdir=function(M){throw new Error("process.chdir is not supported")}}).call(this,t("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},t("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/process/browser.js","/node_modules/gulp-browserify/node_modules/process")},{buffer:3,lYpoI2:11}]},{},[1])(1)})}(gv)),gv.exports}w3();var _v,yv;function yx(){return yv||(yv=1,_v=["precision","highp","mediump","lowp","attribute","const","uniform","varying","break","continue","do","for","while","if","else","in","out","inout","float","int","uint","void","bool","true","false","discard","return","mat2","mat3","mat4","vec2","vec3","vec4","ivec2","ivec3","ivec4","bvec2","bvec3","bvec4","sampler1D","sampler2D","sampler3D","samplerCube","sampler1DShadow","sampler2DShadow","struct","asm","class","union","enum","typedef","template","this","packed","goto","switch","default","inline","noinline","volatile","public","static","extern","external","interface","long","short","double","half","fixed","unsigned","input","output","hvec2","hvec3","hvec4","dvec2","dvec3","dvec4","fvec2","fvec3","fvec4","sampler2DRect","sampler3DRect","sampler2DRectShadow","sizeof","cast","namespace","using"]),_v}var xv,bv;function T3(){return bv||(bv=1,xv=["<<=",">>=","++","--","<<",">>","<=",">=","==","!=","&&","||","+=","-=","*=","/=","%=","&=","^^","^=","|=","(",")","[","]",".","!","~","*","/","%","+","-","<",">","&","^","|","?",":","=",",",";","{","}"]),xv}var Mv,Sv;function xx(){return Sv||(Sv=1,Mv=["abs","acos","all","any","asin","atan","ceil","clamp","cos","cross","dFdx","dFdy","degrees","distance","dot","equal","exp","exp2","faceforward","floor","fract","gl_BackColor","gl_BackLightModelProduct","gl_BackLightProduct","gl_BackMaterial","gl_BackSecondaryColor","gl_ClipPlane","gl_ClipVertex","gl_Color","gl_DepthRange","gl_DepthRangeParameters","gl_EyePlaneQ","gl_EyePlaneR","gl_EyePlaneS","gl_EyePlaneT","gl_Fog","gl_FogCoord","gl_FogFragCoord","gl_FogParameters","gl_FragColor","gl_FragCoord","gl_FragData","gl_FragDepth","gl_FragDepthEXT","gl_FrontColor","gl_FrontFacing","gl_FrontLightModelProduct","gl_FrontLightProduct","gl_FrontMaterial","gl_FrontSecondaryColor","gl_LightModel","gl_LightModelParameters","gl_LightModelProducts","gl_LightProducts","gl_LightSource","gl_LightSourceParameters","gl_MaterialParameters","gl_MaxClipPlanes","gl_MaxCombinedTextureImageUnits","gl_MaxDrawBuffers","gl_MaxFragmentUniformComponents","gl_MaxLights","gl_MaxTextureCoords","gl_MaxTextureImageUnits","gl_MaxTextureUnits","gl_MaxVaryingFloats","gl_MaxVertexAttribs","gl_MaxVertexTextureImageUnits","gl_MaxVertexUniformComponents","gl_ModelViewMatrix","gl_ModelViewMatrixInverse","gl_ModelViewMatrixInverseTranspose","gl_ModelViewMatrixTranspose","gl_ModelViewProjectionMatrix","gl_ModelViewProjectionMatrixInverse","gl_ModelViewProjectionMatrixInverseTranspose","gl_ModelViewProjectionMatrixTranspose","gl_MultiTexCoord0","gl_MultiTexCoord1","gl_MultiTexCoord2","gl_MultiTexCoord3","gl_MultiTexCoord4","gl_MultiTexCoord5","gl_MultiTexCoord6","gl_MultiTexCoord7","gl_Normal","gl_NormalMatrix","gl_NormalScale","gl_ObjectPlaneQ","gl_ObjectPlaneR","gl_ObjectPlaneS","gl_ObjectPlaneT","gl_Point","gl_PointCoord","gl_PointParameters","gl_PointSize","gl_Position","gl_ProjectionMatrix","gl_ProjectionMatrixInverse","gl_ProjectionMatrixInverseTranspose","gl_ProjectionMatrixTranspose","gl_SecondaryColor","gl_TexCoord","gl_TextureEnvColor","gl_TextureMatrix","gl_TextureMatrixInverse","gl_TextureMatrixInverseTranspose","gl_TextureMatrixTranspose","gl_Vertex","greaterThan","greaterThanEqual","inversesqrt","length","lessThan","lessThanEqual","log","log2","matrixCompMult","max","min","mix","mod","normalize","not","notEqual","pow","radians","reflect","refract","sign","sin","smoothstep","sqrt","step","tan","texture2D","texture2DLod","texture2DProj","texture2DProjLod","textureCube","textureCubeLod","texture2DLodEXT","texture2DProjLodEXT","textureCubeLodEXT","texture2DGradEXT","texture2DProjGradEXT","textureCubeGradEXT"]),Mv}var yf,wv;function E3(){if(wv)return yf;wv=1;var i=yx();return yf=i.slice().concat(["layout","centroid","smooth","case","mat2x2","mat2x3","mat2x4","mat3x2","mat3x3","mat3x4","mat4x2","mat4x3","mat4x4","uvec2","uvec3","uvec4","samplerCubeShadow","sampler2DArray","sampler2DArrayShadow","isampler2D","isampler3D","isamplerCube","isampler2DArray","usampler2D","usampler3D","usamplerCube","usampler2DArray","coherent","restrict","readonly","writeonly","resource","atomic_uint","noperspective","patch","sample","subroutine","common","partition","active","filter","image1D","image2D","image3D","imageCube","iimage1D","iimage2D","iimage3D","iimageCube","uimage1D","uimage2D","uimage3D","uimageCube","image1DArray","image2DArray","iimage1DArray","iimage2DArray","uimage1DArray","uimage2DArray","image1DShadow","image2DShadow","image1DArrayShadow","image2DArrayShadow","imageBuffer","iimageBuffer","uimageBuffer","sampler1DArray","sampler1DArrayShadow","isampler1D","isampler1DArray","usampler1D","usampler1DArray","isampler2DRect","usampler2DRect","samplerBuffer","isamplerBuffer","usamplerBuffer","sampler2DMS","isampler2DMS","usampler2DMS","sampler2DMSArray","isampler2DMSArray","usampler2DMSArray"]),yf}var xf,Tv;function A3(){if(Tv)return xf;Tv=1;var i=xx();return i=i.slice().filter(function(e){return!/^(gl\_|texture)/.test(e)}),xf=i.concat(["gl_VertexID","gl_InstanceID","gl_Position","gl_PointSize","gl_FragCoord","gl_FrontFacing","gl_FragDepth","gl_PointCoord","gl_MaxVertexAttribs","gl_MaxVertexUniformVectors","gl_MaxVertexOutputVectors","gl_MaxFragmentInputVectors","gl_MaxVertexTextureImageUnits","gl_MaxCombinedTextureImageUnits","gl_MaxTextureImageUnits","gl_MaxFragmentUniformVectors","gl_MaxDrawBuffers","gl_MinProgramTexelOffset","gl_MaxProgramTexelOffset","gl_DepthRangeParameters","gl_DepthRange","trunc","round","roundEven","isnan","isinf","floatBitsToInt","floatBitsToUint","intBitsToFloat","uintBitsToFloat","packSnorm2x16","unpackSnorm2x16","packUnorm2x16","unpackUnorm2x16","packHalf2x16","unpackHalf2x16","outerProduct","transpose","determinant","inverse","texture","textureSize","textureProj","textureLod","textureOffset","texelFetch","texelFetchOffset","textureProjOffset","textureLodOffset","textureProjLod","textureProjLodOffset","textureGrad","textureGradOffset","textureProjGrad","textureProjGradOffset"]),xf}var bf,Ev;function C3(){if(Ev)return bf;Ev=1,bf=b;var i=yx(),e=T3(),t=xx(),n=E3(),r=A3(),s=999,o=9999,a=0,l=1,c=2,u=3,h=4,f=5,d=6,p=7,y=8,m=9,g=10,M=11,x=["block-comment","line-comment","preprocessor","operator","integer","float","ident","builtin","keyword","whitespace","eof","integer"];function b(C){var w=0,T=0,S=s,_,v,A=[],D=[],B=1,X=0,Y=0,z=!1,Q=!1,K="",fe;C=C||{};var ge=t,oe=i;C.version==="300 es"&&(ge=r,oe=n);for(var Te={},ke={},w=0;w<ge.length;w++)Te[ge[w]]=!0;for(var w=0;w<oe.length;w++)ke[oe[w]]=!0;return function(H){return D=[],H!==null?ve(H):Re()};function ae(H){H.length&&D.push({type:x[S],data:H,position:Y,line:B,column:X})}function ve(H){w=0,H.toString&&(H=H.toString()),K+=H.replace(/\r\n/g,`
`),fe=K.length;for(var ee;_=K[w],w<fe;){switch(ee=w,S){case a:w=q();break;case l:w=F();break;case c:w=I();break;case u:w=P();break;case h:w=G();break;case M:w=E();break;case f:w=V();break;case o:w=$();break;case m:w=le();break;case s:w=Se();break}if(ee!==w)switch(K[ee]){case`
`:X=0,++B;break;default:++X;break}}return T+=w,K=K.slice(w),D}function Re(H){return A.length&&ae(A.join("")),S=g,ae("(eof)"),D}function Se(){return A=A.length?[]:A,v==="/"&&_==="*"?(Y=T+w-1,S=a,v=_,w+1):v==="/"&&_==="/"?(Y=T+w-1,S=l,v=_,w+1):_==="#"?(S=c,Y=T+w,w):/\s/.test(_)?(S=m,Y=T+w,w):(z=/\d/.test(_),Q=/[^\w_]/.test(_),Y=T+w,S=z?h:Q?u:o,w)}function le(){return/[^\s]/g.test(_)?(ae(A.join("")),S=s,w):(A.push(_),v=_,w+1)}function I(){return(_==="\r"||_===`
`)&&v!=="\\"?(ae(A.join("")),S=s,w):(A.push(_),v=_,w+1)}function F(){return I()}function q(){return _==="/"&&v==="*"?(A.push(_),ae(A.join("")),S=s,w+1):(A.push(_),v=_,w+1)}function P(){if(v==="."&&/\d/.test(_))return S=f,w;if(v==="/"&&_==="*")return S=a,w;if(v==="/"&&_==="/")return S=l,w;if(_==="."&&A.length){for(;L(A););return S=f,w}if(_===";"||_===")"||_==="("){if(A.length)for(;L(A););return ae(_),S=s,w+1}var H=A.length===2&&_!=="=";if(/[\w_\d\s]/.test(_)||H){for(;L(A););return S=s,w}return A.push(_),v=_,w+1}function L(H){var ee=0,Z,J;do{if(Z=e.indexOf(H.slice(0,H.length+ee).join("")),J=e[Z],Z===-1){if(ee--+H.length>0)continue;J=H.slice(0,1).join("")}return ae(J),Y+=J.length,A=A.slice(J.length),A.length}while(!0)}function E(){return/[^a-fA-F0-9]/.test(_)?(ae(A.join("")),S=s,w):(A.push(_),v=_,w+1)}function G(){return _==="."||/[eE]/.test(_)?(A.push(_),S=f,v=_,w+1):_==="x"&&A.length===1&&A[0]==="0"?(S=M,A.push(_),v=_,w+1):/[^\d]/.test(_)?(ae(A.join("")),S=s,w):(A.push(_),v=_,w+1)}function V(){return _==="f"&&(A.push(_),v=_,w+=1),/[eE]/.test(_)||(_==="-"||_==="+")&&/[eE]/.test(v)?(A.push(_),v=_,w+1):/[^\d]/.test(_)?(ae(A.join("")),S=s,w):(A.push(_),v=_,w+1)}function $(){if(/[^\d\w_]/.test(_)){var H=A.join("");return ke[H]?S=y:Te[H]?S=p:S=d,ae(A.join("")),S=s,w}return A.push(_),v=_,w+1}}return bf}var Mf,Av;function R3(){if(Av)return Mf;Av=1;var i=C3();Mf=e;function e(t,n){var r=i(n),s=[];return s=s.concat(r(t)),s=s.concat(r(null)),s}return Mf}R3();function I3(i,e){if(typeof i!="object"||i===null)return i;var t=i[Symbol.toPrimitive];if(t!==void 0){var n=t.call(i,e);if(typeof n!="object")return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(i)}function P3(i){var e=I3(i,"string");return typeof e=="symbol"?e:String(e)}function yt(i,e,t){return e=P3(e),e in i?Object.defineProperty(i,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):i[e]=t,i}var Ze={position:"csm_Position",positionRaw:"csm_PositionRaw",pointSize:"csm_PointSize",fragColor:"csm_FragColor",diffuseColor:"csm_DiffuseColor",normal:"csm_Normal",roughness:"csm_Roughness",metalness:"csm_Metalness",emissive:"csm_Emissive",ao:"csm_AO",bump:"csm_Bump",depthAlpha:"csm_DepthAlpha"},In,Ys;In={},yt(In,"".concat(Ze.normal),{"#include <beginnormal_vertex>":`
    vec3 objectNormal = `.concat(Ze.normal,`;
    #ifdef USE_TANGENT
	    vec3 objectTangent = vec3( tangent.xyz );
    #endif
    `)}),yt(In,"".concat(Ze.position),{"#include <begin_vertex>":`
    vec3 transformed = `.concat(Ze.position,`;
  `)}),yt(In,"".concat(Ze.positionRaw),{"#include <begin_vertex>":`
    vec4 csm_internal_positionUnprojected = `.concat(Ze.positionRaw,`;
    mat4x4 csm_internal_unprojectMatrix = projectionMatrix * modelViewMatrix;
    #ifdef USE_INSTANCING
      csm_internal_unprojectMatrix = csm_internal_unprojectMatrix * instanceMatrix;
    #endif
    csm_internal_positionUnprojected = inverse(csm_internal_unprojectMatrix) * csm_internal_positionUnprojected;
    vec3 transformed = csm_internal_positionUnprojected.xyz;
  `)}),yt(In,"".concat(Ze.pointSize),{"gl_PointSize = size;":`
    gl_PointSize = `.concat(Ze.pointSize,`;
    `)}),yt(In,"".concat(Ze.diffuseColor),{"#include <color_fragment>":`
    #include <color_fragment>
    diffuseColor = `.concat(Ze.diffuseColor,`;
  `)}),yt(In,"".concat(Ze.fragColor),{"#include <dithering_fragment>":`
    #include <dithering_fragment>
    gl_FragColor  = `.concat(Ze.fragColor,`;
  `)}),yt(In,"".concat(Ze.emissive),{"vec3 totalEmissiveRadiance = emissive;":`
    vec3 totalEmissiveRadiance = `.concat(Ze.emissive,`;
    `)}),yt(In,"".concat(Ze.roughness),{"#include <roughnessmap_fragment>":`
    #include <roughnessmap_fragment>
    roughnessFactor = `.concat(Ze.roughness,`;
    `)}),yt(In,"".concat(Ze.metalness),{"#include <metalnessmap_fragment>":`
    #include <metalnessmap_fragment>
    metalnessFactor = `.concat(Ze.metalness,`;
    `)}),yt(In,"".concat(Ze.ao),{"#include <aomap_fragment>":`
    #include <aomap_fragment>
    reflectedLight.indirectDiffuse *= 1. - `.concat(Ze.ao,`;
    `)}),yt(In,"".concat(Ze.bump),{"#include <normal_fragment_maps>":`
    #include <normal_fragment_maps>

    vec3 csm_internal_orthogonal = `.concat(Ze.bump," - (dot(").concat(Ze.bump,`, normal) * normal);
    vec3 csm_internal_projectedbump = mat3(csm_internal_vModelViewMatrix) * csm_internal_orthogonal;
    normal = normalize(normal - csm_internal_projectedbump);
    `)}),yt(In,"".concat(Ze.depthAlpha),{"gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );":`
      gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity * `.concat(Ze.depthAlpha,` );
    `),"gl_FragColor = packDepthToRGBA( fragCoordZ );":`
      gl_FragColor = packDepthToRGBA( fragCoordZ );
      gl_FragColor.a *= `.concat(Ze.depthAlpha,`;
    `)});Ys={},yt(Ys,"".concat(Ze.position),{"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );":`
    gl_Position = projectionMatrix * modelViewMatrix * vec4( `.concat(Ze.position,`, 1.0 );
  `)}),yt(Ys,"".concat(Ze.positionRaw),{"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );":`
    gl_Position = `.concat(Ze.position,`;
  `)}),yt(Ys,"".concat(Ze.diffuseColor),{"gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );":`
    gl_FragColor = `.concat(Ze.diffuseColor,`;
  `)}),yt(Ys,"".concat(Ze.fragColor),{"gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );":`
    gl_FragColor = `.concat(Ze.fragColor,`;
  `)});var Pn;Pn={},yt(Pn,"".concat(Ze.position),"*"),yt(Pn,"".concat(Ze.positionRaw),"*"),yt(Pn,"".concat(Ze.normal),"*"),yt(Pn,"".concat(Ze.pointSize),["PointsMaterial"]),yt(Pn,"".concat(Ze.diffuseColor),"*"),yt(Pn,"".concat(Ze.fragColor),"*"),yt(Pn,"".concat(Ze.emissive),["MeshStandardMaterial","MeshPhysicalMaterial"]),yt(Pn,"".concat(Ze.roughness),["MeshStandardMaterial","MeshPhysicalMaterial"]),yt(Pn,"".concat(Ze.metalness),["MeshStandardMaterial","MeshPhysicalMaterial"]),yt(Pn,"".concat(Ze.ao),["MeshStandardMaterial","MeshPhysicalMaterial","MeshBasicMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial"]),yt(Pn,"".concat(Ze.bump),["MeshLambertMaterial","MeshMatcapMaterial","MeshNormalMaterial","MeshPhongMaterial","MeshPhysicalMaterial","MeshStandardMaterial","MeshToonMaterial","ShadowMaterial"]),yt(Pn,"".concat(Ze.depthAlpha),"*");var L3=`void main() {
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}`,D3=`#include <common>

void main() {
  vec2 center = vec2(0., 1.);
  float rotation = 0.0;

  
  
  float size = 0.03;

  vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
  vec2 scale;
  scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
  scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );

  bool isPerspective = isPerspectiveMatrix( projectionMatrix );
  if ( isPerspective ) scale *= - mvPosition.z;

  vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale * size;
  vec2 rotatedPosition;
  rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
  rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
  mvPosition.xy += rotatedPosition;

  gl_Position = projectionMatrix * mvPosition;
}`;const rl=new O(0,0,0),Dp=new O(0,0,0),U3=new O(0,0,0);function Cv(i,e,t){const n=rl.setFromMatrixPosition(i.matrixWorld);n.project(e);const r=t.width/2,s=t.height/2;return[(Number.isNaN(n.x)?0:n.x)*r+r,-(n.y*s)+s,n.z]}function N3(i,e){const t=rl.setFromMatrixPosition(i.matrixWorld),n=Dp.setFromMatrixPosition(e.matrixWorld),r=t.sub(n),s=e.getWorldDirection(U3);return r.angleTo(s)>Math.PI/2}function O3(i,e,t,n){const r=rl.setFromMatrixPosition(i.matrixWorld),s=r.clone();s.project(e),t.setFromCamera(new de(s.x,s.y),e);const o=t.intersectObjects(n,!0);if(o.length>0){const a=o[0].distance;return r.distanceTo(t.ray.origin)<a}return!0}function F3(i,e){if(e instanceof Gi)return e.zoom;if(e instanceof Mt){const t=rl.setFromMatrixPosition(i.matrixWorld),n=Dp.setFromMatrixPosition(e.matrixWorld),r=e.fov*Math.PI/180,s=t.distanceTo(n);return 1/(2*Math.tan(r/2)*s)}else return 1}function B3(i,e,t){if(e instanceof Mt||e instanceof Gi){const n=rl.setFromMatrixPosition(i.matrixWorld),r=Dp.setFromMatrixPosition(e.matrixWorld),s=n.distanceTo(r),o=(t[1]-t[0])/(e.far-e.near),a=t[1]-o*e.far;return Math.round(o*s+a)}}const dd=i=>Math.abs(i)<1e-10?0:i;function bx(i,e,t=""){let n="matrix3d(";for(let r=0;r!==16;r++)n+=dd(e[r]*i.elements[r])+(r!==15?",":")");return t+n}const z3=(i=>e=>bx(e,i))([1,-1,1,1,1,-1,1,1,1,-1,1,1,1,-1,1,1]),k3=(i=>(e,t)=>bx(e,i(t),"translate(-50%,-50%)"))(i=>[1/i,1/i,1/i,1,-1/i,-1/i,-1/i,-1,1/i,1/i,1/i,1,1,1,1,1]),V3=["geometry","material"];new Ar;var pd={exports:{}},H3=pd.exports,Rv;function G3(){return Rv||(Rv=1,function(i,e){(function(t,n){i.exports=n()})(H3,function(){var t=function(){function n(d){return o.appendChild(d.dom),d}function r(d){for(var p=0;p<o.children.length;p++)o.children[p].style.display=p===d?"block":"none";s=d}var s=0,o=document.createElement("div");o.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",o.addEventListener("click",function(d){d.preventDefault(),r(++s%o.children.length)},!1);var a=(performance||Date).now(),l=a,c=0,u=n(new t.Panel("FPS","#0ff","#002")),h=n(new t.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var f=n(new t.Panel("MB","#f08","#201"));return r(0),{REVISION:16,dom:o,addPanel:n,showPanel:r,begin:function(){a=(performance||Date).now()},end:function(){c++;var d=(performance||Date).now();if(h.update(d-a,200),d>l+1e3&&(u.update(1e3*c/(d-l),100),l=d,c=0,f)){var p=performance.memory;f.update(p.usedJSHeapSize/1048576,p.jsHeapSizeLimit/1048576)}return d},update:function(){a=this.end()},domElement:o,setMode:r}};return t.Panel=function(n,r,s){var o=1/0,a=0,l=Math.round,c=l(window.devicePixelRatio||1),u=80*c,h=48*c,f=3*c,d=2*c,p=3*c,y=15*c,m=74*c,g=30*c,M=document.createElement("canvas");M.width=u,M.height=h,M.style.cssText="width:80px;height:48px";var x=M.getContext("2d");return x.font="bold "+9*c+"px Helvetica,Arial,sans-serif",x.textBaseline="top",x.fillStyle=s,x.fillRect(0,0,u,h),x.fillStyle=r,x.fillText(n,f,d),x.fillRect(p,y,m,g),x.fillStyle=s,x.globalAlpha=.9,x.fillRect(p,y,m,g),{dom:M,update:function(b,C){o=Math.min(o,b),a=Math.max(a,b),x.fillStyle=s,x.globalAlpha=1,x.fillRect(0,0,u,y),x.fillStyle=r,x.fillText(l(b)+" "+n+" ("+l(o)+"-"+l(a)+")",f,d),x.drawImage(M,p+c,y,m-c,g,p,y,m-c,g),x.fillRect(p+m-c,y,c,g),x.fillStyle=s,x.globalAlpha=.9,x.fillRect(p+m-c,y,c,l((1-b/C)*g))}}},t})}(pd)),pd.exports}G3();const W3={key:0,args:[0,1,64]},X3={key:1,args:[.5,1,64]},Y3={key:2},q3=["tone-mapped","map","side","color"];new Ee(16777215);const j3=(i,e,t=1)=>Array.from({length:(e-i)/t+1},(n,r)=>i+r*t),va=["S","D","F","J","K","L"];function md(i){return va.reduce((e,t)=>({...e,[t]:i(t)}),{})}/*!
 * pinia v3.0.3
 * (c) 2025 Eduardo San Martin Morote
 * @license MIT
 */let Mx;const rh=i=>Mx=i,Sx=Symbol();function gd(i){return i&&typeof i=="object"&&Object.prototype.toString.call(i)==="[object Object]"&&typeof i.toJSON!="function"}var _a;(function(i){i.direct="direct",i.patchObject="patch object",i.patchFunction="patch function"})(_a||(_a={}));function $3(){const i=Hv(!0),e=i.run(()=>bt({}));let t=[],n=[];const r=Rd({install(s){rh(r),r._a=s,s.provide(Sx,r),s.config.globalProperties.$pinia=r,n.forEach(o=>t.push(o)),n=[]},use(s){return this._a?t.push(s):n.push(s),this},_p:t,_a:null,_e:i,_s:new Map,state:e});return r}const wx=()=>{};function Iv(i,e,t,n=wx){i.push(e);const r=()=>{const s=i.indexOf(e);s>-1&&(i.splice(s,1),n())};return!t&&za()&&gu(r),r}function qs(i,...e){i.slice().forEach(t=>{t(...e)})}const Z3=i=>i(),Pv=Symbol(),Sf=Symbol();function vd(i,e){i instanceof Map&&e instanceof Map?e.forEach((t,n)=>i.set(n,t)):i instanceof Set&&e instanceof Set&&e.forEach(i.add,i);for(const t in e){if(!e.hasOwnProperty(t))continue;const n=e[t],r=i[t];gd(r)&&gd(n)&&i.hasOwnProperty(t)&&!Rt(n)&&!_r(n)?i[t]=vd(r,n):i[t]=n}return i}const K3=Symbol();function J3(i){return!gd(i)||!Object.prototype.hasOwnProperty.call(i,K3)}const{assign:cr}=Object;function Q3(i){return!!(Rt(i)&&i.effect)}function eL(i,e,t,n){const{state:r,actions:s,getters:o}=e,a=t.state.value[i];let l;function c(){a||(t.state.value[i]=r?r():{});const u=wo(t.state.value[i]);return cr(u,s,Object.keys(o||{}).reduce((h,f)=>(h[f]=Rd(Pt(()=>{rh(t);const d=t._s.get(i);return o[f].call(d,d)})),h),{}))}return l=Tx(i,c,e,t,n,!0),l}function Tx(i,e,t={},n,r,s){let o;const a=cr({actions:{}},t),l={deep:!0};let c,u,h=[],f=[],d;const p=n.state.value[i];!s&&!p&&(n.state.value[i]={}),bt({});let y;function m(S){let _;c=u=!1,typeof S=="function"?(S(n.state.value[i]),_={type:_a.patchFunction,storeId:i,events:d}):(vd(n.state.value[i],S),_={type:_a.patchObject,payload:S,storeId:i,events:d});const v=y=Symbol();Id().then(()=>{y===v&&(c=!0)}),u=!0,qs(h,_,n.state.value[i])}const g=s?function(){const{state:_}=t,v=_?_():{};this.$patch(A=>{cr(A,v)})}:wx;function M(){o.stop(),h=[],f=[],n._s.delete(i)}const x=(S,_="")=>{if(Pv in S)return S[Sf]=_,S;const v=function(){rh(n);const A=Array.from(arguments),D=[],B=[];function X(Q){D.push(Q)}function Y(Q){B.push(Q)}qs(f,{args:A,name:v[Sf],store:C,after:X,onError:Y});let z;try{z=S.apply(this&&this.$id===i?this:C,A)}catch(Q){throw qs(B,Q),Q}return z instanceof Promise?z.then(Q=>(qs(D,Q),Q)).catch(Q=>(qs(B,Q),Promise.reject(Q))):(qs(D,z),z)};return v[Pv]=!0,v[Sf]=_,v},b={_p:n,$id:i,$onAction:Iv.bind(null,f),$patch:m,$reset:g,$subscribe(S,_={}){const v=Iv(h,S,_.detached,()=>A()),A=o.run(()=>Ft(()=>n.state.value[i],D=>{(_.flush==="sync"?u:c)&&S({storeId:i,type:_a.direct,events:d},D)},cr({},l,_)));return v},$dispose:M},C=ka(b);n._s.set(i,C);const T=(n._a&&n._a.runWithContext||Z3)(()=>n._e.run(()=>(o=Hv()).run(()=>e({action:x}))));for(const S in T){const _=T[S];if(Rt(_)&&!Q3(_)||_r(_))s||(p&&J3(_)&&(Rt(_)?_.value=p[S]:vd(_,p[S])),n.state.value[i][S]=_);else if(typeof _=="function"){const v=x(_,S);T[S]=v,a.actions[S]=_}}return cr(C,T),cr(pt(C),T),Object.defineProperty(C,"$state",{get:()=>n.state.value[i],set:S=>{m(_=>{cr(_,S)})}}),n._p.forEach(S=>{cr(C,o.run(()=>S({store:C,app:n._a,pinia:n,options:a})))}),p&&s&&t.hydrate&&t.hydrate(C.$state,p),c=!0,u=!0,C}/*! #__NO_SIDE_EFFECTS__ */function Ex(i,e,t){let n;const r=typeof e=="function";n=r?t:e;function s(o,a){const l=Ud();return o=o||(l?rs(Sx,null):null),o&&rh(o),o=Mx,o._s.has(i)||(r?Tx(i,e,n,o):eL(i,n,o)),o._s.get(i)}return s.$id=i,s}const tL=Ex("input",()=>{const i=bt(md(s=>!1)),e=bt((()=>{if(localStorage.getItem("trackKeymap")){const o=JSON.parse(localStorage.getItem("trackKeymap"));if(va.every(a=>o[a]))return o}return md(o=>o.toLowerCase())})());function t(s){i.value[s]||(i.value[s]=!0)}function n(s){i.value[s]&&(i.value[s]=!1)}function r(s,o){e.value[s]=o.toLowerCase(),localStorage.setItem("trackKeymap",JSON.stringify(e.value))}return{activeTracks:i,trackKeymap:e,activateTrack:t,deactivateTrack:n,setTrackKeyMapping:r}}),nL={clearColor:new Ee().setHex(8575941),backgroundColor:new Ee().setHex(15382578),foregroundColor:new Ee().setHex(16777215),activeColor:new Ee().setHex(8575941)},Ax=Ex("theme",()=>{const i=bt(nL);function e(t){i.value=t}return{currentTheme:i,setTheme:e}});function iL(i){return za()?(gu(i),!0):!1}const rL=typeof window<"u"&&typeof document<"u";typeof WorkerGlobalScope<"u"&&globalThis instanceof WorkerGlobalScope;const sL=Object.prototype.toString,oL=i=>sL.call(i)==="[object Object]";function wf(i){return Array.isArray(i)?i:[i]}function aL(i,e,t){return Ft(i,e,{...t,immediate:!0})}const lL=rL?window:void 0;function cL(i){var e;const t=Et(i);return(e=t?.$el)!=null?e:t}function Lv(...i){const e=[],t=()=>{e.forEach(a=>a()),e.length=0},n=(a,l,c,u)=>(a.addEventListener(l,c,u),()=>a.removeEventListener(l,c,u)),r=Pt(()=>{const a=wf(Et(i[0])).filter(l=>l!=null);return a.every(l=>typeof l!="string")?a:void 0}),s=aL(()=>{var a,l;return[(l=(a=r.value)==null?void 0:a.map(c=>cL(c)))!=null?l:[lL].filter(c=>c!=null),wf(Et(r.value?i[1]:i[0])),wf(He(r.value?i[2]:i[1])),Et(r.value?i[3]:i[2])]},([a,l,c,u])=>{if(t(),!a?.length||!l?.length||!c?.length)return;const h=oL(u)?{...u}:u;e.push(...a.flatMap(f=>l.flatMap(d=>c.map(p=>n(f,d,p,h)))))},{flush:"post"}),o=()=>{s(),t()};return iL(t),o}const uL=["rotation"],hL={position:[0,0,-.5]},fL=["color"],dL=["color"],pL=["position","rotation"],mL=["args"],gL=["color"],vL=["color"],_L=["position","rotation"],yL=["args"],xL=["color"],bL=["position","rotation"],ML=["args"],SL=["color"],Dv="fonts/FiraCodeRegular.json",Yo=-3,wL=Yi({__name:"Level",setup(i){const{activeTracks:e,trackKeymap:t,activateTrack:n,deactivateTrack:r}=tL(),s=ut(md(l=>{})),{currentTheme:o}=Ax(),{onBeforeRender:a}=Rp();return a(({})=>{va.forEach(l=>{s.value[l].instance&&(s.value[l].instance.material.color=e[l]?o.activeColor:o.foregroundColor)})}),va.map(l=>{Lv("keydown",c=>{c.key===t[l]&&n(l)}),Lv("keyup",c=>{c.key===t[l]&&r(l)})}),(l,c)=>(kt(),Nn(un,null,[Gt("TresGridHelper",{rotation:[Math.PI/2,0,0],args:[9,18]},null,8,uL),Gt("TresMesh",hL,[c[0]||(c[0]=Gt("TresBoxGeometry",{args:[7,9,1]},null,-1)),Gt("TresMeshBasicMaterial",{color:He(o).backgroundColor},null,8,fL)]),(kt(!0),Nn(un,null,Xp(He(j3)(0,7),u=>(kt(),us(em,null,{default:$s(()=>[Ot(He(mv),{position:[-3.25,Yo+u,0],size:.3,height:.001,font:Dv,center:""},{default:$s(()=>[Of(Ef(u.toString())+" ",1),Gt("TresMeshBasicMaterial",{color:He(o).foregroundColor},null,8,dL)]),_:2},1032,["position"])]),_:2},1024))),256)),Gt("TresMesh",{position:[0,Yo,0],rotation:[Math.PI/2,Math.PI,Math.PI/2]},[Gt("TresCylinderGeometry",{args:[.05,.05,6,6,1,!1,0,Math.PI]},null,8,mL),Gt("TresMeshBasicMaterial",{color:He(o).foregroundColor},null,8,gL)],8,pL),(kt(!0),Nn(un,null,Xp(He(va),(u,h)=>(kt(),us(em,null,{default:$s(()=>[Ot(He(mv),{ref_for:!0,ref:f=>{f&&(s.value[u]=f)},position:[-2.5+h,Yo-.5,0],size:.3,height:.001,font:Dv,center:"","need-updates":""},{default:$s(()=>[Of(Ef(u)+" ",1),Gt("TresMeshBasicMaterial",{color:He(o).foregroundColor},null,8,vL)]),_:2},1032,["position"])]),_:2},1024))),256)),Gt("TresMesh",{position:[.5,Yo+1,0],rotation:[Math.PI/2,Math.PI,Math.PI/2]},[Gt("TresCylinderGeometry",{args:[.125,.125,1,6,1,!1,0,Math.PI]},null,8,yL),Gt("TresMeshBasicMaterial",{color:He(o).foregroundColor},null,8,xL)],8,_L),Gt("TresMesh",{position:[-.5,Yo+1.1,0],rotation:[Math.PI/2,Math.PI,Math.PI/2]},[Gt("TresCylinderGeometry",{args:[.125,.125,1,6,1,!1,0,Math.PI]},null,8,ML),Gt("TresMeshBasicMaterial",{color:He(o).foregroundColor},null,8,SL)],8,bL)],64))}}),TL=Yi({__name:"App",setup(i){const{currentTheme:e}=Ax();return(t,n)=>(kt(),us(He(fP),{"clear-color":"#"+He(e).clearColor.getHexString(),"window-size":""},{default:$s(()=>[n[0]||(n[0]=Gt("TresPerspectiveCamera",{position:[0,-6,10],"look-at":[0,0,0]},null,-1)),Ot(wL),n[1]||(n[1]=Gt("TresAmbientLight",{intensity:1},null,-1)),Ot(He(S3))]),_:1,__:[0,1]},8,["clear-color"]))}});QM(TL).use($3()).mount("#app");
